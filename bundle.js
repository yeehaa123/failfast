webpackJsonp([1],[function(n,g,e){e(235),e(239),n.exports=e(135)},,,,,,function(module,exports,__webpack_require__){eval("'use strict';\n\nvar getRootInstancesFromReactMount = __webpack_require__(114);\n\nvar injectedProvider = null,\n    didWarn = false;\n\nfunction warnOnce() {\n  if (!didWarn) {\n    console.warn(\n      'It appears that React Hot Loader isn\\'t configured correctly. ' +\n      'If you\\'re using NPM, make sure your dependencies don\\'t drag duplicate React distributions into their node_modules and that require(\"react\") corresponds to the React instance you render your app with.',\n      'If you\\'re using a precompiled version of React, see https://github.com/gaearon/react-hot-loader/tree/master/docs#usage-with-external-react for integration instructions.'\n    );\n  }\n\n  didWarn = true;\n}\n\nvar RootInstanceProvider = {\n  injection: {\n    injectProvider: function (provider) {\n      injectedProvider = provider;\n    }\n  },\n\n  getRootInstances: function (ReactMount) {\n    if (injectedProvider) {\n      return injectedProvider.getRootInstances();\n    }\n\n    var instances = ReactMount && getRootInstancesFromReactMount(ReactMount) || [];\n    if (!Object.keys(instances).length) {\n      warnOnce();\n    }\n\n    return instances;\n  }\n};\n\nmodule.exports = RootInstanceProvider;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvUm9vdEluc3RhbmNlUHJvdmlkZXIuanM/YzViNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBnZXRSb290SW5zdGFuY2VzRnJvbVJlYWN0TW91bnQgPSByZXF1aXJlKCcuL2dldFJvb3RJbnN0YW5jZXNGcm9tUmVhY3RNb3VudCcpO1xuXG52YXIgaW5qZWN0ZWRQcm92aWRlciA9IG51bGwsXG4gICAgZGlkV2FybiA9IGZhbHNlO1xuXG5mdW5jdGlvbiB3YXJuT25jZSgpIHtcbiAgaWYgKCFkaWRXYXJuKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgJ0l0IGFwcGVhcnMgdGhhdCBSZWFjdCBIb3QgTG9hZGVyIGlzblxcJ3QgY29uZmlndXJlZCBjb3JyZWN0bHkuICcgK1xuICAgICAgJ0lmIHlvdVxcJ3JlIHVzaW5nIE5QTSwgbWFrZSBzdXJlIHlvdXIgZGVwZW5kZW5jaWVzIGRvblxcJ3QgZHJhZyBkdXBsaWNhdGUgUmVhY3QgZGlzdHJpYnV0aW9ucyBpbnRvIHRoZWlyIG5vZGVfbW9kdWxlcyBhbmQgdGhhdCByZXF1aXJlKFwicmVhY3RcIikgY29ycmVzcG9uZHMgdG8gdGhlIFJlYWN0IGluc3RhbmNlIHlvdSByZW5kZXIgeW91ciBhcHAgd2l0aC4nLFxuICAgICAgJ0lmIHlvdVxcJ3JlIHVzaW5nIGEgcHJlY29tcGlsZWQgdmVyc2lvbiBvZiBSZWFjdCwgc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9nYWVhcm9uL3JlYWN0LWhvdC1sb2FkZXIvdHJlZS9tYXN0ZXIvZG9jcyN1c2FnZS13aXRoLWV4dGVybmFsLXJlYWN0IGZvciBpbnRlZ3JhdGlvbiBpbnN0cnVjdGlvbnMuJ1xuICAgICk7XG4gIH1cblxuICBkaWRXYXJuID0gdHJ1ZTtcbn1cblxudmFyIFJvb3RJbnN0YW5jZVByb3ZpZGVyID0ge1xuICBpbmplY3Rpb246IHtcbiAgICBpbmplY3RQcm92aWRlcjogZnVuY3Rpb24gKHByb3ZpZGVyKSB7XG4gICAgICBpbmplY3RlZFByb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgfVxuICB9LFxuXG4gIGdldFJvb3RJbnN0YW5jZXM6IGZ1bmN0aW9uIChSZWFjdE1vdW50KSB7XG4gICAgaWYgKGluamVjdGVkUHJvdmlkZXIpIHtcbiAgICAgIHJldHVybiBpbmplY3RlZFByb3ZpZGVyLmdldFJvb3RJbnN0YW5jZXMoKTtcbiAgICB9XG5cbiAgICB2YXIgaW5zdGFuY2VzID0gUmVhY3RNb3VudCAmJiBnZXRSb290SW5zdGFuY2VzRnJvbVJlYWN0TW91bnQoUmVhY3RNb3VudCkgfHwgW107XG4gICAgaWYgKCFPYmplY3Qua2V5cyhpbnN0YW5jZXMpLmxlbmd0aCkge1xuICAgICAgd2Fybk9uY2UoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gaW5zdGFuY2VzO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJvb3RJbnN0YW5jZVByb3ZpZGVyO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvUm9vdEluc3RhbmNlUHJvdmlkZXIuanNcbiAqKiBtb2R1bGUgaWQgPSA2XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiI2LmpzIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar isReactClassish = __webpack_require__(86),\n    isReactElementish = __webpack_require__(139);\n\nfunction makeExportsHot(m, React) {\n  if (isReactElementish(m.exports)) {\n    return false;\n  }\n\n  var freshExports = m.exports,\n      foundReactClasses = false;\n\n  if (isReactClassish(m.exports, React)) {\n    m.exports = m.makeHot(m.exports, '__MODULE_EXPORTS');\n    foundReactClasses = true;\n  }\n\n  for (var key in m.exports) {\n    if (Object.prototype.hasOwnProperty.call(freshExports, key) &&\n        isReactClassish(freshExports[key], React)) {\n      if (Object.getOwnPropertyDescriptor(m.exports, key).writable) {\n        m.exports[key] = m.makeHot(freshExports[key], '__MODULE_EXPORTS_' + key);\n        foundReactClasses = true;\n      } else {\n        console.warn(\"Can't make class \" + key + \" hot reloadable due to being read-only. You can exclude files or directories (for example, /node_modules/) using 'exclude' option in loader configuration.\");\n      }\n    }\n  }\n\n  return foundReactClasses;\n}\n\nmodule.exports = makeExportsHot;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvbWFrZUV4cG9ydHNIb3QuanM/ZDU0MSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc1JlYWN0Q2xhc3Npc2ggPSByZXF1aXJlKCcuL2lzUmVhY3RDbGFzc2lzaCcpLFxuICAgIGlzUmVhY3RFbGVtZW50aXNoID0gcmVxdWlyZSgnLi9pc1JlYWN0RWxlbWVudGlzaCcpO1xuXG5mdW5jdGlvbiBtYWtlRXhwb3J0c0hvdChtLCBSZWFjdCkge1xuICBpZiAoaXNSZWFjdEVsZW1lbnRpc2gobS5leHBvcnRzKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBmcmVzaEV4cG9ydHMgPSBtLmV4cG9ydHMsXG4gICAgICBmb3VuZFJlYWN0Q2xhc3NlcyA9IGZhbHNlO1xuXG4gIGlmIChpc1JlYWN0Q2xhc3Npc2gobS5leHBvcnRzLCBSZWFjdCkpIHtcbiAgICBtLmV4cG9ydHMgPSBtLm1ha2VIb3QobS5leHBvcnRzLCAnX19NT0RVTEVfRVhQT1JUUycpO1xuICAgIGZvdW5kUmVhY3RDbGFzc2VzID0gdHJ1ZTtcbiAgfVxuXG4gIGZvciAodmFyIGtleSBpbiBtLmV4cG9ydHMpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZyZXNoRXhwb3J0cywga2V5KSAmJlxuICAgICAgICBpc1JlYWN0Q2xhc3Npc2goZnJlc2hFeHBvcnRzW2tleV0sIFJlYWN0KSkge1xuICAgICAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobS5leHBvcnRzLCBrZXkpLndyaXRhYmxlKSB7XG4gICAgICAgIG0uZXhwb3J0c1trZXldID0gbS5tYWtlSG90KGZyZXNoRXhwb3J0c1trZXldLCAnX19NT0RVTEVfRVhQT1JUU18nICsga2V5KTtcbiAgICAgICAgZm91bmRSZWFjdENsYXNzZXMgPSB0cnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQ2FuJ3QgbWFrZSBjbGFzcyBcIiArIGtleSArIFwiIGhvdCByZWxvYWRhYmxlIGR1ZSB0byBiZWluZyByZWFkLW9ubHkuIFlvdSBjYW4gZXhjbHVkZSBmaWxlcyBvciBkaXJlY3RvcmllcyAoZm9yIGV4YW1wbGUsIC9ub2RlX21vZHVsZXMvKSB1c2luZyAnZXhjbHVkZScgb3B0aW9uIGluIGxvYWRlciBjb25maWd1cmF0aW9uLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gZm91bmRSZWFjdENsYXNzZXM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWFrZUV4cG9ydHNIb3Q7XG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWFjdC1ob3QtbG9hZGVyL21ha2VFeHBvcnRzSG90LmpzXG4gKiogbW9kdWxlIGlkID0gN1xuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiNy5qcyJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\nmodule.exports = __webpack_require__(143);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvaW5kZXguanM/NWFjZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL21ha2VNYWtlSG90Jyk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVhY3QtaG90LWxvYWRlci9+L3JlYWN0LWhvdC1hcGkvbW9kdWxlcy9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjguanMifQ==")},,,,,,,function(module,exports,__webpack_require__){eval('module.exports = function() {\r\n	var list = [];\r\n	list.toString = function toString() {\r\n		var result = [];\r\n		for(var i = 0; i < this.length; i++) {\r\n			var item = this[i];\r\n			if(item[2]) {\r\n				result.push("@media " + item[2] + "{" + item[1] + "}");\r\n			} else {\r\n				result.push(item[1]);\r\n			}\r\n		}\r\n		return result.join("");\r\n	};\r\n	return list;\r\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2Nzcy1sb2FkZXIvY3NzVG9TdHJpbmcuanM/ZDA0YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBLHdDQUF3QyxnQkFBZ0I7QUFDeEQsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgbGlzdCA9IFtdO1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblx0cmV0dXJuIGxpc3Q7XHJcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2Nzc1RvU3RyaW5nLmpzXG4gKiogbW9kdWxlIGlkID0gMTVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjE1LmpzIn0=')},,function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n	memoize = function(fn) {\r\n		var memo;\r\n		return function () {\r\n			if (typeof memo === "undefined") memo = fn.apply(this, arguments);\r\n			return memo;\r\n		};\r\n	},\r\n	isIE9 = memoize(function() {\r\n		return /msie 9\\b/.test(window.navigator.userAgent.toLowerCase());\r\n	}),\r\n	getHeadElement = memoize(function () {\r\n		return document.head || document.getElementsByTagName("head")[0];\r\n	}),\r\n	singletonElement = null,\r\n	singletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n	if(false) {\r\n		if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");\r\n	}\r\n\r\n	options = options || {};\r\n	// Force single-tag solution on IE9, which has a hard limit on the # of <style>\r\n	// tags it will allow on a page\r\n	if (typeof options.singleton === "undefined") options.singleton = isIE9();\r\n\r\n	var styles = listToStyles(list);\r\n	addStylesToDom(styles, options);\r\n\r\n	return function update(newList) {\r\n		var mayRemove = [];\r\n		for(var i = 0; i < styles.length; i++) {\r\n			var item = styles[i];\r\n			var domStyle = stylesInDom[item.id];\r\n			domStyle.refs--;\r\n			mayRemove.push(domStyle);\r\n		}\r\n		if(newList) {\r\n			var newStyles = listToStyles(newList);\r\n			addStylesToDom(newStyles, options);\r\n		}\r\n		for(var i = 0; i < mayRemove.length; i++) {\r\n			var domStyle = mayRemove[i];\r\n			if(domStyle.refs === 0) {\r\n				for(var j = 0; j < domStyle.parts.length; j++)\r\n					domStyle.parts[j]();\r\n				delete stylesInDom[domStyle.id];\r\n			}\r\n		}\r\n	};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n	for(var i = 0; i < styles.length; i++) {\r\n		var item = styles[i];\r\n		var domStyle = stylesInDom[item.id];\r\n		if(domStyle) {\r\n			domStyle.refs++;\r\n			for(var j = 0; j < domStyle.parts.length; j++) {\r\n				domStyle.parts[j](item.parts[j]);\r\n			}\r\n			for(; j < item.parts.length; j++) {\r\n				domStyle.parts.push(addStyle(item.parts[j], options));\r\n			}\r\n		} else {\r\n			var parts = [];\r\n			for(var j = 0; j < item.parts.length; j++) {\r\n				parts.push(addStyle(item.parts[j], options));\r\n			}\r\n			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n		}\r\n	}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n	var styles = [];\r\n	var newStyles = {};\r\n	for(var i = 0; i < list.length; i++) {\r\n		var item = list[i];\r\n		var id = item[0];\r\n		var css = item[1];\r\n		var media = item[2];\r\n		var sourceMap = item[3];\r\n		var part = {css: css, media: media, sourceMap: sourceMap};\r\n		if(!newStyles[id])\r\n			styles.push(newStyles[id] = {id: id, parts: [part]});\r\n		else\r\n			newStyles[id].parts.push(part);\r\n	}\r\n	return styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n	var styleElement = document.createElement("style");\r\n	var head = getHeadElement();\r\n	styleElement.type = "text/css";\r\n	head.appendChild(styleElement);\r\n	return styleElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n	var styleElement, update, remove;\r\n\r\n	if (options.singleton) {\r\n		var styleIndex = singletonCounter++;\r\n		styleElement = singletonElement || (singletonElement = createStyleElement());\r\n		update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n		remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n	} else {\r\n		styleElement = createStyleElement();\r\n		update = applyToTag.bind(null, styleElement);\r\n		remove = function () {\r\n			styleElement.parentNode.removeChild(styleElement);\r\n		};\r\n	}\r\n\r\n	update(obj);\r\n\r\n	return function updateStyle(newObj) {\r\n		if(newObj) {\r\n			if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n				return;\r\n			update(obj = newObj);\r\n		} else {\r\n			remove();\r\n		}\r\n	};\r\n}\r\n\r\nfunction replaceText(source, id, replacement) {\r\n	var boundaries = ["/** >>" + id + " **/", "/** " + id + "<< **/"];\r\n	var start = source.lastIndexOf(boundaries[0]);\r\n	var wrappedReplacement = replacement\r\n		? (boundaries[0] + replacement + boundaries[1])\r\n		: "";\r\n	if (source.lastIndexOf(boundaries[0]) >= 0) {\r\n		var end = source.lastIndexOf(boundaries[1]) + boundaries[1].length;\r\n		return source.slice(0, start) + wrappedReplacement + source.slice(end);\r\n	} else {\r\n		return source + wrappedReplacement;\r\n	}\r\n}\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n	var css = remove ? "" : obj.css;\r\n\r\n	if(styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = replaceText(styleElement.styleSheet.cssText, index, css);\r\n	} else {\r\n		var cssNode = document.createTextNode(css);\r\n		var childNodes = styleElement.childNodes;\r\n		if (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n		if (childNodes.length) {\r\n			styleElement.insertBefore(cssNode, childNodes[index]);\r\n		} else {\r\n			styleElement.appendChild(cssNode);\r\n		}\r\n	}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n	var css = obj.css;\r\n	var media = obj.media;\r\n	var sourceMap = obj.sourceMap;\r\n\r\n	if(sourceMap && typeof btoa === "function") {\r\n		try {\r\n			css += "\\n/*# sourceMappingURL=data:application/json;base64," + btoa(JSON.stringify(sourceMap)) + " */";\r\n			css = "@import url(\\"data:text/css;base64," + btoa(css) + "\\")";\r\n		} catch(e) {}\r\n	}\r\n\r\n	if(media) {\r\n		styleElement.setAttribute("media", media)\r\n	}\r\n\r\n	if(styleElement.styleSheet) {\r\n		styleElement.styleSheet.cssText = css;\r\n	} else {\r\n		while(styleElement.firstChild) {\r\n			styleElement.removeChild(styleElement.firstChild);\r\n		}\r\n		styleElement.appendChild(document.createTextNode(css));\r\n	}\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,')},,,,,,,,,,function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar AppDispatcher = _interopRequire(__webpack_require__(83));\n\nvar AppStateConstants = _interopRequire(__webpack_require__(57));\n\nvar Actions = {\n  toggleSidebar: function toggleSidebar() {\n    AppDispatcher.handleViewAction({\n      actionType: AppStateConstants.TOGGLE_SIDEBAR\n    });\n  },\n  transitionSlide: function transitionSlide(direction) {\n    AppDispatcher.handleViewAction({\n      actionType: AppStateConstants.TRANSITION_SLIDE,\n      direction: direction\n    });\n  },\n  padPushed: function padPushed(padId) {\n    AppDispatcher.handleViewAction({\n      actionType: AppStateConstants.PAD_PUSHED,\n      padId: padId\n    });\n  },\n  toggleAutoPlay: function toggleAutoPlay() {\n    AppDispatcher.handleViewAction({\n      actionType: AppStateConstants.TOGGLE_AUTOPLAY });\n  }\n};\n\nmodule.exports = Actions;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "index.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9hY3Rpb25zL2luZGV4LmpzP2U3YTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0lBQU8sYUFBYSx1Q0FBTSxFQUE2Qjs7SUFDaEQsaUJBQWlCLHVDQUFNLEVBQWdDOztBQUU5RCxJQUFJLE9BQU8sR0FBRztBQUNaLGVBQWEsMkJBQUU7QUFDYixpQkFBYSxDQUFDLGdCQUFnQixDQUFDO0FBQzdCLGdCQUFVLEVBQUUsaUJBQWlCLENBQUMsY0FBYztLQUM3QyxDQUFDLENBQUM7R0FDSjtBQUNELGlCQUFlLDJCQUFDLFNBQVMsRUFBQztBQUN4QixpQkFBYSxDQUFDLGdCQUFnQixDQUFDO0FBQzdCLGdCQUFVLEVBQUUsaUJBQWlCLENBQUMsZ0JBQWdCO0FBQzlDLGVBQVMsRUFBRSxTQUFTO0tBQ3JCLENBQUMsQ0FBQztHQUNKO0FBQ0QsV0FBUyxxQkFBQyxLQUFLLEVBQUM7QUFDZCxpQkFBYSxDQUFDLGdCQUFnQixDQUFDO0FBQzdCLGdCQUFVLEVBQUUsaUJBQWlCLENBQUMsVUFBVTtBQUN4QyxXQUFLLEVBQUUsS0FBSztLQUNiLENBQUMsQ0FBQztHQUNKO0FBQ0QsZ0JBQWMsNEJBQUU7QUFDZCxpQkFBYSxDQUFDLGdCQUFnQixDQUFDO0FBQzdCLGdCQUFVLEVBQUUsaUJBQWlCLENBQUMsZUFBZSxFQUM5QyxDQUFDLENBQUM7R0FDSjtDQUNGLENBQUM7O2lCQUVhLE9BQU8sQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBcHBEaXNwYXRjaGVyIGZyb20gJy4uL2Rpc3BhdGNoZXIvQXBwRGlzcGF0Y2hlcic7XG5pbXBvcnQgQXBwU3RhdGVDb25zdGFudHMgZnJvbSAnLi4vY29uc3RhbnRzL0FwcFN0YXRlQ29uc3RhbnRzJ1xuXG5sZXQgQWN0aW9ucyA9IHtcbiAgdG9nZ2xlU2lkZWJhcigpe1xuICAgIEFwcERpc3BhdGNoZXIuaGFuZGxlVmlld0FjdGlvbih7XG4gICAgICBhY3Rpb25UeXBlOiBBcHBTdGF0ZUNvbnN0YW50cy5UT0dHTEVfU0lERUJBUlxuICAgIH0pO1xuICB9LFxuICB0cmFuc2l0aW9uU2xpZGUoZGlyZWN0aW9uKXtcbiAgICBBcHBEaXNwYXRjaGVyLmhhbmRsZVZpZXdBY3Rpb24oe1xuICAgICAgYWN0aW9uVHlwZTogQXBwU3RhdGVDb25zdGFudHMuVFJBTlNJVElPTl9TTElERSxcbiAgICAgIGRpcmVjdGlvbjogZGlyZWN0aW9uXG4gICAgfSk7XG4gIH0sXG4gIHBhZFB1c2hlZChwYWRJZCl7XG4gICAgQXBwRGlzcGF0Y2hlci5oYW5kbGVWaWV3QWN0aW9uKHtcbiAgICAgIGFjdGlvblR5cGU6IEFwcFN0YXRlQ29uc3RhbnRzLlBBRF9QVVNIRUQsXG4gICAgICBwYWRJZDogcGFkSWRcbiAgICB9KTtcbiAgfSxcbiAgdG9nZ2xlQXV0b1BsYXkoKXtcbiAgICBBcHBEaXNwYXRjaGVyLmhhbmRsZVZpZXdBY3Rpb24oe1xuICAgICAgYWN0aW9uVHlwZTogQXBwU3RhdGVDb25zdGFudHMuVE9HR0xFX0FVVE9QTEFZLFxuICAgIH0pO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBY3Rpb25zO1xuXG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2FjdGlvbnMvaW5kZXguanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIyNy5qcyJ9')},,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(53);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(53, function() {\n		var newContent = __webpack_require__(53);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NsaWRlLmNzcz84ZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQXNHO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvc3JjL3N0eWxlcy9zbGlkZS5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3NsaWRlLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3NsaWRlLmNzc1wiKTtcblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvc3R5bGVzL3NsaWRlLmNzc1xuICoqIG1vZHVsZSBpZCA9IDQ2XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiI0Ni5qcyJ9");

},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, "/*! normalize.css v3.0.2 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=\\"button\\"],input[type=\\"reset\\"],input[type=\\"submit\\"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=\\"checkbox\\"],input[type=\\"radio\\"]{box-sizing:border-box;padding:0}input[type=\\"number\\"]::-webkit-inner-spin-button,input[type=\\"number\\"]::-webkit-outer-spin-button{height:auto}input[type=\\"search\\"]{-webkit-appearance:textfield;box-sizing:content-box}input[type=\\"search\\"]::-webkit-search-cancel-button,input[type=\\"search\\"]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcz81MGYzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsMkZBQTJGLHVCQUF1QiwwQkFBMEIsOEJBQThCLEtBQUssU0FBUywyRkFBMkYsY0FBYyw0QkFBNEIscUJBQXFCLHdCQUF3QixzQkFBc0IsYUFBYSxTQUFTLGtCQUFrQixhQUFhLEVBQUUsNkJBQTZCLGlCQUFpQixVQUFVLFlBQVkseUJBQXlCLFNBQVMsZ0JBQWdCLElBQUksa0JBQWtCLEdBQUcsY0FBYyxlQUFlLEtBQUssZ0JBQWdCLFdBQVcsTUFBTSxjQUFjLFFBQVEsY0FBYyxjQUFjLGtCQUFrQix3QkFBd0IsSUFBSSxVQUFVLElBQUksY0FBYyxJQUFJLFNBQVMsZUFBZSxnQkFBZ0IsT0FBTyxnQkFBZ0IsR0FBRyx1QkFBdUIsU0FBUyxJQUFJLGNBQWMsa0JBQWtCLGdDQUFnQyxjQUFjLHNDQUFzQyxjQUFjLGFBQWEsU0FBUyxPQUFPLGlCQUFpQixjQUFjLG9CQUFvQixnRkFBZ0YsMEJBQTBCLGVBQWUsc0NBQXNDLGVBQWUsaURBQWlELFNBQVMsVUFBVSxNQUFNLG1CQUFtQiwrQ0FBK0Msc0JBQXNCLFVBQVUsb0dBQW9HLFlBQVksdUJBQXVCLDZCQUE2Qix1QkFBdUIsdUdBQXVHLHdCQUF3QixTQUFTLHdCQUF3QixhQUFhLDJCQUEyQixPQUFPLFNBQVMsVUFBVSxTQUFTLGNBQWMsU0FBUyxnQkFBZ0IsTUFBTSx5QkFBeUIsaUJBQWlCLE1BQU0sVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9jc3NUb1N0cmluZy5qc1wiKSgpO1xuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLyohIG5vcm1hbGl6ZS5jc3MgdjMuMC4yIHwgTUlUIExpY2Vuc2UgfCBnaXQuaW8vbm9ybWFsaXplICovaHRtbHtmb250LWZhbWlseTpzYW5zLXNlcmlmOy1tcy10ZXh0LXNpemUtYWRqdXN0OjEwMCU7LXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OjEwMCV9Ym9keXttYXJnaW46MH1hcnRpY2xlLGFzaWRlLGRldGFpbHMsZmlnY2FwdGlvbixmaWd1cmUsZm9vdGVyLGhlYWRlcixoZ3JvdXAsbWFpbixtZW51LG5hdixzZWN0aW9uLHN1bW1hcnl7ZGlzcGxheTpibG9ja31hdWRpbyxjYW52YXMscHJvZ3Jlc3MsdmlkZW97ZGlzcGxheTppbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9YXVkaW86bm90KFtjb250cm9sc10pe2Rpc3BsYXk6bm9uZTtoZWlnaHQ6MH1baGlkZGVuXSx0ZW1wbGF0ZXtkaXNwbGF5Om5vbmV9YXtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fWE6YWN0aXZlLGE6aG92ZXJ7b3V0bGluZTowfWFiYnJbdGl0bGVde2JvcmRlci1ib3R0b206MXB4IGRvdHRlZH1iLHN0cm9uZ3tmb250LXdlaWdodDo3MDB9ZGZue2ZvbnQtc3R5bGU6aXRhbGljfWgxe2ZvbnQtc2l6ZToyZW07bWFyZ2luOi42N2VtIDB9bWFya3tiYWNrZ3JvdW5kOiNmZjA7Y29sb3I6IzAwMH1zbWFsbHtmb250LXNpemU6ODAlfXN1YixzdXB7Zm9udC1zaXplOjc1JTtsaW5lLWhlaWdodDowO3Bvc2l0aW9uOnJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfXN1cHt0b3A6LS41ZW19c3Vie2JvdHRvbTotLjI1ZW19aW1ne2JvcmRlcjowfXN2Zzpub3QoOnJvb3Qpe292ZXJmbG93OmhpZGRlbn1maWd1cmV7bWFyZ2luOjFlbSA0MHB4fWhye2JveC1zaXppbmc6Y29udGVudC1ib3g7aGVpZ2h0OjB9cHJle292ZXJmbG93OmF1dG99Y29kZSxrYmQscHJlLHNhbXB7Zm9udC1mYW1pbHk6bW9ub3NwYWNlLG1vbm9zcGFjZTtmb250LXNpemU6MWVtfWJ1dHRvbixpbnB1dCxvcHRncm91cCxzZWxlY3QsdGV4dGFyZWF7Y29sb3I6aW5oZXJpdDtmb250OmluaGVyaXQ7bWFyZ2luOjB9YnV0dG9ue292ZXJmbG93OnZpc2libGV9YnV0dG9uLHNlbGVjdHt0ZXh0LXRyYW5zZm9ybTpub25lfWJ1dHRvbixodG1sIGlucHV0W3R5cGU9XFxcImJ1dHRvblxcXCJdLGlucHV0W3R5cGU9XFxcInJlc2V0XFxcIl0saW5wdXRbdHlwZT1cXFwic3VibWl0XFxcIl17LXdlYmtpdC1hcHBlYXJhbmNlOmJ1dHRvbjtjdXJzb3I6cG9pbnRlcn1idXR0b25bZGlzYWJsZWRdLGh0bWwgaW5wdXRbZGlzYWJsZWRde2N1cnNvcjpkZWZhdWx0fWJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixpbnB1dDo6LW1vei1mb2N1cy1pbm5lcntib3JkZXI6MDtwYWRkaW5nOjB9aW5wdXR7bGluZS1oZWlnaHQ6bm9ybWFsfWlucHV0W3R5cGU9XFxcImNoZWNrYm94XFxcIl0saW5wdXRbdHlwZT1cXFwicmFkaW9cXFwiXXtib3gtc2l6aW5nOmJvcmRlci1ib3g7cGFkZGluZzowfWlucHV0W3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLGlucHV0W3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9ue2hlaWdodDphdXRvfWlucHV0W3R5cGU9XFxcInNlYXJjaFxcXCJdey13ZWJraXQtYXBwZWFyYW5jZTp0ZXh0ZmllbGQ7Ym94LXNpemluZzpjb250ZW50LWJveH1pbnB1dFt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixpbnB1dFt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX1maWVsZHNldHtib3JkZXI6MXB4IHNvbGlkIHNpbHZlcjttYXJnaW46MCAycHg7cGFkZGluZzouMzVlbSAuNjI1ZW0gLjc1ZW19bGVnZW5ke2JvcmRlcjowO3BhZGRpbmc6MH10ZXh0YXJlYXtvdmVyZmxvdzphdXRvfW9wdGdyb3Vwe2ZvbnQtd2VpZ2h0OjcwMH10YWJsZXtib3JkZXItY29sbGFwc2U6Y29sbGFwc2U7Ym9yZGVyLXNwYWNpbmc6MH10ZCx0aHtwYWRkaW5nOjB9XCIsIFwiXCJdKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9wb3N0Y3NzLWxvYWRlciEuL34vbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzXG4gKiogbW9kdWxlIGlkID0gNDdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjQ3LmpzIn0=')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, "@font-face{font-family:NittyNormal;src:url("+__webpack_require__(234)+") format(\'woff\')}@font-face{font-family:NittyBold;src:url("+__webpack_require__(233)+") format(\'woff\')}::-webkit-scrollbar{display:none}*{box-sizing:border-box}html{font-size:36px;line-height:calc(30/22)rem}@media (max-width:2000px){html{font-size:20px}}@media (max-width:1500px){html{font-size:18px}}@media (max-width:1000px){html{font-size:16px}}@media (max-width:850px){html{font-size:12px}}@media (max-width:650px){html{font-size:10px}}@media (max-width:550px){html{font-size:8px}}@media (max-width:450px){html{font-size:6px}}.app{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;font-family:NittyNormal;height:100vh;background-color:#E5CF39}button{border:none;font-size:1rem;background-color:#3d3d3d;width:2rem;height:2rem}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2FwcC5jc3M/ZjlkMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLHFDQUFxQyx3QkFBd0IscURBQStELFdBQVcsc0JBQXNCLHFEQUErRCxvQkFBb0IsYUFBYSxFQUFFLHNCQUFzQixLQUFLLGVBQWUsMkJBQTJCLDBCQUEwQixLQUFLLGdCQUFnQiwwQkFBMEIsS0FBSyxnQkFBZ0IsMEJBQTBCLEtBQUssZ0JBQWdCLHlCQUF5QixLQUFLLGdCQUFnQix5QkFBeUIsS0FBSyxnQkFBZ0IseUJBQXlCLEtBQUssZUFBZSx5QkFBeUIsS0FBSyxlQUFlLEtBQUssb0JBQW9CLHFCQUFxQixvQkFBb0IsYUFBYSw4QkFBOEIsNkJBQTZCLDJCQUEyQix1QkFBdUIsbUJBQW1CLHVCQUF1QixtQ0FBbUMsb0JBQW9CLDJCQUEyQixzQkFBc0IsNkJBQTZCLG1CQUFtQixxQkFBcUIsd0JBQXdCLGFBQWEseUJBQXlCLE9BQU8sWUFBWSxlQUFlLHlCQUF5QixXQUFXLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvY3NzVG9TdHJpbmcuanNcIikoKTtcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIkBmb250LWZhY2V7Zm9udC1mYW1pbHk6Tml0dHlOb3JtYWw7c3JjOnVybChcIityZXF1aXJlKFwiLi4vYXNzZXRzL2ZvbnRzL05OLndvZmZcIikrXCIpIGZvcm1hdCgnd29mZicpfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6Tml0dHlCb2xkO3NyYzp1cmwoXCIrcmVxdWlyZShcIi4uL2Fzc2V0cy9mb250cy9OQi53b2ZmXCIpK1wiKSBmb3JtYXQoJ3dvZmYnKX06Oi13ZWJraXQtc2Nyb2xsYmFye2Rpc3BsYXk6bm9uZX0qe2JveC1zaXppbmc6Ym9yZGVyLWJveH1odG1se2ZvbnQtc2l6ZTozNnB4O2xpbmUtaGVpZ2h0OmNhbGMoMzAvMjIpcmVtfUBtZWRpYSAobWF4LXdpZHRoOjIwMDBweCl7aHRtbHtmb250LXNpemU6MjBweH19QG1lZGlhIChtYXgtd2lkdGg6MTUwMHB4KXtodG1se2ZvbnQtc2l6ZToxOHB4fX1AbWVkaWEgKG1heC13aWR0aDoxMDAwcHgpe2h0bWx7Zm9udC1zaXplOjE2cHh9fUBtZWRpYSAobWF4LXdpZHRoOjg1MHB4KXtodG1se2ZvbnQtc2l6ZToxMnB4fX1AbWVkaWEgKG1heC13aWR0aDo2NTBweCl7aHRtbHtmb250LXNpemU6MTBweH19QG1lZGlhIChtYXgtd2lkdGg6NTUwcHgpe2h0bWx7Zm9udC1zaXplOjhweH19QG1lZGlhIChtYXgtd2lkdGg6NDUwcHgpe2h0bWx7Zm9udC1zaXplOjZweH19LmFwcHtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1ib3gtcGFjazpzdGFydDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0Oy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7LXdlYmtpdC1ib3gtYWxpZ246ZW5kOy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1lbmQ7LW1zLWZsZXgtYWxpZ246ZW5kO2FsaWduLWl0ZW1zOmZsZXgtZW5kO2ZvbnQtZmFtaWx5Ok5pdHR5Tm9ybWFsO2hlaWdodDoxMDB2aDtiYWNrZ3JvdW5kLWNvbG9yOiNFNUNGMzl9YnV0dG9ue2JvcmRlcjpub25lO2ZvbnQtc2l6ZToxcmVtO2JhY2tncm91bmQtY29sb3I6IzNkM2QzZDt3aWR0aDoycmVtO2hlaWdodDoycmVtfVwiLCBcIlwiXSk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlciEuL34vcG9zdGNzcy1sb2FkZXIhLi9zcmMvc3R5bGVzL2FwcC5jc3NcbiAqKiBtb2R1bGUgaWQgPSA0OFxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiNDguanMifQ==')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".main{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;width:100%}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uY3NzP2I3NzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FBZ0Msb0JBQW9CLHFCQUFxQixvQkFBb0IsYUFBYSw0QkFBNEIsNkJBQTZCLDhCQUE4QiwwQkFBMEIsc0JBQXNCLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvY3NzVG9TdHJpbmcuanNcIikoKTtcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tYWlue2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47d2lkdGg6MTAwJX1cIiwgXCJcIl0pO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXIhLi9+L3Bvc3Rjc3MtbG9hZGVyIS4vc3JjL3N0eWxlcy9tYWluLmNzc1xuICoqIG1vZHVsZSBpZCA9IDQ5XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiI0OS5qcyJ9')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".pad{font-family:NittyBold;box-sizing:border-box;font-size:18px;text-decoration:none;border:none;margin:10px;background-color:#c0c4c1}.active,.pad:hover{background:#E34D2F}.autoplay{margin:5px}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3BhZC5jc3M/ZmMwMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLCtCQUErQixzQkFBc0Isc0JBQXNCLGVBQWUscUJBQXFCLFlBQVksWUFBWSx5QkFBeUIsbUJBQW1CLG1CQUFtQixVQUFVLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvY3NzVG9TdHJpbmcuanNcIikoKTtcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5wYWR7Zm9udC1mYW1pbHk6Tml0dHlCb2xkO2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LXNpemU6MThweDt0ZXh0LWRlY29yYXRpb246bm9uZTtib3JkZXI6bm9uZTttYXJnaW46MTBweDtiYWNrZ3JvdW5kLWNvbG9yOiNjMGM0YzF9LmFjdGl2ZSwucGFkOmhvdmVye2JhY2tncm91bmQ6I0UzNEQyRn0uYXV0b3BsYXl7bWFyZ2luOjVweH1cIiwgXCJcIl0pO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXIhLi9+L3Bvc3Rjc3MtbG9hZGVyIS4vc3JjL3N0eWxlcy9wYWQuY3NzXG4gKiogbW9kdWxlIGlkID0gNTBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjUwLmpzIn0=')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".pads{box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;overflow-x:center;width:100%}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3BhZHMuY3NzPzU3YzkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxnQ0FBZ0Msc0JBQXNCLG9CQUFvQixxQkFBcUIsb0JBQW9CLGFBQWEsOEJBQThCLDZCQUE2QiwyQkFBMkIsdUJBQXVCLG1CQUFtQix1QkFBdUIsbUNBQW1DLG9CQUFvQiwyQkFBMkIseUJBQXlCLDJCQUEyQixzQkFBc0IsbUJBQW1CLGtCQUFrQixXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Nzc1RvU3RyaW5nLmpzXCIpKCk7XG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucGFkc3tib3gtc2l6aW5nOmJvcmRlci1ib3g7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtYm94LXBhY2s6c3RhcnQ7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO292ZXJmbG93LXg6Y2VudGVyO3dpZHRoOjEwMCV9XCIsIFwiXCJdKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9wb3N0Y3NzLWxvYWRlciEuL3NyYy9zdHlsZXMvcGFkcy5jc3NcbiAqKiBtb2R1bGUgaWQgPSA1MVxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiNTEuanMifQ==')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".sidebar{box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;color:#fff;width:3rem;height:100%;padding:1rem;background-color:#3d3d3d;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.sidebar.closed{height:4rem;background-color:#E5CF39}.sidebar.closed button{border:none;color:#E5CF39;background-color:#E5CF39}.sidebar.closed button:hover{border:none;background-color:#3d3d3d;color:#fff}.controlPanel{height:10rem;font-style:bold;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}.controlPanel.closed{display:none}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NpZGViYXIuY3NzPzE0OTkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxtQ0FBbUMsc0JBQXNCLG9CQUFvQixxQkFBcUIsb0JBQW9CLGFBQWEsNEJBQTRCLDZCQUE2Qiw4QkFBOEIsMEJBQTBCLHNCQUFzQixXQUFXLFdBQVcsWUFBWSxhQUFhLHlCQUF5Qix5QkFBeUIsc0NBQXNDLHNCQUFzQiw4QkFBOEIseUJBQXlCLDJCQUEyQixzQkFBc0IsbUJBQW1CLGdCQUFnQixZQUFZLHlCQUF5Qix1QkFBdUIsWUFBWSxjQUFjLHlCQUF5Qiw2QkFBNkIsWUFBWSx5QkFBeUIsV0FBVyxjQUFjLGFBQWEsZ0JBQWdCLG9CQUFvQixxQkFBcUIsb0JBQW9CLGFBQWEsNEJBQTRCLDZCQUE2Qiw4QkFBOEIsMEJBQTBCLHNCQUFzQixxQkFBcUIsaUNBQWlDLGtCQUFrQix5QkFBeUIscUJBQXFCLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvY3NzVG9TdHJpbmcuanNcIikoKTtcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5zaWRlYmFye2JveC1zaXppbmc6Ym9yZGVyLWJveDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO2NvbG9yOiNmZmY7d2lkdGg6M3JlbTtoZWlnaHQ6MTAwJTtwYWRkaW5nOjFyZW07YmFja2dyb3VuZC1jb2xvcjojM2QzZDNkOy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0uc2lkZWJhci5jbG9zZWR7aGVpZ2h0OjRyZW07YmFja2dyb3VuZC1jb2xvcjojRTVDRjM5fS5zaWRlYmFyLmNsb3NlZCBidXR0b257Ym9yZGVyOm5vbmU7Y29sb3I6I0U1Q0YzOTtiYWNrZ3JvdW5kLWNvbG9yOiNFNUNGMzl9LnNpZGViYXIuY2xvc2VkIGJ1dHRvbjpob3Zlcntib3JkZXI6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOiMzZDNkM2Q7Y29sb3I6I2ZmZn0uY29udHJvbFBhbmVse2hlaWdodDoxMHJlbTtmb250LXN0eWxlOmJvbGQ7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1wYWNrOmVuZDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LWVuZDstbXMtZmxleC1wYWNrOmVuZDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmR9LmNvbnRyb2xQYW5lbC5jbG9zZWR7ZGlzcGxheTpub25lfVwiLCBcIlwiXSk7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlciEuL34vcG9zdGNzcy1sb2FkZXIhLi9zcmMvc3R5bGVzL3NpZGViYXIuY3NzXG4gKiogbW9kdWxlIGlkID0gNTJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjUyLmpzIn0=')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".slide{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:100%;height:100%;padding:3rem}.slide .label{display:block}.slide ul{padding:0;margin:0}.slide h1,.slide h2{display:inline-block}.slide h2{margin:0}.slide h1{padding:0 1rem;margin:0 0 1.5rem;font-size:3rem;background-color:#000;color:#fff}.slide .label h1{font-size:1.5rem;padding:0 .5rem;margin-bottom:.5rem}.slide .meta h1{font-size:1rem;padding:0 .333333333rem}.slide .meta h1,.slide .program h1{color:#000;background-color:#fff}.slide a{text-decoration:none;color:#E34D2F}.slide a:hover{text-decoration:none;color:#fff}.slide li{font-family:NittyBold;margin:0;padding:0;list-style:none}.slide li p{display:inline-block;width:auto;font-style:normal;margin:0 0 1.5rem;padding:0 1rem;font-size:3rem;background-color:#fff;color:#000}.slide li p:hover{background-color:#000;color:#fff}.slide li.has-link p{background-color:#fff}.slide li.has-link p:hover{background-color:#E34D2F;color:#fff}.slide header,.slide footer{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.slide footer{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}.slide footer .profile li p{font-size:.75rem;margin-bottom:.375rem;padding:.25rem}.slide.creditsSlide h1{font-size:1.5rem;padding:.5rem}.slide.titleSlide{-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NsaWRlLmNzcz84NmZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsaUNBQWlDLG9CQUFvQixxQkFBcUIsb0JBQW9CLGFBQWEsNEJBQTRCLDZCQUE2Qiw4QkFBOEIsMEJBQTBCLHNCQUFzQix5QkFBeUIsc0NBQXNDLHNCQUFzQiw4QkFBOEIsV0FBVyxZQUFZLGFBQWEsY0FBYyxjQUFjLFVBQVUsVUFBVSxTQUFTLG9CQUFvQixxQkFBcUIsVUFBVSxTQUFTLFVBQVUsZUFBZSxrQkFBa0IsZUFBZSxzQkFBc0IsV0FBVyxpQkFBaUIsaUJBQWlCLGdCQUFnQixvQkFBb0IsZ0JBQWdCLGVBQWUsd0JBQXdCLG1DQUFtQyxXQUFXLHNCQUFzQixTQUFTLHFCQUFxQixjQUFjLGVBQWUscUJBQXFCLFdBQVcsVUFBVSxzQkFBc0IsU0FBUyxVQUFVLGdCQUFnQixZQUFZLHFCQUFxQixXQUFXLGtCQUFrQixrQkFBa0IsZUFBZSxlQUFlLHNCQUFzQixXQUFXLGtCQUFrQixzQkFBc0IsV0FBVyxxQkFBcUIsc0JBQXNCLDJCQUEyQix5QkFBeUIsV0FBVyw0QkFBNEIsb0JBQW9CLHFCQUFxQixvQkFBb0IsYUFBYSxtQkFBbUIsZUFBZSxXQUFXLE9BQU8sY0FBYyw0QkFBNEIsNkJBQTZCLDhCQUE4QiwwQkFBMEIsc0JBQXNCLHFCQUFxQixpQ0FBaUMsa0JBQWtCLHlCQUF5Qiw0QkFBNEIsaUJBQWlCLHNCQUFzQixlQUFlLHVCQUF1QixpQkFBaUIsY0FBYyxrQkFBa0Isd0JBQXdCLCtCQUErQixxQkFBcUIsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Nzc1RvU3RyaW5nLmpzXCIpKCk7XG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2xpZGV7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwYWRkaW5nOjNyZW19LnNsaWRlIC5sYWJlbHtkaXNwbGF5OmJsb2NrfS5zbGlkZSB1bHtwYWRkaW5nOjA7bWFyZ2luOjB9LnNsaWRlIGgxLC5zbGlkZSBoMntkaXNwbGF5OmlubGluZS1ibG9ja30uc2xpZGUgaDJ7bWFyZ2luOjB9LnNsaWRlIGgxe3BhZGRpbmc6MCAxcmVtO21hcmdpbjowIDAgMS41cmVtO2ZvbnQtc2l6ZTozcmVtO2JhY2tncm91bmQtY29sb3I6IzAwMDtjb2xvcjojZmZmfS5zbGlkZSAubGFiZWwgaDF7Zm9udC1zaXplOjEuNXJlbTtwYWRkaW5nOjAgLjVyZW07bWFyZ2luLWJvdHRvbTouNXJlbX0uc2xpZGUgLm1ldGEgaDF7Zm9udC1zaXplOjFyZW07cGFkZGluZzowIC4zMzMzMzMzMzNyZW19LnNsaWRlIC5tZXRhIGgxLC5zbGlkZSAucHJvZ3JhbSBoMXtjb2xvcjojMDAwO2JhY2tncm91bmQtY29sb3I6I2ZmZn0uc2xpZGUgYXt0ZXh0LWRlY29yYXRpb246bm9uZTtjb2xvcjojRTM0RDJGfS5zbGlkZSBhOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lO2NvbG9yOiNmZmZ9LnNsaWRlIGxpe2ZvbnQtZmFtaWx5Ok5pdHR5Qm9sZDttYXJnaW46MDtwYWRkaW5nOjA7bGlzdC1zdHlsZTpub25lfS5zbGlkZSBsaSBwe2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOmF1dG87Zm9udC1zdHlsZTpub3JtYWw7bWFyZ2luOjAgMCAxLjVyZW07cGFkZGluZzowIDFyZW07Zm9udC1zaXplOjNyZW07YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOiMwMDB9LnNsaWRlIGxpIHA6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojMDAwO2NvbG9yOiNmZmZ9LnNsaWRlIGxpLmhhcy1saW5rIHB7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5zbGlkZSBsaS5oYXMtbGluayBwOmhvdmVye2JhY2tncm91bmQtY29sb3I6I0UzNEQyRjtjb2xvcjojZmZmfS5zbGlkZSBoZWFkZXIsLnNsaWRlIGZvb3RlcntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWZsZXg6MTstd2Via2l0LWZsZXg6MTstbXMtZmxleDoxO2ZsZXg6MX0uc2xpZGUgZm9vdGVyey13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LXBhY2s6ZW5kOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmZsZXgtZW5kOy1tcy1mbGV4LXBhY2s6ZW5kO2p1c3RpZnktY29udGVudDpmbGV4LWVuZH0uc2xpZGUgZm9vdGVyIC5wcm9maWxlIGxpIHB7Zm9udC1zaXplOi43NXJlbTttYXJnaW4tYm90dG9tOi4zNzVyZW07cGFkZGluZzouMjVyZW19LnNsaWRlLmNyZWRpdHNTbGlkZSBoMXtmb250LXNpemU6MS41cmVtO3BhZGRpbmc6LjVyZW19LnNsaWRlLnRpdGxlU2xpZGV7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9XCIsIFwiXCJdKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9wb3N0Y3NzLWxvYWRlciEuL3NyYy9zdHlsZXMvc2xpZGUuY3NzXG4gKiogbW9kdWxlIGlkID0gNTNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjUzLmpzIn0=')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".slideContent{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start;height:100%;width:100%;padding:0}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NsaWRlQ29udGVudC5jc3M/YWU3NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLHdDQUF3QyxvQkFBb0IscUJBQXFCLG9CQUFvQixhQUFhLDRCQUE0Qiw2QkFBNkIsOEJBQThCLDBCQUEwQixzQkFBc0Isd0JBQXdCLCtCQUErQixxQkFBcUIsdUJBQXVCLGlDQUFpQyx5QkFBeUIseUJBQXlCLFlBQVksV0FBVyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Nzc1RvU3RyaW5nLmpzXCIpKCk7XG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2xpZGVDb250ZW50e2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1hbGlnbi1jb250ZW50OmZsZXgtc3RhcnQ7LW1zLWZsZXgtbGluZS1wYWNrOnN0YXJ0O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydDtoZWlnaHQ6MTAwJTt3aWR0aDoxMDAlO3BhZGRpbmc6MH1cIiwgXCJcIl0pO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXIhLi9+L3Bvc3Rjc3MtbG9hZGVyIS4vc3JjL3N0eWxlcy9zbGlkZUNvbnRlbnQuY3NzXG4gKiogbW9kdWxlIGlkID0gNTRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjU0LmpzIn0=')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".slides{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;width:100%;height:100%}svg{width:60%;height:60%}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NsaWRlcy5jc3M/OTRhZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGtDQUFrQyxvQkFBb0IscUJBQXFCLG9CQUFvQixhQUFhLHdCQUF3QiwrQkFBK0IscUJBQXFCLHVCQUF1Qix5QkFBeUIsMkJBQTJCLHNCQUFzQixtQkFBbUIsV0FBVyxZQUFZLElBQUksVUFBVSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Nzc1RvU3RyaW5nLmpzXCIpKCk7XG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2xpZGVze2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJX1zdmd7d2lkdGg6NjAlO2hlaWdodDo2MCV9XCIsIFwiXCJdKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9wb3N0Y3NzLWxvYWRlciEuL3NyYy9zdHlsZXMvc2xpZGVzLmNzc1xuICoqIG1vZHVsZSBpZCA9IDU1XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiI1NS5qcyJ9')},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(15)();\nexports.push([module.id, ".timeline{box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:flex-around;-webkit-justify-content:flex-around;-ms-flex-pack:flex-around;justify-content:flex-around;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;color:#3d3d3d;width:100%;background-color:#c0c4c1;min-height:calc(3 * 30px)}", ""]);//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3RpbWVsaW5lLmNzcz8wNWU1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0Esb0NBQW9DLHNCQUFzQixvQkFBb0IscUJBQXFCLG9CQUFvQixhQUFhLDhCQUE4Qiw2QkFBNkIsMkJBQTJCLHVCQUF1QixtQkFBbUIsNkJBQTZCLG9DQUFvQywwQkFBMEIsNEJBQTRCLHlCQUF5QiwyQkFBMkIsc0JBQXNCLG1CQUFtQixjQUFjLFdBQVcseUJBQXlCLDBCQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9jc3NUb1N0cmluZy5qc1wiKSgpO1xuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnRpbWVsaW5le2JveC1zaXppbmc6Ym9yZGVyLWJveDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1ib3gtcGFjazpmbGV4LWFyb3VuZDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LWFyb3VuZDstbXMtZmxleC1wYWNrOmZsZXgtYXJvdW5kO2p1c3RpZnktY29udGVudDpmbGV4LWFyb3VuZDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtjb2xvcjojM2QzZDNkO3dpZHRoOjEwMCU7YmFja2dyb3VuZC1jb2xvcjojYzBjNGMxO21pbi1oZWlnaHQ6Y2FsYygzICogMzBweCl9XCIsIFwiXCJdKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyIS4vfi9wb3N0Y3NzLWxvYWRlciEuL3NyYy9zdHlsZXMvdGltZWxpbmUuY3NzXG4gKiogbW9kdWxlIGlkID0gNTZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjU2LmpzIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar keyMirror = _interopRequire(__webpack_require__(112));\n\nvar constants = keyMirror({\n  PAD_PUSHED: null,\n  TOGGLE_AUTOPLAY: null,\n  TRANSITION_SLIDE: null,\n  TOGGLE_SIDEBAR: null\n});\n\nmodule.exports = constants;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "AppStateConstants.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb25zdGFudHMvQXBwU3RhdGVDb25zdGFudHMuanM/ZjM0MCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7SUFBTyxTQUFTLHVDQUFNLEdBQVc7O0FBRWpDLElBQUksU0FBUyxHQUFHLFNBQVMsQ0FBQztBQUN4QixjQUFjLElBQUk7QUFDbEIsbUJBQW1CLElBQUk7QUFDdkIsb0JBQW9CLElBQUk7QUFDeEIsa0JBQWtCLElBQUk7Q0FDdkIsQ0FBQyxDQUFDOztpQkFFWSxTQUFTLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQga2V5TWlycm9yIGZyb20gJ2tleW1pcnJvcic7XG5cbmxldCBjb25zdGFudHMgPSBrZXlNaXJyb3Ioe1xuICAnUEFEX1BVU0hFRCc6IG51bGwsXG4gICdUT0dHTEVfQVVUT1BMQVknOiBudWxsLFxuICAnVFJBTlNJVElPTl9TTElERSc6IG51bGwsXG4gICdUT0dHTEVfU0lERUJBUic6IG51bGxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBjb25zdGFudHM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbnN0YW50cy9BcHBTdGF0ZUNvbnN0YW50cy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjU3LmpzIn0=');

},,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar R = _interopRequire(__webpack_require__(21));\n\nvar Profile = (function (_React$Component) {\n  function Profile() {\n    _classCallCheck(this, Profile);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Profile, _React$Component);\n\n  _createClass(Profile, {\n    render: {\n      value: function render() {\n        var presenter = this.props.presenter;\n\n        var profileData = R.values(presenter);\n        var createProfile = R.mapIndexed(function (value, index) {\n          return React.createElement(\n            "li",\n            { key: index },\n            React.createElement(\n              "p",\n              null,\n              value\n            )\n          );\n        });\n        var profile = createProfile(profileData);\n        return React.createElement(\n          "ul",\n          { className: "profile" },\n          profile\n        );\n      }\n    }\n  });\n\n  return Profile;\n})(React.Component);\n\nProfile.propTypes = {\n  presenter: React.PropTypes.object.isRequired\n};\n\nmodule.exports = Profile;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Profile.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1Byb2ZpbGUuanN4PzcwMDMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQU8sS0FBSyx1Q0FBTSxDQUFPOztJQUNsQixDQUFDLHVDQUFNLEVBQU87O0lBRWYsT0FBTztXQUFQLE9BQU87MEJBQVAsT0FBTzs7Ozs7OztZQUFQLE9BQU87O2VBQVAsT0FBTztBQUVYLFVBQU07YUFBQSxrQkFBRTtZQUNBLFNBQVMsR0FBSyxJQUFJLENBQUMsS0FBSyxDQUF4QixTQUFTOztBQUNmLFlBQUksV0FBVyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDdEMsWUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxVQUFDLEtBQUssRUFBRSxLQUFLO2lCQUM1Qzs7Y0FBSSxHQUFHLEVBQUcsS0FBTztZQUFDOzs7Y0FBSyxLQUFLO2FBQU07V0FBSztTQUN4QyxDQUFDLENBQUM7QUFDSCxZQUFJLE9BQU8sR0FBRyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDekMsZUFDRTs7WUFBSSxTQUFTLEVBQUMsU0FBUztVQUNuQixPQUFPO1NBQ04sQ0FDTjtPQUNGOzs7O1NBZEcsT0FBTztHQUFTLEtBQUssQ0FBQyxTQUFTOztBQWdCckMsT0FBTyxDQUFDLFNBQVMsR0FBRztBQUNsQixXQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVTtDQUM3Qzs7aUJBR2MsT0FBTyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSIGZyb20gJ3JhbWRhJztcblxuY2xhc3MgUHJvZmlsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgcmVuZGVyKCl7XG4gICAgbGV0IHsgcHJlc2VudGVyIH0gPSB0aGlzLnByb3BzO1xuICAgIGxldCBwcm9maWxlRGF0YSA9IFIudmFsdWVzKHByZXNlbnRlcik7XG4gICAgbGV0IGNyZWF0ZVByb2ZpbGUgPSBSLm1hcEluZGV4ZWQoKHZhbHVlLCBpbmRleCkgPT4gKFxuICAgICAgPGxpIGtleT17IGluZGV4IH0+PHA+eyB2YWx1ZSB9PC9wPjwvbGk+XG4gICAgKSk7XG4gICAgbGV0IHByb2ZpbGUgPSBjcmVhdGVQcm9maWxlKHByb2ZpbGVEYXRhKTtcbiAgICByZXR1cm4gKFxuICAgICAgPHVsIGNsYXNzTmFtZT1cInByb2ZpbGVcIj5cbiAgICAgICAgeyBwcm9maWxlIH1cbiAgICAgIDwvdWw+XG4gICAgKVxuICB9XG59XG5Qcm9maWxlLnByb3BUeXBlcyA9IHtcbiAgcHJlc2VudGVyOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBQcm9maWxlO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1Byb2ZpbGUuanN4XG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiODIuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar Dispatcher = _interopRequire(__webpack_require__(134));\n\nvar AppDispatcher = (function (_Dispatcher) {\n  function AppDispatcher() {\n    _classCallCheck(this, AppDispatcher);\n\n    if (_Dispatcher != null) {\n      _Dispatcher.apply(this, arguments);\n    }\n  }\n\n  _inherits(AppDispatcher, _Dispatcher);\n\n  _createClass(AppDispatcher, {\n    handleViewAction: {\n      value: function handleViewAction(action) {\n        this.dispatch({\n          source: "VIEW_ACTION",\n          action: action\n        });\n      }\n    }\n  });\n\n  return AppDispatcher;\n})(Dispatcher);\n\nmodule.exports = new AppDispatcher();\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "AppDispatcher.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9kaXNwYXRjaGVyL0FwcERpc3BhdGNoZXIuanM/YjdlNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxVQUFVLHVDQUFNLEdBQWM7O0lBRS9CLGFBQWE7V0FBYixhQUFhOzBCQUFiLGFBQWE7Ozs7Ozs7WUFBYixhQUFhOztlQUFiLGFBQWE7QUFDakIsb0JBQWdCO2FBQUEsMEJBQUMsTUFBTSxFQUFFO0FBQ3ZCLFlBQUksQ0FBQyxRQUFRLENBQUM7QUFDWixnQkFBTSxFQUFFLGFBQWE7QUFDckIsZ0JBQU0sRUFBRSxNQUFNO1NBQ2YsQ0FBQyxDQUFDO09BQ0o7Ozs7U0FORyxhQUFhO0dBQVMsVUFBVTs7aUJBU3ZCLElBQUksYUFBYSxFQUFFLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGlzcGF0Y2hlciBmcm9tICcuL0Rpc3BhdGNoZXInO1xuXG5jbGFzcyBBcHBEaXNwYXRjaGVyIGV4dGVuZHMgRGlzcGF0Y2hlciB7XG4gIGhhbmRsZVZpZXdBY3Rpb24oYWN0aW9uKSB7XG4gICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICBzb3VyY2U6ICdWSUVXX0FDVElPTicsXG4gICAgICBhY3Rpb246IGFjdGlvblxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBBcHBEaXNwYXRjaGVyKCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2Rpc3BhdGNoZXIvQXBwRGlzcGF0Y2hlci5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjgzLmpzIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar AppDispatcher = _interopRequire(__webpack_require__(83));\n\nvar EventEmitter = __webpack_require__(240).EventEmitter;\n\nvar _ = _interopRequire(__webpack_require__(81));\n\nvar CHANGE_EVENT = "CHANGE";\n\nvar Store = (function (_EventEmitter) {\n  function Store() {\n    _classCallCheck(this, Store);\n\n    this.dispatcherIndex = AppDispatcher.register(_.bind(this.handleAction, this));\n  }\n\n  _inherits(Store, _EventEmitter);\n\n  _createClass(Store, {\n    emitChange: {\n      value: function emitChange() {\n        this.emit(CHANGE_EVENT);\n      }\n    },\n    addChangeListener: {\n      value: function addChangeListener(callback) {\n        this.on(CHANGE_EVENT, callback);\n      }\n    },\n    removeChangeListener: {\n      value: function removeChangeListener(callback) {\n        this.removeListener(CHANGE_EVENT, callback);\n      }\n    }\n  });\n\n  return Store;\n})(EventEmitter);\n\nmodule.exports = Store;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "BaseStore.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9zdG9yZXMvQmFzZVN0b3JlLmpzPzE4ZjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQU8sYUFBYSx1Q0FBTSxFQUFnQzs7SUFDakQsWUFBWSx1QkFBUSxHQUFRLEVBQTVCLFlBQVk7O0lBQ2QsQ0FBQyx1Q0FBTSxFQUFROztBQUV0QixJQUFNLFlBQVksR0FBRyxRQUFRLENBQUM7O0lBRXhCLEtBQUs7QUFDRSxXQURQLEtBQUssR0FDSTswQkFEVCxLQUFLOztBQUVQLFFBQUksQ0FBQyxlQUFlLEdBQUcsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztHQUNoRjs7WUFIRyxLQUFLOztlQUFMLEtBQUs7QUFLVCxjQUFVO2FBQUEsc0JBQUc7QUFDWCxZQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO09BQ3pCOztBQUNELHFCQUFpQjthQUFBLDJCQUFDLFFBQVEsRUFBRTtBQUMxQixZQUFJLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsQ0FBQztPQUNqQzs7QUFFRCx3QkFBb0I7YUFBQSw4QkFBQyxRQUFRLEVBQUU7QUFDN0IsWUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLEVBQUUsUUFBUSxDQUFDLENBQUM7T0FDN0M7Ozs7U0FkRyxLQUFLO0dBQVMsWUFBWTs7aUJBaUJqQixLQUFLLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQXBwRGlzcGF0Y2hlciBmcm9tICcuLi9kaXNwYXRjaGVyL0FwcERpc3BhdGNoZXIuanMnXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdldmVudHMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuY29uc3QgQ0hBTkdFX0VWRU5UID0gJ0NIQU5HRSc7XG5cbmNsYXNzIFN0b3JlIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLmRpc3BhdGNoZXJJbmRleCA9IEFwcERpc3BhdGNoZXIucmVnaXN0ZXIoXy5iaW5kKHRoaXMuaGFuZGxlQWN0aW9uLCB0aGlzKSk7XG4gIH1cblxuICBlbWl0Q2hhbmdlKCkge1xuICAgIHRoaXMuZW1pdChDSEFOR0VfRVZFTlQpO1xuICB9XG4gIGFkZENoYW5nZUxpc3RlbmVyKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5vbihDSEFOR0VfRVZFTlQsIGNhbGxiYWNrKTtcbiAgfVxuXG4gIHJlbW92ZUNoYW5nZUxpc3RlbmVyKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5yZW1vdmVMaXN0ZW5lcihDSEFOR0VfRVZFTlQsIGNhbGxiYWNrKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTdG9yZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvc3RvcmVzL0Jhc2VTdG9yZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6Ijg0LmpzIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar AppStateStore = _interopRequire(__webpack_require__(136));\n\nvar ModelStore = _interopRequire(__webpack_require__(137));\n\nvar AppState = new AppStateStore();\nvar Model = new ModelStore();\n\nexports.AppState = AppState;\nexports.Model = Model;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "index.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9zdG9yZXMvaW5kZXguanM/Y2QzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0lBQU8sYUFBYSx1Q0FBTSxHQUFZOztJQUMvQixVQUFVLHVDQUFNLEdBQWM7O0FBRXJDLElBQUksUUFBUSxHQUFHLElBQUksYUFBYSxFQUFFLENBQUM7QUFDbkMsSUFBSSxLQUFLLEdBQUcsSUFBSSxVQUFVLEVBQUUsQ0FBQzs7UUFFcEIsUUFBUSxHQUFSLFFBQVE7UUFBRSxLQUFLLEdBQUwsS0FBSyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFwcFN0YXRlU3RvcmUgZnJvbSAnLi9hcHBTdGF0ZSc7XG5pbXBvcnQgTW9kZWxTdG9yZSBmcm9tICcuL2NvbGxlY3Rpb24nO1xuXG5sZXQgQXBwU3RhdGUgPSBuZXcgQXBwU3RhdGVTdG9yZSgpO1xubGV0IE1vZGVsID0gbmV3IE1vZGVsU3RvcmUoKTtcblxuZXhwb3J0IHsgQXBwU3RhdGUsIE1vZGVsIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL3N0b3Jlcy9pbmRleC5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6Ijg1LmpzIn0=')},function(module,exports,__webpack_require__){eval("function hasRender(Class) {\n  var prototype = Class.prototype;\n  if (!prototype) {\n    return false;\n  }\n\n  return typeof prototype.render === 'function';\n}\n\nfunction descendsFromReactComponent(Class, React) {\n  if (!React.Component) {\n    return false;\n  }\n\n  var Base = Object.getPrototypeOf(Class);\n  while (Base) {\n    if (Base === React.Component) {\n      return true;\n    }\n\n    Base = Object.getPrototypeOf(Base);\n  }\n\n  return false;\n}\n\nfunction isReactClassish(Class, React) {\n  if (typeof Class !== 'function') {\n    return false;\n  }\n\n  // React 0.13\n  if (hasRender(Class) || descendsFromReactComponent(Class, React)) {\n    return true;\n  }\n\n  // React 0.12 and earlier\n  if (Class.type && hasRender(Class.type)) {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isReactClassish;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvaXNSZWFjdENsYXNzaXNoLmpzP2RhODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBoYXNSZW5kZXIoQ2xhc3MpIHtcbiAgdmFyIHByb3RvdHlwZSA9IENsYXNzLnByb3RvdHlwZTtcbiAgaWYgKCFwcm90b3R5cGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHlwZW9mIHByb3RvdHlwZS5yZW5kZXIgPT09ICdmdW5jdGlvbic7XG59XG5cbmZ1bmN0aW9uIGRlc2NlbmRzRnJvbVJlYWN0Q29tcG9uZW50KENsYXNzLCBSZWFjdCkge1xuICBpZiAoIVJlYWN0LkNvbXBvbmVudCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBCYXNlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKENsYXNzKTtcbiAgd2hpbGUgKEJhc2UpIHtcbiAgICBpZiAoQmFzZSA9PT0gUmVhY3QuQ29tcG9uZW50KSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBCYXNlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKEJhc2UpO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5mdW5jdGlvbiBpc1JlYWN0Q2xhc3Npc2goQ2xhc3MsIFJlYWN0KSB7XG4gIGlmICh0eXBlb2YgQ2xhc3MgIT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvLyBSZWFjdCAwLjEzXG4gIGlmIChoYXNSZW5kZXIoQ2xhc3MpIHx8IGRlc2NlbmRzRnJvbVJlYWN0Q29tcG9uZW50KENsYXNzLCBSZWFjdCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIFJlYWN0IDAuMTIgYW5kIGVhcmxpZXJcbiAgaWYgKENsYXNzLnR5cGUgJiYgaGFzUmVuZGVyKENsYXNzLnR5cGUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNSZWFjdENsYXNzaXNoO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvaXNSZWFjdENsYXNzaXNoLmpzXG4gKiogbW9kdWxlIGlkID0gODZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6Ijg2LmpzIn0=")},,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(54);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(54, function() {\n		var newContent = __webpack_require__(54);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NsaWRlQ29udGVudC5jc3M/MGUyNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFzRztBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvc2xpZGVDb250ZW50LmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvc2xpZGVDb250ZW50LmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3NsaWRlQ29udGVudC5jc3NcIik7XG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL3N0eWxlcy9zbGlkZUNvbnRlbnQuY3NzXG4gKiogbW9kdWxlIGlkID0gMTEwXG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMTAuanMifQ==")},function(module,exports,__webpack_require__){eval('module.exports = {\n	"title": "Fail Fast, Fail Often",\n	"url": "failfast.codingthehumanities.com",\n	"event": {\n		"organizer": "Kennisland",\n		"date": "27-03-2014"\n	},\n	"presenter": {\n		"name": "Jan Hein Hoogstad",\n		"twitter": "@yeehaa",\n		"email": "yeehaa@codingthehumanities.com"\n	},\n	"slides": [\n		{\n			"title": "My Background",\n			"type": "section-title"\n		},\n		{\n			"title": "My First Program",\n			"type": "normal",\n			"content": "+ 10 Print \'Yeehaa\'\\n+ 20 Goto 10"\n		},\n		{\n			"title": "My Nature",\n			"type": "normal",\n			"content": "+ Innate Curiosity\\n+ Self-Taught\\n+ Omnivore, Polyglot\\n+ Shared Interests"\n		},\n		{\n			"title": "My Education",\n			"type": "normal",\n			"content": "+ Controlled Learning\\n+ Spoon Feeding\\n+ One Size Fits All\\n+ Accidental Peers"\n		},\n		{\n			"title": "Our Ethos",\n			"type": "section-title"\n		},\n		{\n			"type": "normal",\n			"content": "+ Common Space, Shared Home\\n+ Continuous Negotiation"\n		},\n		{\n			"type": "normal",\n			"content": "+ Set of Shared Values\\n+ Not Laws, Rules\\n+ Perpetually Unstable"\n		},\n		{\n			"type": "normal",\n			"content": "+ Dream Big\\n+ Take Tiny Steps\\n+ Fail Fast, Fail Often\\n+ Test, Test, Test\\n+ Ship It"\n		},\n		{\n			"title": "Offline Spaces",\n			"type": "section-title"\n		},\n		{\n			"title": "Pilot",\n			"type": "normal",\n			"content": "+ Bootcamp Model\\n+ Full-Time\\n+ High-Intensity"\n		},\n		{\n			"title": "Pilot",\n			"type": "normal",\n			"content": "+ 15 Students\\n+ 3 Instructors\\n+ 5 Student Assistants"\n		},\n		{\n			"title": "Pilot",\n			"type": "normal",\n			"content": "+ Co-working Space\\n+ No Lab!\\n+ Squatting the University"\n		},\n		{\n			"title": "Pilot",\n			"type": "normal",\n			"content": "+ Collaborative Project\\n+ [Making of Housemouse](https://vimeo.com/98820403)\\n+ Self and Peer Assessment"\n		},\n		{\n			"title": "Online Home",\n			"type": "section-title"\n		},\n		{\n			"title": "_Unacademic",\n			"type": "normal",\n			"content": "+ Curation\\n+ Learning"\n		},\n		{\n			"title": "_Unacademic",\n			"type": "normal",\n			"content": "+ Distributed Curriculum\\n+ Git for Learning\\n+ Clones, Forks"\n		},\n		{\n			"title": "_Unacademic",\n			"type": "normal",\n			"content": "+ Fluid Roles\\n+ Collaboration\\n+ Ownership\\n+ Dynamic Content"\n		}\n	]\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29udGVudC9jdGgtb2YtZGlmZmVyZW50LWN1bHR1cmVzLnltbD80NmE0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuXHRcInRpdGxlXCI6IFwiRmFpbCBGYXN0LCBGYWlsIE9mdGVuXCIsXG5cdFwidXJsXCI6IFwiZmFpbGZhc3QuY29kaW5ndGhlaHVtYW5pdGllcy5jb21cIixcblx0XCJldmVudFwiOiB7XG5cdFx0XCJvcmdhbml6ZXJcIjogXCJLZW5uaXNsYW5kXCIsXG5cdFx0XCJkYXRlXCI6IFwiMjctMDMtMjAxNFwiXG5cdH0sXG5cdFwicHJlc2VudGVyXCI6IHtcblx0XHRcIm5hbWVcIjogXCJKYW4gSGVpbiBIb29nc3RhZFwiLFxuXHRcdFwidHdpdHRlclwiOiBcIkB5ZWVoYWFcIixcblx0XHRcImVtYWlsXCI6IFwieWVlaGFhQGNvZGluZ3RoZWh1bWFuaXRpZXMuY29tXCJcblx0fSxcblx0XCJzbGlkZXNcIjogW1xuXHRcdHtcblx0XHRcdFwidGl0bGVcIjogXCJNeSBCYWNrZ3JvdW5kXCIsXG5cdFx0XHRcInR5cGVcIjogXCJzZWN0aW9uLXRpdGxlXCJcblx0XHR9LFxuXHRcdHtcblx0XHRcdFwidGl0bGVcIjogXCJNeSBGaXJzdCBQcm9ncmFtXCIsXG5cdFx0XHRcInR5cGVcIjogXCJub3JtYWxcIixcblx0XHRcdFwiY29udGVudFwiOiBcIisgMTAgUHJpbnQgJ1llZWhhYSdcXG4rIDIwIEdvdG8gMTBcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0aXRsZVwiOiBcIk15IE5hdHVyZVwiLFxuXHRcdFx0XCJ0eXBlXCI6IFwibm9ybWFsXCIsXG5cdFx0XHRcImNvbnRlbnRcIjogXCIrIElubmF0ZSBDdXJpb3NpdHlcXG4rIFNlbGYtVGF1Z2h0XFxuKyBPbW5pdm9yZSwgUG9seWdsb3RcXG4rIFNoYXJlZCBJbnRlcmVzdHNcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0aXRsZVwiOiBcIk15IEVkdWNhdGlvblwiLFxuXHRcdFx0XCJ0eXBlXCI6IFwibm9ybWFsXCIsXG5cdFx0XHRcImNvbnRlbnRcIjogXCIrIENvbnRyb2xsZWQgTGVhcm5pbmdcXG4rIFNwb29uIEZlZWRpbmdcXG4rIE9uZSBTaXplIEZpdHMgQWxsXFxuKyBBY2NpZGVudGFsIFBlZXJzXCJcblx0XHR9LFxuXHRcdHtcblx0XHRcdFwidGl0bGVcIjogXCJPdXIgRXRob3NcIixcblx0XHRcdFwidHlwZVwiOiBcInNlY3Rpb24tdGl0bGVcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0eXBlXCI6IFwibm9ybWFsXCIsXG5cdFx0XHRcImNvbnRlbnRcIjogXCIrIENvbW1vbiBTcGFjZSwgU2hhcmVkIEhvbWVcXG4rIENvbnRpbnVvdXMgTmVnb3RpYXRpb25cIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0eXBlXCI6IFwibm9ybWFsXCIsXG5cdFx0XHRcImNvbnRlbnRcIjogXCIrIFNldCBvZiBTaGFyZWQgVmFsdWVzXFxuKyBOb3QgTGF3cywgUnVsZXNcXG4rIFBlcnBldHVhbGx5IFVuc3RhYmxlXCJcblx0XHR9LFxuXHRcdHtcblx0XHRcdFwidHlwZVwiOiBcIm5vcm1hbFwiLFxuXHRcdFx0XCJjb250ZW50XCI6IFwiKyBEcmVhbSBCaWdcXG4rIFRha2UgVGlueSBTdGVwc1xcbisgRmFpbCBGYXN0LCBGYWlsIE9mdGVuXFxuKyBUZXN0LCBUZXN0LCBUZXN0XFxuKyBTaGlwIEl0XCJcblx0XHR9LFxuXHRcdHtcblx0XHRcdFwidGl0bGVcIjogXCJPZmZsaW5lIFNwYWNlc1wiLFxuXHRcdFx0XCJ0eXBlXCI6IFwic2VjdGlvbi10aXRsZVwiXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRcInRpdGxlXCI6IFwiUGlsb3RcIixcblx0XHRcdFwidHlwZVwiOiBcIm5vcm1hbFwiLFxuXHRcdFx0XCJjb250ZW50XCI6IFwiKyBCb290Y2FtcCBNb2RlbFxcbisgRnVsbC1UaW1lXFxuKyBIaWdoLUludGVuc2l0eVwiXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRcInRpdGxlXCI6IFwiUGlsb3RcIixcblx0XHRcdFwidHlwZVwiOiBcIm5vcm1hbFwiLFxuXHRcdFx0XCJjb250ZW50XCI6IFwiKyAxNSBTdHVkZW50c1xcbisgMyBJbnN0cnVjdG9yc1xcbisgNSBTdHVkZW50IEFzc2lzdGFudHNcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0aXRsZVwiOiBcIlBpbG90XCIsXG5cdFx0XHRcInR5cGVcIjogXCJub3JtYWxcIixcblx0XHRcdFwiY29udGVudFwiOiBcIisgQ28td29ya2luZyBTcGFjZVxcbisgTm8gTGFiIVxcbisgU3F1YXR0aW5nIHRoZSBVbml2ZXJzaXR5XCJcblx0XHR9LFxuXHRcdHtcblx0XHRcdFwidGl0bGVcIjogXCJQaWxvdFwiLFxuXHRcdFx0XCJ0eXBlXCI6IFwibm9ybWFsXCIsXG5cdFx0XHRcImNvbnRlbnRcIjogXCIrIENvbGxhYm9yYXRpdmUgUHJvamVjdFxcbisgW01ha2luZyBvZiBIb3VzZW1vdXNlXShodHRwczovL3ZpbWVvLmNvbS85ODgyMDQwMylcXG4rIFNlbGYgYW5kIFBlZXIgQXNzZXNzbWVudFwiXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRcInRpdGxlXCI6IFwiT25saW5lIEhvbWVcIixcblx0XHRcdFwidHlwZVwiOiBcInNlY3Rpb24tdGl0bGVcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0aXRsZVwiOiBcIl9VbmFjYWRlbWljXCIsXG5cdFx0XHRcInR5cGVcIjogXCJub3JtYWxcIixcblx0XHRcdFwiY29udGVudFwiOiBcIisgQ3VyYXRpb25cXG4rIExlYXJuaW5nXCJcblx0XHR9LFxuXHRcdHtcblx0XHRcdFwidGl0bGVcIjogXCJfVW5hY2FkZW1pY1wiLFxuXHRcdFx0XCJ0eXBlXCI6IFwibm9ybWFsXCIsXG5cdFx0XHRcImNvbnRlbnRcIjogXCIrIERpc3RyaWJ1dGVkIEN1cnJpY3VsdW1cXG4rIEdpdCBmb3IgTGVhcm5pbmdcXG4rIENsb25lcywgRm9ya3NcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJ0aXRsZVwiOiBcIl9VbmFjYWRlbWljXCIsXG5cdFx0XHRcInR5cGVcIjogXCJub3JtYWxcIixcblx0XHRcdFwiY29udGVudFwiOiBcIisgRmx1aWQgUm9sZXNcXG4rIENvbGxhYm9yYXRpb25cXG4rIE93bmVyc2hpcFxcbisgRHluYW1pYyBDb250ZW50XCJcblx0XHR9XG5cdF1cbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2NvbnRlbnQvY3RoLW9mLWRpZmZlcmVudC1jdWx0dXJlcy55bWxcbiAqKiBtb2R1bGUgaWQgPSAxMTFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjExMS5qcyJ9')},function(module,exports,__webpack_require__){eval('/**\n * Copyright 2013-2014 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n"use strict";\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function(obj) {\n  var ret = {};\n  var key;\n  if (!(obj instanceof Object && !Array.isArray(obj))) {\n    throw new Error(\'keyMirror(...): Argument must be an object.\');\n  }\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2tleW1pcnJvci9pbmRleC5qcz8wMzc4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0JBQXNCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxjQUFjO0FBQ2Q7QUFDQSxXQUFXLE9BQU87QUFDbEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICpcbiAqL1xuXG5cInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb25zdHJ1Y3RzIGFuIGVudW1lcmF0aW9uIHdpdGgga2V5cyBlcXVhbCB0byB0aGVpciB2YWx1ZS5cbiAqXG4gKiBGb3IgZXhhbXBsZTpcbiAqXG4gKiAgIHZhciBDT0xPUlMgPSBrZXlNaXJyb3Ioe2JsdWU6IG51bGwsIHJlZDogbnVsbH0pO1xuICogICB2YXIgbXlDb2xvciA9IENPTE9SUy5ibHVlO1xuICogICB2YXIgaXNDb2xvclZhbGlkID0gISFDT0xPUlNbbXlDb2xvcl07XG4gKlxuICogVGhlIGxhc3QgbGluZSBjb3VsZCBub3QgYmUgcGVyZm9ybWVkIGlmIHRoZSB2YWx1ZXMgb2YgdGhlIGdlbmVyYXRlZCBlbnVtIHdlcmVcbiAqIG5vdCBlcXVhbCB0byB0aGVpciBrZXlzLlxuICpcbiAqICAgSW5wdXQ6ICB7a2V5MTogdmFsMSwga2V5MjogdmFsMn1cbiAqICAgT3V0cHV0OiB7a2V5MToga2V5MSwga2V5Mjoga2V5Mn1cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gb2JqXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbnZhciBrZXlNaXJyb3IgPSBmdW5jdGlvbihvYmopIHtcbiAgdmFyIHJldCA9IHt9O1xuICB2YXIga2V5O1xuICBpZiAoIShvYmogaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkob2JqKSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ2tleU1pcnJvciguLi4pOiBBcmd1bWVudCBtdXN0IGJlIGFuIG9iamVjdC4nKTtcbiAgfVxuICBmb3IgKGtleSBpbiBvYmopIHtcbiAgICBpZiAoIW9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgcmV0W2tleV0gPSBrZXk7XG4gIH1cbiAgcmV0dXJuIHJldDtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ga2V5TWlycm9yO1xuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34va2V5bWlycm9yL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMTEyXG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMTIuanMifQ==');

},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,}) *(\\S+)? *\\n([\\s\\S]+?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3]\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:__|[\\s\\S])+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(this.smartypants(cap[0]));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/--/g, '\\u2014')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))//@ sourceMappingURL=data:application/json;base64,");

},function(module,exports,__webpack_require__){eval("'use strict';\n\nfunction getRootInstancesFromReactMount(ReactMount) {\n  return ReactMount._instancesByReactRootID || ReactMount._instancesByContainerID || [];\n}\n\nmodule.exports = getRootInstancesFromReactMount;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvZ2V0Um9vdEluc3RhbmNlc0Zyb21SZWFjdE1vdW50LmpzPzA2NDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBnZXRSb290SW5zdGFuY2VzRnJvbVJlYWN0TW91bnQoUmVhY3RNb3VudCkge1xuICByZXR1cm4gUmVhY3RNb3VudC5faW5zdGFuY2VzQnlSZWFjdFJvb3RJRCB8fCBSZWFjdE1vdW50Ll9pbnN0YW5jZXNCeUNvbnRhaW5lcklEIHx8IFtdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdldFJvb3RJbnN0YW5jZXNGcm9tUmVhY3RNb3VudDtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWFjdC1ob3QtbG9hZGVyL2dldFJvb3RJbnN0YW5jZXNGcm9tUmVhY3RNb3VudC5qc1xuICoqIG1vZHVsZSBpZCA9IDExNFxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTE0LmpzIn0=")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Actions = _interopRequire(__webpack_require__(27));\n\nvar Collapser = (function (_React$Component) {\n  function Collapser() {\n    _classCallCheck(this, Collapser);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Collapser, _React$Component);\n\n  _createClass(Collapser, {\n    handleClick: {\n      value: function handleClick(direction) {\n        Actions.toggleSidebar();\n      }\n    },\n    render: {\n      value: function render() {\n        var isOpen = this.props.isOpen;\n\n        var classes = "collapser";\n\n        return React.createElement(\n          "button",\n          { onClick: this.handleClick, className: classes },\n          isOpen ? "-" : "+"\n        );\n      }\n    }\n  });\n\n  return Collapser;\n})(React.Component);\n\nCollapser.propTypes = {\n  isOpen: React.PropTypes.bool\n};\n\nmodule.exports = Collapser;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Collapser.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NvbGxhcHNlci5qc3g/OWRkMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLE9BQU8sdUNBQU0sRUFBcUI7O0lBRW5DLFNBQVM7V0FBVCxTQUFTOzBCQUFULFNBQVM7Ozs7Ozs7WUFBVCxTQUFTOztlQUFULFNBQVM7QUFFYixlQUFXO2FBQUEscUJBQUMsU0FBUyxFQUFDO0FBQ3BCLGVBQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztPQUN6Qjs7QUFFRCxVQUFNO2FBQUEsa0JBQUU7WUFDQSxNQUFNLEdBQUssSUFBSSxDQUFDLEtBQUssQ0FBckIsTUFBTTs7QUFDWixZQUFJLE9BQU8sR0FBRSxXQUFXLENBQUM7O0FBRXpCLGVBQ0U7O1lBQVEsT0FBTyxFQUFHLElBQUksQ0FBQyxXQUFhLEVBQUMsU0FBUyxFQUFHLE9BQVM7VUFDdEQsTUFBTSxHQUFHLEdBQUcsR0FBRyxHQUFHO1NBQ2IsQ0FDVjtPQUNGOzs7O1NBZkcsU0FBUztHQUFTLEtBQUssQ0FBQyxTQUFTOztBQWtCdkMsU0FBUyxDQUFDLFNBQVMsR0FBRztBQUNwQixRQUFNLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0NBQzdCOztpQkFFYyxTQUFTLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9pbmRleC5qcyc7XG5cbmNsYXNzIENvbGxhcHNlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgaGFuZGxlQ2xpY2soZGlyZWN0aW9uKXtcbiAgICBBY3Rpb25zLnRvZ2dsZVNpZGViYXIoKTtcbiAgfVxuXG4gIHJlbmRlcigpe1xuICAgIGxldCB7IGlzT3BlbiB9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgY2xhc3Nlcz0gJ2NvbGxhcHNlcic7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsgdGhpcy5oYW5kbGVDbGljayB9IGNsYXNzTmFtZT17IGNsYXNzZXMgfT5cbiAgICAgICAgeyBpc09wZW4gPyAnLScgOiAnKycgfVxuICAgICAgPC9idXR0b24+XG4gICAgKVxuICB9XG59XG5cbkNvbGxhcHNlci5wcm9wVHlwZXMgPSB7XG4gIGlzT3BlbjogUmVhY3QuUHJvcFR5cGVzLmJvb2xcbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29sbGFwc2VyO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NvbGxhcHNlci5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMTUuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Actions = _interopRequire(__webpack_require__(27));\n\nvar DirectionButton = _interopRequire(__webpack_require__(118));\n\nvar R = _interopRequire(__webpack_require__(21));\n\nvar ControlPanel = (function (_React$Component) {\n  function ControlPanel() {\n    _classCallCheck(this, ControlPanel);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(ControlPanel, _React$Component);\n\n  _createClass(ControlPanel, {\n    handleClick: {\n      value: function handleClick(direction) {\n        Actions.toggleSidebar();\n      }\n    },\n    render: {\n      value: function render() {\n        var isOpen = this.props.isOpen;\n\n        var directions = ["start", "back", "forward", "end"];\n        var createButtons = R.map(function (direction) {\n          return React.createElement(DirectionButton, { key: direction, direction: direction });\n        });\n        var buttons = createButtons(directions);\n        var classes = "controlPanel " + (!isOpen ? "closed" : "open");\n\n        return React.createElement(\n          "section",\n          { className: classes },\n          buttons\n        );\n      }\n    }\n  });\n\n  return ControlPanel;\n})(React.Component);\n\nControlPanel.propTypes = {\n  isOpen: React.PropTypes.bool\n};\n\nmodule.exports = ControlPanel;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "ControlPanel.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NvbnRyb2xQYW5lbC5qc3g/MTRhYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLE9BQU8sdUNBQU0sRUFBcUI7O0lBQ2xDLGVBQWUsdUNBQU0sR0FBdUI7O0lBQzVDLENBQUMsdUNBQU0sRUFBTzs7SUFFZixZQUFZO1dBQVosWUFBWTswQkFBWixZQUFZOzs7Ozs7O1lBQVosWUFBWTs7ZUFBWixZQUFZO0FBRWhCLGVBQVc7YUFBQSxxQkFBQyxTQUFTLEVBQUM7QUFDcEIsZUFBTyxDQUFDLGFBQWEsRUFBRSxDQUFDO09BQ3pCOztBQUVELFVBQU07YUFBQSxrQkFBRTtZQUNBLE1BQU0sR0FBSyxJQUFJLENBQUMsS0FBSyxDQUFyQixNQUFNOztBQUNaLFlBQUksVUFBVSxHQUFHLENBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsS0FBSyxDQUFFLENBQUM7QUFDdkQsWUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFDLFNBQVM7aUJBQ2xDLG9CQUFDLGVBQWUsSUFBQyxHQUFHLEVBQUcsU0FBVyxFQUFDLFNBQVMsRUFBRyxTQUFXLEdBQUU7U0FDN0QsQ0FBQyxDQUFDO0FBQ0gsWUFBSSxPQUFPLEdBQUcsYUFBYSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3hDLFlBQUksT0FBTyxzQkFBb0IsQ0FBQyxNQUFNLEdBQUcsUUFBUSxHQUFHLE1BQU0sQ0FBRyxDQUFDOztBQUU5RCxlQUNFOztZQUFTLFNBQVMsRUFBRyxPQUFTO1VBQzFCLE9BQU87U0FDRCxDQUNYO09BQ0Y7Ozs7U0FwQkcsWUFBWTtHQUFTLEtBQUssQ0FBQyxTQUFTOztBQXVCMUMsWUFBWSxDQUFDLFNBQVMsR0FBRztBQUN2QixRQUFNLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0NBQzdCOztpQkFFYyxZQUFZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9pbmRleC5qcyc7XG5pbXBvcnQgRGlyZWN0aW9uQnV0dG9uIGZyb20gJy4vRGlyZWN0aW9uQnV0dG9uLmpzeCc7XG5pbXBvcnQgUiBmcm9tICdyYW1kYSc7XG5cbmNsYXNzIENvbnRyb2xQYW5lbCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgaGFuZGxlQ2xpY2soZGlyZWN0aW9uKXtcbiAgICBBY3Rpb25zLnRvZ2dsZVNpZGViYXIoKTtcbiAgfVxuXG4gIHJlbmRlcigpe1xuICAgIGxldCB7IGlzT3BlbiB9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgZGlyZWN0aW9ucyA9IFsgJ3N0YXJ0JywgJ2JhY2snLCAnZm9yd2FyZCcsICdlbmQnIF07XG4gICAgbGV0IGNyZWF0ZUJ1dHRvbnMgPSBSLm1hcCgoZGlyZWN0aW9uKSA9PiAoXG4gICAgICA8RGlyZWN0aW9uQnV0dG9uIGtleT17IGRpcmVjdGlvbiB9IGRpcmVjdGlvbj17IGRpcmVjdGlvbiB9Lz5cbiAgICApKTtcbiAgICBsZXQgYnV0dG9ucyA9IGNyZWF0ZUJ1dHRvbnMoZGlyZWN0aW9ucyk7XG4gICAgbGV0IGNsYXNzZXMgPSBgY29udHJvbFBhbmVsICR7ICFpc09wZW4gPyAnY2xvc2VkJyA6ICdvcGVuJyB9YDtcblxuICAgIHJldHVybiAoXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9eyBjbGFzc2VzIH0+XG4gICAgICAgIHsgYnV0dG9ucyB9XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKVxuICB9XG59XG5cbkNvbnRyb2xQYW5lbC5wcm9wVHlwZXMgPSB7XG4gIGlzT3BlbjogUmVhY3QuUHJvcFR5cGVzLmJvb2xcbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29udHJvbFBhbmVsO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NvbnRyb2xQYW5lbC5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMTYuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(46);\n\nvar Profile = _interopRequire(__webpack_require__(82));\n\nvar CreditsSlide = (function (_React$Component) {\n  function CreditsSlide() {\n    _classCallCheck(this, CreditsSlide);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(CreditsSlide, _React$Component);\n\n  _createClass(CreditsSlide, {\n    render: {\n      value: function render() {\n        console.log("hi");\n        var _props$slide = this.props.slide;\n        var url = _props$slide.url;\n        var presenter = _props$slide.presenter;\n\n        return React.createElement(\n          "section",\n          { className: "slide CreditsSlide" },\n          React.createElement("header", null),\n          React.createElement(\n            "section",\n            { className: "content" },\n            React.createElement(\n              "h1",\n              null,\n              url\n            )\n          ),\n          React.createElement(\n            "footer",\n            null,\n            React.createElement(Profile, { presenter: presenter })\n          )\n        );\n      }\n    }\n  });\n\n  return CreditsSlide;\n})(React.Component);\n\nCreditsSlide.propTypes = {\n  slide: React.PropTypes.object.isRequired\n};\n\nmodule.exports = CreditsSlide;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "CreditsSlide.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0NyZWRpdHNTbGlkZS5qc3g/OWM0MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O29CQUNsQixFQUF3Qjs7SUFDeEIsT0FBTyx1Q0FBTSxFQUFlOztJQUU3QixZQUFZO1dBQVosWUFBWTswQkFBWixZQUFZOzs7Ozs7O1lBQVosWUFBWTs7ZUFBWixZQUFZO0FBQ2hCLFVBQU07YUFBQSxrQkFBRTtBQUNOLGVBQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7MkJBQ08sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLO1lBQW5DLEdBQUcsZ0JBQUgsR0FBRztZQUFFLFNBQVMsZ0JBQVQsU0FBUzs7QUFDcEIsZUFDRTs7WUFBUyxTQUFTLEVBQUMsb0JBQW9CO1VBQ3JDLG1DQUFpQjtVQUNqQjs7Y0FBUyxTQUFTLEVBQUMsU0FBUztZQUMxQjs7O2NBQU0sR0FBRzthQUFPO1dBQ1I7VUFDVjs7O1lBQ0Usb0JBQUMsT0FBTyxJQUFDLFNBQVMsRUFBRyxTQUFXLEdBQUU7V0FDM0I7U0FDRCxDQUNYO09BQ0Y7Ozs7U0FmRyxZQUFZO0dBQVMsS0FBSyxDQUFDLFNBQVM7O0FBaUIxQyxZQUFZLENBQUMsU0FBUyxHQUFHO0FBQ3ZCLE9BQUssRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVO0NBQ3pDOztpQkFHYyxZQUFZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuLi8uLi9zdHlsZXMvc2xpZGUuY3NzJztcbmltcG9ydCBQcm9maWxlIGZyb20gJy4vUHJvZmlsZS5qc3gnO1xuXG5jbGFzcyBDcmVkaXRzU2xpZGUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKXtcbiAgICBjb25zb2xlLmxvZygnaGknKTtcbiAgICBsZXQgeyB1cmwsIHByZXNlbnRlciB9ID0gdGhpcy5wcm9wcy5zbGlkZTtcbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPSdzbGlkZSBDcmVkaXRzU2xpZGUnPlxuICAgICAgICA8aGVhZGVyPjwvaGVhZGVyPlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJjb250ZW50XCI+XG4gICAgICAgICAgPGgxPnsgdXJsIH08L2gxPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgIDxmb290ZXI+XG4gICAgICAgICAgPFByb2ZpbGUgcHJlc2VudGVyPXsgcHJlc2VudGVyIH0vPlxuICAgICAgICA8L2Zvb3Rlcj5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICApXG4gIH1cbn1cbkNyZWRpdHNTbGlkZS5wcm9wVHlwZXMgPSB7XG4gIHNsaWRlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBDcmVkaXRzU2xpZGU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvQ3JlZGl0c1NsaWRlLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjExNy5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Actions = _interopRequire(__webpack_require__(27));\n\nvar DirectionButton = (function (_React$Component) {\n  function DirectionButton() {\n    _classCallCheck(this, DirectionButton);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(DirectionButton, _React$Component);\n\n  _createClass(DirectionButton, {\n    handleClick: {\n      value: function handleClick(direction) {\n        Actions.transitionSlide(direction);\n      }\n    },\n    render: {\n      value: function render() {\n        var direction = this.props.direction;\n\n        var buttonTexts = {\n          start: "<<",\n          back: "<",\n          forward: ">",\n          end: ">>"\n        };\n        var text = buttonTexts[direction];\n        return React.createElement(\n          "button",\n          { className: direction,\n            onClick: this.handleClick.bind(this, direction) },\n          text\n        );\n      }\n    }\n  });\n\n  return DirectionButton;\n})(React.Component);\n\nDirectionButton.propTypes = {\n  direction: React.PropTypes.string.isRequired\n};\n\nmodule.exports = DirectionButton;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "DirectionButton.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0RpcmVjdGlvbkJ1dHRvbi5qc3g/NzZiYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLE9BQU8sdUNBQU0sRUFBcUI7O0lBRW5DLGVBQWU7V0FBZixlQUFlOzBCQUFmLGVBQWU7Ozs7Ozs7WUFBZixlQUFlOztlQUFmLGVBQWU7QUFFbkIsZUFBVzthQUFBLHFCQUFDLFNBQVMsRUFBQztBQUNwQixlQUFPLENBQUMsZUFBZSxDQUFDLFNBQVMsQ0FBQyxDQUFDO09BQ3BDOztBQUVELFVBQU07YUFBQSxrQkFBRTtZQUNBLFNBQVMsR0FBSyxJQUFJLENBQUMsS0FBSyxDQUF4QixTQUFTOztBQUNmLFlBQUksV0FBVyxHQUFHO0FBQ2hCLGlCQUFTLElBQUk7QUFDYixnQkFBUSxHQUFHO0FBQ1gsbUJBQVcsR0FBRztBQUNkLGVBQU8sSUFBSTtTQUNaLENBQUM7QUFDRixZQUFJLElBQUksR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDbEMsZUFDRTs7WUFBUSxTQUFTLEVBQUcsU0FBVztBQUM3QixtQkFBTyxFQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUc7VUFDaEQsSUFBSTtTQUNDLENBQ1Y7T0FDRjs7OztTQXJCRyxlQUFlO0dBQVMsS0FBSyxDQUFDLFNBQVM7O0FBd0I3QyxlQUFlLENBQUMsU0FBUyxHQUFHO0FBQzFCLFdBQVMsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVO0NBQzdDLENBQUM7O2lCQUVhLGVBQWUsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL2luZGV4LmpzJztcblxuY2xhc3MgRGlyZWN0aW9uQnV0dG9uIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBoYW5kbGVDbGljayhkaXJlY3Rpb24pe1xuICAgIEFjdGlvbnMudHJhbnNpdGlvblNsaWRlKGRpcmVjdGlvbik7XG4gIH1cblxuICByZW5kZXIoKXtcbiAgICBsZXQgeyBkaXJlY3Rpb24gfSA9IHRoaXMucHJvcHM7XG4gICAgbGV0IGJ1dHRvblRleHRzID0ge1xuICAgICAgJ3N0YXJ0JzogJzw8JyxcbiAgICAgICdiYWNrJzogJzwnLFxuICAgICAgJ2ZvcndhcmQnOiAnPicsXG4gICAgICAnZW5kJzogJz4+J1xuICAgIH07XG4gICAgbGV0IHRleHQgPSBidXR0b25UZXh0c1tkaXJlY3Rpb25dO1xuICAgIHJldHVybiAoXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT17IGRpcmVjdGlvbiB9IFxuICAgICAgICBvbkNsaWNrPXsgdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMsIGRpcmVjdGlvbikgfT5cbiAgICAgICAgeyB0ZXh0IH1cbiAgICAgIDwvYnV0dG9uPlxuICAgIClcbiAgfVxufVxuXG5EaXJlY3Rpb25CdXR0b24ucHJvcFR5cGVzID0ge1xuICBkaXJlY3Rpb246IFJlYWN0LlByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgRGlyZWN0aW9uQnV0dG9uO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL0RpcmVjdGlvbkJ1dHRvbi5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMTguanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Logo = (function (_React$Component) {\n  function Logo() {\n    _classCallCheck(this, Logo);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Logo, _React$Component);\n\n  _createClass(Logo, {\n    render: {\n      value: function render() {\n        return React.createElement(\n          "svg",\n          { x: "0px", y: "0px", width: "960px", height: "560px", viewBox: "0 0 960 560" },\n          React.createElement("rect", { x: "46", y: "376", fill: "#FFFFFF", width: "866", height: "133" }),\n          React.createElement("rect", { x: "46", y: "212", fill: "#FFFFFF", width: "382", height: "137" }),\n          React.createElement("rect", { x: "46", y: "46", fill: "#FFFFFF", width: "627", height: "143" }),\n          React.createElement(\n            "g",\n            null,\n            React.createElement("path", { fill: "#231F20", d: "M190.792 104.191c-9.102 0-14.264 4.755-14.264 16.846s5.162 16.8 14.3 16.8 c9.102 0 14.262-4.754 14.262-16.845S199.892 104.2 190.8 104.191z" }),\n            React.createElement("path", { fill: "#231F20", d: "M502.426 119.271c0 9.1 3.8 15.1 13 15.08c5.57 0 9.238-2.174 11.819-4.483v-21.192 c-2.581-2.31-6.249-4.483-11.819-4.483C506.228 104.2 502.4 110.2 502.4 119.271z" }),\n            React.createElement("path", { fill: "#231F20", d: "M257.899 121.037c0 10.2 3.5 16.6 12.8 16.573c5.57 0 9.781-2.31 12.09-4.482v-24.182 c-2.31-2.174-6.521-4.482-12.09-4.482C261.432 104.5 257.9 110.8 257.9 121.037z" }),\n            React.createElement("path", { fill: "#231F20", d: "M40 45v147.17h638.49V45H40z M344.025 62.353h21.464V81.1h-21.464V62.353z M110.234 136.7 c9.509 0 13.311-4.618 13.992-15.215h19.291c-1.358 20.514-11.955 31.379-33.417 31.379c-25.404 0-35.321-15.215-35.321-40.073 c0-25.268 10.189-41.432 36.272-41.432c21.19 0 31.5 10.7 32.5 31.515h-19.291c-0.679-10.596-4.89-15.351-14.264-15.351 c-13.177 0-15.758 9.373-15.758 24.586S96.785 136.7 110.2 136.659z M190.382 152.825c-15.894 0-32.737-7.199-32.737-31.515 c0-24.857 17.661-31.924 33.553-31.924c16.03 0 32.7 7.2 32.7 31.379C223.937 145.6 206.3 152.8 190.4 152.825z M300.961 151.465h-16.166v-8.151c-2.989 4.348-9.917 9.51-20.239 9.51c-14.128 0-25.54-9.781-25.54-31.65 c0-22.687 12.362-31.789 25.54-31.789c9.915 0 15.9 5.2 18.2 7.88V62.353h18.204v89.112H300.961z M382.471 151.465h-57.326 v-13.721h20.514v-33.283h-20.514V90.74h38.715v47.002h18.611V151.465z M463.842 151.465h-18.203v-34.367 c0-8.559-2.174-12.498-9.51-12.498c-4.891 0-8.423 1.63-11.14 4.347v42.519h-18.204v-60.72h16.166v8.15 c2.989-4.48 9.238-9.509 19.562-9.509c10.868 0 21.3 5.6 21.3 24.452v37.626H463.842z M545.487 152.4 c0 17.253-11.273 25.539-31.515 25.539c-12.77 0-28.393-3.26-29.069-24.045h17.389c0.543 5.7 2.7 10.9 12.6 10.9 c11.14 0 12.362-6.521 12.362-13.856v-9.374c-2.988 3.396-8.15 7.607-17.66 7.607c-14.534 0-26.083-9.781-26.083-29.615 c0-19.967 11.818-30.156 26.219-30.156c9.781 0 16.7 4.8 19.6 9.103v-7.744h16.166v61.674H545.487z M636.097 167.224h-75.53 v-15.757h75.53V167.224z" })\n          ),\n          React.createElement(\n            "g",\n            null,\n            React.createElement("path", { fill: "#231F20", d: "M272.299 266.126c-6.113 0-12.088 2.31-13.992 10.051h27.985 C284.388 268.4 278.4 266.1 272.3 266.126z" }),\n            React.createElement("path", { fill: "#231F20", d: "M40 208.019v147.17h393.962v-147.17H40z M141.205 267.482h-30.021v19.426 c0 9.8 1.9 13.9 11 13.857c6.249 0 12.091-1.902 16.166-3.532v14.264c-4.483 2.038-11.547 4.348-20.785 4.3 c-16.03 0-24.586-7.064-24.586-28.255v-20.105H74.1v-13.721h18.883v-28.393h18.204v28.393h30.021v13.719H141.205z M219.318 314.5 h-18.204v-34.367c0-8.559-2.174-12.498-9.51-12.498c-5.977 0-9.645 2.717-11.14 4.347v42.519h-18.201v-89.112h18.204v35.047 c2.581-3.124 7.472-8.015 17.93-8.015c11.14 0 20.9 5.6 20.9 24.452V314.483z M305.037 287.181h-47.001 c0 8.7 4.2 14.9 15.4 14.943c6.792 0 11.819-2.31 12.634-6.657h18.748c-3.261 15.216-16.846 20.378-31.515 20.4 c-18.883 0-33.688-8.559-33.688-31.379c0-24.453 16.981-32.061 33.281-32.061c16.843 0 32.2 8 32.2 31.65v3.125H305.037z M391.573 330.242h-75.53v-15.756h75.53V330.242L391.573 330.242z" })\n          ),\n          React.createElement(\n            "g",\n            null,\n            React.createElement("path", { fill: "#231F20", d: "M761.35 429.145c-6.113 0-12.089 2.31-13.993 10.051h27.985 C773.439 431.5 767.5 429.1 761.4 429.145z" }),\n            React.createElement("path", { fill: "#231F20", d: "M339.409 460.796c0 3.9 3.3 5.6 8.7 5.569c7.336 0 13.178-2.853 15.08-4.483v-6.249 c-1.902-0.407-7.472-0.814-11.819-0.814C344.433 454.8 339.4 455.9 339.4 460.796z" }),\n            React.createElement("path", { fill: "#231F20", d: "M40 371.038v147.169h878.49V371.038H40z M670.059 388.391h21.464v18.747h-21.464V388.391z M507.042 388.4 h21.464v18.747h-21.464V388.391z M137.809 477.503h-18.881v-32.194H99.638v32.194H80.754v-78.654h18.881v30.701h19.291v-30.701 h18.881v78.654H137.809z M219.318 477.503h-16.166v-8.151c-2.989 4.483-9.238 9.51-19.562 9.5 c-10.868 0-21.326-5.57-21.326-24.453V416.78h18.204v34.367c0 8.6 2.2 12.5 9.5 12.498c4.891 0 8.423-1.63 11.14-4.347 V416.78h18.204v60.723H219.318z M307.075 477.503h-15.621v-39.666c0-5.434-0.951-8.423-4.483-8.423 c-3.396 0-6.113 2.989-6.928 4.348v43.741h-15.485v-39.666c0-5.434-0.951-8.423-4.483-8.423c-3.396 0-6.113 2.989-6.928 4.3 v43.741h-15.623V416.78h13.585v8.287c1.902-3.396 6.385-9.646 15.215-9.646c7.2 0 11 4.3 12.4 8.8 c1.087-1.766 5.434-8.83 14.669-8.83c11.004 0 13.7 10.1 13.7 20.514v41.567H307.075z M389.263 476.1 c-2.717 1.358-7.879 2.717-12.634 2.717c-8.015 0-10.596-3.804-10.596-8.694v-1.223c-3.125 3.939-9.917 9.917-22.823 9.9 c-11.955 0-22.005-5.298-22.005-17.524c0-13.857 12.77-17.797 25.945-17.797c6.928 0 13 1.1 16 1.902v-4.619 c0-6.521-1.494-11.411-11.275-11.411c-6.928 0-11.683 2.445-11.683 8.694h-16.981c0-16.03 12.77-22.687 29.749-22.687 c15.623 0 28.3 5.7 28.3 23.909v22.687c0 2.3 1 3.1 3.3 3.125c1.495 0 3.668-0.408 4.755-0.68v11.684H389.263z M463.842 477.503h-18.203v-34.368c0-8.559-2.174-12.498-9.51-12.498c-4.891 0-8.423 1.631-11.14 4.348v42.519h-18.204V416.78 h16.166v8.151c2.989-4.481 9.238-9.51 19.562-9.51c10.868 0 21.3 5.6 21.3 24.453v37.628H463.842z M545.487 477.503h-57.326 v-13.721h20.514v-33.283h-20.514v-13.721h38.715v47.001h18.611V477.503z M630.255 430.501h-30.021v19.427 c0 9.8 1.9 13.9 11 13.856c6.249 0 12.091-1.902 16.166-3.532v14.265c-4.483 2.037-11.547 4.347-20.785 4.3 c-16.03 0-24.586-7.064-24.586-28.254v-20.106H563.15v-13.721h18.883v-28.392h18.204v28.392h30.02v13.719H630.255z M708.504 477.503h-57.326v-13.721h20.514v-33.283h-20.514v-13.721h38.715v47.001h18.611V477.503z M794.087 450.199h-47.002 c0 8.7 4.2 14.9 15.4 14.943c6.792 0 11.818-2.31 12.634-6.656h18.747c-3.261 15.215-16.846 20.377-31.515 20.4 c-18.884 0-33.688-8.559-33.688-31.379c0-24.453 16.98-32.061 33.28-32.061c16.844 0 32.2 8 32.2 31.651v3.124H794.087z M842.041 478.863c-17.389-0.136-31.515-4.891-31.922-20.377h18.609c0.543 5.8 6.7 7.5 14.7 7.5 c7.064 0 13.313-1.223 13.313-5.57c0-5.026-8.83-5.434-20.785-7.336c-11.683-1.901-24.588-4.891-24.588-18.476 c0-13.446 12.77-19.152 30.974-19.152c15.894 0 28.8 4.3 29.8 19.291h-18.611c-0.815-5.162-6.793-6.385-12.771-6.385 c-6.385 0-10.596 1.358-10.596 4.891c0 4.3 6.7 5 20.9 6.928c11.954 1.6 24.6 4.9 24.6 18.7 C875.596 474 860.2 479 842 478.863z" })\n          )\n        );\n      }\n    }\n  });\n\n  return Logo;\n})(React.Component);\n\nmodule.exports = Logo;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "LogoText.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,');

},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Sidebar = _interopRequire(__webpack_require__(127));\n\nvar Main = _interopRequire(__webpack_require__(122));\n\nvar AppState = __webpack_require__(85).AppState;\n\n__webpack_require__(222);\n\n__webpack_require__(223);\n\nvar MPC = (function (_React$Component) {\n  function MPC() {\n    _classCallCheck(this, MPC);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(MPC, _React$Component);\n\n  _createClass(MPC, {\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var playing = _props.playing;\n        var slideShow = _props.slideShow;\n        var activeSlide = _props.activeSlide;\n        var sidebarOpen = _props.sidebarOpen;\n\n        return React.createElement(\n          "section",\n          { className: "app" },\n          React.createElement(Sidebar, { side: "left", isOpen: sidebarOpen }),\n          React.createElement(Main, { activeSlide: activeSlide, playing: playing, slides: slideShow.slides }),\n          React.createElement(Sidebar, { side: "right", isOpen: sidebarOpen })\n        );\n      }\n    }\n  });\n\n  return MPC;\n})(React.Component);\n\nMPC.propTypes = {\n  activeSlide: React.PropTypes.number,\n  playing: React.PropTypes.bool,\n  slideShow: React.PropTypes.object.isRequired,\n  sidebarOpen: React.PropTypes.bool\n};\n\nmodule.exports = MPC;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "MPC.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL01QQy5qc3g/N2E2YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLE9BQU8sdUNBQU0sR0FBZTs7SUFDNUIsSUFBSSx1Q0FBTSxHQUFZOztJQUNwQixRQUFRLHVCQUFRLEVBQW9CLEVBQXBDLFFBQVE7O29CQUVWLEdBQTZCOztvQkFDN0IsR0FBc0I7O0lBRXZCLEdBQUc7V0FBSCxHQUFHOzBCQUFILEdBQUc7Ozs7Ozs7WUFBSCxHQUFHOztlQUFILEdBQUc7QUFDUCxVQUFNO2FBQUEsa0JBQUU7cUJBQ2lELElBQUksQ0FBQyxLQUFLO1lBQTNELE9BQU8sVUFBUCxPQUFPO1lBQUUsU0FBUyxVQUFULFNBQVM7WUFBRSxXQUFXLFVBQVgsV0FBVztZQUFFLFdBQVcsVUFBWCxXQUFXOztBQUNsRCxlQUNFOztZQUFTLFNBQVMsRUFBQyxLQUFLO1VBQ3RCLG9CQUFDLE9BQU8sSUFBQyxJQUFJLEVBQUcsTUFBUSxFQUFDLE1BQU0sRUFBRyxXQUFhLEdBQUc7VUFDbEQsb0JBQUMsSUFBSSxJQUFDLFdBQVcsRUFBRyxXQUFhLEVBQUMsT0FBTyxFQUFHLE9BQVMsRUFBQyxNQUFNLEVBQUcsU0FBUyxDQUFDLE1BQVEsR0FBRTtVQUNuRixvQkFBQyxPQUFPLElBQUMsSUFBSSxFQUFHLE9BQVMsRUFBQyxNQUFNLEVBQUcsV0FBYSxHQUFHO1NBQzNDLENBQ1g7T0FDRjs7OztTQVZHLEdBQUc7R0FBUyxLQUFLLENBQUMsU0FBUzs7QUFhakMsR0FBRyxDQUFDLFNBQVMsR0FBRztBQUNkLGFBQVcsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU07QUFDbkMsU0FBTyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSTtBQUM3QixXQUFTLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVTtBQUM1QyxhQUFXLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0NBQ2xDOztpQkFHYyxHQUFHLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFNpZGViYXIgZnJvbSAnLi9TaWRlYmFyLmpzeCc7XG5pbXBvcnQgTWFpbiBmcm9tICcuL01haW4uanN4JztcbmltcG9ydCB7IEFwcFN0YXRlIH0gZnJvbSAnLi4vc3RvcmVzL2luZGV4LmpzJztcblxuaW1wb3J0ICdub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MnO1xuaW1wb3J0ICcuLi8uLi9zdHlsZXMvYXBwLmNzcyc7XG5cbmNsYXNzIE1QQyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpe1xuICAgIGxldCB7IHBsYXlpbmcsIHNsaWRlU2hvdywgYWN0aXZlU2xpZGUsIHNpZGViYXJPcGVuIH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9J2FwcCc+XG4gICAgICAgIDxTaWRlYmFyIHNpZGU9eyAnbGVmdCcgfSBpc09wZW49eyBzaWRlYmFyT3BlbiB9IC8+XG4gICAgICAgIDxNYWluIGFjdGl2ZVNsaWRlPXsgYWN0aXZlU2xpZGUgfSBwbGF5aW5nPXsgcGxheWluZyB9IHNsaWRlcz17IHNsaWRlU2hvdy5zbGlkZXMgfS8+XG4gICAgICAgIDxTaWRlYmFyIHNpZGU9eyAncmlnaHQnIH0gaXNPcGVuPXsgc2lkZWJhck9wZW4gfSAvPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIClcbiAgfVxufVxuXG5NUEMucHJvcFR5cGVzID0ge1xuICBhY3RpdmVTbGlkZTogUmVhY3QuUHJvcFR5cGVzLm51bWJlcixcbiAgcGxheWluZzogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gIHNsaWRlU2hvdzogUmVhY3QuUHJvcFR5cGVzLm9iamVjdC5pc1JlcXVpcmVkLFxuICBzaWRlYmFyT3BlbjogUmVhY3QuUHJvcFR5cGVzLmJvb2xcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBNUEM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvTVBDLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEyMC5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar MPC = _interopRequire(__webpack_require__(120));\n\nvar key = _interopRequire(__webpack_require__(80));\n\nvar AppState = __webpack_require__(85).AppState;\n\nvar Actions = _interopRequire(__webpack_require__(27));\n\nvar MPCContainer = (function (_React$Component) {\n  function MPCContainer(props) {\n    _classCallCheck(this, MPCContainer);\n\n    _get(Object.getPrototypeOf(MPCContainer.prototype), "constructor", this).call(this, props);\n    var activePad = AppState.activePad;\n    var allPads = AppState.allPads;\n    var playing = AppState.playing;\n    var slideShow = AppState.slideShow;\n    var activeSlide = AppState.activeSlide;\n    var sidebarOpen = AppState.sidebarOpen;\n\n    this.state = { activePad: activePad, allPads: allPads, playing: playing, slideShow: slideShow, activeSlide: activeSlide, sidebarOpen: sidebarOpen };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  _inherits(MPCContainer, _React$Component);\n\n  _createClass(MPCContainer, {\n    transitionSlide: {\n      value: function transitionSlide(direction) {\n        Actions.transitionSlide(direction);\n      }\n    },\n    componentDidMount: {\n      value: function componentDidMount() {\n        key("up", this.transitionSlide.bind(this, "start"));\n        key("down", this.transitionSlide.bind(this, "end"));\n        key("right", this.transitionSlide.bind(this, "forward"));\n        key("left", this.transitionSlide.bind(this, "back"));\n        AppState.addChangeListener(this.onChange);\n        this.onChange();\n      }\n    },\n    componentWillUnmount: {\n      value: function componentWillUnmount() {\n        AppState.removeChangeListener(this.onChange);\n      }\n    },\n    onChange: {\n      value: function onChange() {\n        var activePad = AppState.activePad;\n        var allPads = AppState.allPads;\n        var playing = AppState.playing;\n        var slideShow = AppState.slideShow;\n        var activeSlide = AppState.activeSlide;\n        var sidebarOpen = AppState.sidebarOpen;\n\n        this.setState({ activePad: activePad, allPads: allPads, playing: playing, slideShow: slideShow, activeSlide: activeSlide, sidebarOpen: sidebarOpen });\n      }\n    },\n    render: {\n      value: function render() {\n        var _state = this.state;\n        var activePad = _state.activePad;\n        var allPads = _state.allPads;\n        var playing = _state.playing;\n        var slideShow = _state.slideShow;\n        var activeSlide = _state.activeSlide;\n        var sidebarOpen = _state.sidebarOpen;\n\n        return React.createElement(MPC, { sidebarOpen: sidebarOpen, slideShow: slideShow, allPads: allPads, playing: !!playing, activeSlide: activeSlide, activePad: activePad });\n      }\n    }\n  });\n\n  return MPCContainer;\n})(React.Component);\n\nmodule.exports = MPCContainer;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "MPCContainer.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL01QQ0NvbnRhaW5lci5qc3g/NWZiNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztJQUFPLEtBQUssdUNBQU0sQ0FBTzs7SUFDbEIsR0FBRyx1Q0FBTSxHQUFXOztJQUNwQixHQUFHLHVDQUFNLEVBQVc7O0lBQ2xCLFFBQVEsdUJBQVEsRUFBb0IsRUFBcEMsUUFBUTs7SUFDVixPQUFPLHVDQUFNLEVBQXFCOztJQUVuQyxZQUFZO0FBRUwsV0FGUCxZQUFZLENBRUosS0FBSyxFQUFDOzBCQUZkLFlBQVk7O0FBR2QsK0JBSEUsWUFBWSw2Q0FHUixLQUFLLEVBQUU7UUFDUCxTQUFTLEdBQTRELFFBQVEsQ0FBN0UsU0FBUztRQUFFLE9BQU8sR0FBbUQsUUFBUSxDQUFsRSxPQUFPO1FBQUUsT0FBTyxHQUEwQyxRQUFRLENBQXpELE9BQU87UUFBRSxTQUFTLEdBQStCLFFBQVEsQ0FBaEQsU0FBUztRQUFFLFdBQVcsR0FBa0IsUUFBUSxDQUFyQyxXQUFXO1FBQUUsV0FBVyxHQUFLLFFBQVEsQ0FBeEIsV0FBVzs7QUFDdEUsUUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLFNBQVMsRUFBVCxTQUFTLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxPQUFPLEVBQVAsT0FBTyxFQUFFLFNBQVMsRUFBVCxTQUFTLEVBQUUsV0FBVyxFQUFYLFdBQVcsRUFBRSxXQUFXLEVBQVgsV0FBVyxFQUFFLENBQUM7QUFDbEYsUUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUMxQzs7WUFQRyxZQUFZOztlQUFaLFlBQVk7QUFTaEIsbUJBQWU7YUFBQSx5QkFBQyxTQUFTLEVBQUM7QUFDeEIsZUFBTyxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztPQUNwQzs7QUFFRCxxQkFBaUI7YUFBQSw2QkFBRztBQUNsQixXQUFHLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ3BELFdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFDcEQsV0FBRyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztBQUN6RCxXQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3JELGdCQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzFDLFlBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztPQUNqQjs7QUFFRCx3QkFBb0I7YUFBQSxnQ0FBRztBQUNyQixnQkFBUSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztPQUM5Qzs7QUFFRCxZQUFRO2FBQUEsb0JBQUU7WUFDRixTQUFTLEdBQTRELFFBQVEsQ0FBN0UsU0FBUztZQUFFLE9BQU8sR0FBbUQsUUFBUSxDQUFsRSxPQUFPO1lBQUUsT0FBTyxHQUEwQyxRQUFRLENBQXpELE9BQU87WUFBRSxTQUFTLEdBQStCLFFBQVEsQ0FBaEQsU0FBUztZQUFFLFdBQVcsR0FBa0IsUUFBUSxDQUFyQyxXQUFXO1lBQUUsV0FBVyxHQUFLLFFBQVEsQ0FBeEIsV0FBVzs7QUFDdEUsWUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFNBQVMsRUFBVCxTQUFTLEVBQUUsT0FBTyxFQUFQLE9BQU8sRUFBRSxPQUFPLEVBQVAsT0FBTyxFQUFFLFNBQVMsRUFBVCxTQUFTLEVBQUUsV0FBVyxFQUFYLFdBQVcsRUFBRSxXQUFXLEVBQVgsV0FBVyxFQUFFLENBQUMsQ0FBQztPQUNyRjs7QUFFRCxVQUFNO2FBQUEsa0JBQUU7cUJBQ3FFLElBQUksQ0FBQyxLQUFLO1lBQS9FLFNBQVMsVUFBVCxTQUFTO1lBQUUsT0FBTyxVQUFQLE9BQU87WUFBRSxPQUFPLFVBQVAsT0FBTztZQUFFLFNBQVMsVUFBVCxTQUFTO1lBQUUsV0FBVyxVQUFYLFdBQVc7WUFBRSxXQUFXLFVBQVgsV0FBVzs7QUFDdEUsZUFDRSxvQkFBQyxHQUFHLElBQUMsV0FBVyxFQUFHLFdBQWEsRUFBQyxTQUFTLEVBQUcsU0FBVyxFQUFDLE9BQU8sRUFBRyxPQUFTLEVBQUMsT0FBTyxFQUFHLENBQUMsQ0FBQyxPQUFTLEVBQUMsV0FBVyxFQUFHLFdBQWEsRUFBQyxTQUFTLEVBQUcsU0FBVyxHQUFHLENBQzFKO09BQ0Y7Ozs7U0FwQ0csWUFBWTtHQUFTLEtBQUssQ0FBQyxTQUFTOztpQkF3QzNCLFlBQVksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTVBDIGZyb20gJy4vTVBDLmpzeCc7XG5pbXBvcnQga2V5IGZyb20gJ2tleW1hc3Rlcic7XG5pbXBvcnQgeyBBcHBTdGF0ZSB9IGZyb20gJy4uL3N0b3Jlcy9pbmRleC5qcyc7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL2luZGV4LmpzJztcblxuY2xhc3MgTVBDQ29udGFpbmVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcyl7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIGxldCB7IGFjdGl2ZVBhZCwgYWxsUGFkcywgcGxheWluZywgc2xpZGVTaG93LCBhY3RpdmVTbGlkZSwgc2lkZWJhck9wZW4gfSA9IEFwcFN0YXRlO1xuICAgIHRoaXMuc3RhdGUgPSB7IGFjdGl2ZVBhZCwgYWxsUGFkcywgcGxheWluZywgc2xpZGVTaG93LCBhY3RpdmVTbGlkZSwgc2lkZWJhck9wZW4gfTtcbiAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdHJhbnNpdGlvblNsaWRlKGRpcmVjdGlvbil7XG4gICAgQWN0aW9ucy50cmFuc2l0aW9uU2xpZGUoZGlyZWN0aW9uKTtcbiAgfVxuXG4gIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGtleSgndXAnLCB0aGlzLnRyYW5zaXRpb25TbGlkZS5iaW5kKHRoaXMsICdzdGFydCcpKTtcbiAgICBrZXkoJ2Rvd24nLCB0aGlzLnRyYW5zaXRpb25TbGlkZS5iaW5kKHRoaXMsICdlbmQnKSk7XG4gICAga2V5KCdyaWdodCcsIHRoaXMudHJhbnNpdGlvblNsaWRlLmJpbmQodGhpcywgJ2ZvcndhcmQnKSk7XG4gICAga2V5KCdsZWZ0JywgdGhpcy50cmFuc2l0aW9uU2xpZGUuYmluZCh0aGlzLCAnYmFjaycpKTtcbiAgICBBcHBTdGF0ZS5hZGRDaGFuZ2VMaXN0ZW5lcih0aGlzLm9uQ2hhbmdlKTtcbiAgICB0aGlzLm9uQ2hhbmdlKCk7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBBcHBTdGF0ZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcih0aGlzLm9uQ2hhbmdlKTtcbiAgfVxuXG4gIG9uQ2hhbmdlKCl7XG4gICAgbGV0IHsgYWN0aXZlUGFkLCBhbGxQYWRzLCBwbGF5aW5nLCBzbGlkZVNob3csIGFjdGl2ZVNsaWRlLCBzaWRlYmFyT3BlbiB9ID0gQXBwU3RhdGU7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGFjdGl2ZVBhZCwgYWxsUGFkcywgcGxheWluZywgc2xpZGVTaG93LCBhY3RpdmVTbGlkZSwgc2lkZWJhck9wZW4gfSk7XG4gIH1cblxuICByZW5kZXIoKXtcbiAgICBsZXQgeyBhY3RpdmVQYWQsIGFsbFBhZHMsIHBsYXlpbmcsIHNsaWRlU2hvdywgYWN0aXZlU2xpZGUsIHNpZGViYXJPcGVuIH0gPSB0aGlzLnN0YXRlO1xuICAgIHJldHVybiAoXG4gICAgICA8TVBDIHNpZGViYXJPcGVuPXsgc2lkZWJhck9wZW4gfSBzbGlkZVNob3c9eyBzbGlkZVNob3cgfSBhbGxQYWRzPXsgYWxsUGFkcyB9IHBsYXlpbmc9eyAhIXBsYXlpbmcgfSBhY3RpdmVTbGlkZT17IGFjdGl2ZVNsaWRlIH0gYWN0aXZlUGFkPXsgYWN0aXZlUGFkIH0gLz5cbiAgICApXG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBNUENDb250YWluZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvTVBDQ29udGFpbmVyLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEyMS5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(224);\n\nvar Timeline = _interopRequire(__webpack_require__(133));\n\nvar Slides = _interopRequire(__webpack_require__(132));\n\nvar Main = (function (_React$Component) {\n  function Main() {\n    _classCallCheck(this, Main);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Main, _React$Component);\n\n  _createClass(Main, {\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var activeSlide = _props.activeSlide;\n        var slides = _props.slides;\n        var playing = _props.playing;\n\n        return React.createElement(\n          "section",\n          { className: "main" },\n          React.createElement(Slides, { activeSlide: activeSlide, slides: slides })\n        );\n      }\n    }\n  });\n\n  return Main;\n})(React.Component);\n\nMain.propTypes = {\n  activeSlide: React.PropTypes.number,\n  slides: React.PropTypes.array.isRequired,\n  playing: React.PropTypes.bool\n};\n\nmodule.exports = Main;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Main.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL01haW4uanN4PzI0NjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQU8sS0FBSyx1Q0FBTSxDQUFPOztvQkFDbEIsR0FBdUI7O0lBQ3ZCLFFBQVEsdUNBQU0sR0FBZ0I7O0lBQzlCLE1BQU0sdUNBQU0sR0FBYzs7SUFFM0IsSUFBSTtXQUFKLElBQUk7MEJBQUosSUFBSTs7Ozs7OztZQUFKLElBQUk7O2VBQUosSUFBSTtBQUNSLFVBQU07YUFBQSxrQkFBRTtxQkFDaUMsSUFBSSxDQUFDLEtBQUs7WUFBM0MsV0FBVyxVQUFYLFdBQVc7WUFBRSxNQUFNLFVBQU4sTUFBTTtZQUFFLE9BQU8sVUFBUCxPQUFPOztBQUNsQyxlQUNFOztZQUFTLFNBQVMsRUFBQyxNQUFNO1VBQ3ZCLG9CQUFDLE1BQU0sSUFBQyxXQUFXLEVBQUcsV0FBYSxFQUFDLE1BQU0sRUFBRSxNQUFPLEdBQUU7U0FDN0MsQ0FDWDtPQUNGOzs7O1NBUkcsSUFBSTtHQUFTLEtBQUssQ0FBQyxTQUFTOztBQVdsQyxJQUFJLENBQUMsU0FBUyxHQUFHO0FBQ2YsYUFBVyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTTtBQUNuQyxRQUFNLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsVUFBVTtBQUN4QyxTQUFPLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0NBQzlCLENBQUM7O2lCQUdhLElBQUksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9tYWluLmNzcyc7XG5pbXBvcnQgVGltZWxpbmUgZnJvbSAnLi9UaW1lbGluZS5qc3gnO1xuaW1wb3J0IFNsaWRlcyBmcm9tICcuL1NsaWRlcy5qc3gnO1xuXG5jbGFzcyBNYWluIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCl7XG4gICAgbGV0IHsgYWN0aXZlU2xpZGUsIHNsaWRlcywgcGxheWluZyB9ID0gdGhpcy5wcm9wcztcbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPSdtYWluJz5cbiAgICAgICAgPFNsaWRlcyBhY3RpdmVTbGlkZT17IGFjdGl2ZVNsaWRlIH0gc2xpZGVzPXtzbGlkZXN9Lz5cbiAgICAgIDwvc2VjdGlvbj5cbiAgICApXG4gIH1cbn1cblxuTWFpbi5wcm9wVHlwZXMgPSB7XG4gIGFjdGl2ZVNsaWRlOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLFxuICBzbGlkZXM6IFJlYWN0LlByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBwbGF5aW5nOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBNYWluO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL01haW4uanN4XG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTIyLmpzIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(46);\n\nvar Profile = _interopRequire(__webpack_require__(82));\n\nvar MainTitleSlide = (function (_React$Component) {\n  function MainTitleSlide() {\n    _classCallCheck(this, MainTitleSlide);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(MainTitleSlide, _React$Component);\n\n  _createClass(MainTitleSlide, {\n    render: {\n      value: function render() {\n        var _props$slide = this.props.slide;\n        var title = _props$slide.title;\n        var presenter = _props$slide.presenter;\n        var event = _props$slide.event;\n        var organizer = event.organizer;\n        var date = event.date;\n\n        return React.createElement(\n          "section",\n          { className: "slide titleSlide" },\n          React.createElement("header", null),\n          React.createElement(\n            "section",\n            { className: "content" },\n            React.createElement(\n              "h1",\n              null,\n              title\n            ),\n            React.createElement(\n              "div",\n              { className: "meta" },\n              React.createElement(\n                "h1",\n                null,\n                organizer,\n                ", ",\n                date\n              )\n            )\n          ),\n          React.createElement(\n            "footer",\n            null,\n            React.createElement(Profile, { presenter: presenter })\n          )\n        );\n      }\n    }\n  });\n\n  return MainTitleSlide;\n})(React.Component);\n\nMainTitleSlide.propTypes = {\n  slide: React.PropTypes.object.isRequired\n};\n\nmodule.exports = MainTitleSlide;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "MainTitleSlide.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL01haW5UaXRsZVNsaWRlLmpzeD8wYWUzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztJQUFPLEtBQUssdUNBQU0sQ0FBTzs7b0JBQ2xCLEVBQXdCOztJQUN4QixPQUFPLHVDQUFNLEVBQWU7O0lBRTdCLGNBQWM7V0FBZCxjQUFjOzBCQUFkLGNBQWM7Ozs7Ozs7WUFBZCxjQUFjOztlQUFkLGNBQWM7QUFFbEIsVUFBTTthQUFBLGtCQUFFOzJCQUM0QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7WUFBNUMsS0FBSyxnQkFBTCxLQUFLO1lBQUUsU0FBUyxnQkFBVCxTQUFTO1lBQUUsS0FBSyxnQkFBTCxLQUFLO1lBQ3ZCLFNBQVMsR0FBVyxLQUFLLENBQXpCLFNBQVM7WUFBRSxJQUFJLEdBQUssS0FBSyxDQUFkLElBQUk7O0FBQ3JCLGVBQ0U7O1lBQVMsU0FBUyxFQUFDLGtCQUFrQjtVQUNuQyxtQ0FBaUI7VUFDakI7O2NBQVMsU0FBUyxFQUFDLFNBQVM7WUFDMUI7OztjQUFNLEtBQUs7YUFBTztZQUNsQjs7Z0JBQUssU0FBUyxFQUFDLE1BQU07Y0FBQzs7O2dCQUFNLFNBQVM7O2dCQUFNLElBQUk7ZUFBTzthQUFNO1dBQ3BEO1VBQ1Y7OztZQUNFLG9CQUFDLE9BQU8sSUFBQyxTQUFTLEVBQUcsU0FBVyxHQUFFO1dBQzNCO1NBQ0QsQ0FDWDtPQUNGOzs7O1NBakJHLGNBQWM7R0FBUyxLQUFLLENBQUMsU0FBUzs7QUFtQjVDLGNBQWMsQ0FBQyxTQUFTLEdBQUc7QUFDekIsT0FBSyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFVBQVU7Q0FDekM7O2lCQUdjLGNBQWMsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9zbGlkZS5jc3MnO1xuaW1wb3J0IFByb2ZpbGUgZnJvbSAnLi9Qcm9maWxlLmpzeCc7XG5cbmNsYXNzIE1haW5UaXRsZVNsaWRlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICByZW5kZXIoKXtcbiAgICBsZXQgeyB0aXRsZSwgcHJlc2VudGVyLCBldmVudCB9ID0gdGhpcy5wcm9wcy5zbGlkZTtcbiAgICBsZXQgeyBvcmdhbml6ZXIsIGRhdGUgfSA9IGV2ZW50O1xuICAgIHJldHVybiAoXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9J3NsaWRlIHRpdGxlU2xpZGUnPlxuICAgICAgICA8aGVhZGVyPjwvaGVhZGVyPlxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJjb250ZW50XCI+XG4gICAgICAgICAgPGgxPnsgdGl0bGUgfTwvaDE+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtZXRhXCI+PGgxPnsgb3JnYW5pemVyIH0sIHsgZGF0ZSB9PC9oMT48L2Rpdj5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICA8Zm9vdGVyPlxuICAgICAgICAgIDxQcm9maWxlIHByZXNlbnRlcj17IHByZXNlbnRlciB9Lz5cbiAgICAgICAgPC9mb290ZXI+XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKVxuICB9XG59XG5NYWluVGl0bGVTbGlkZS5wcm9wVHlwZXMgPSB7XG4gIHNsaWRlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBNYWluVGl0bGVTbGlkZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9NYWluVGl0bGVTbGlkZS5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMjMuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Actions = _interopRequire(__webpack_require__(27));\n\n__webpack_require__(225);\n\nvar Pad = (function (_React$Component) {\n  function Pad(props) {\n    _classCallCheck(this, Pad);\n\n    _get(Object.getPrototypeOf(Pad.prototype), "constructor", this).call(this, props);\n  }\n\n  _inherits(Pad, _React$Component);\n\n  _createClass(Pad, {\n    handleClick: {\n      value: function handleClick() {\n        Actions.padPushed(this.props.id);\n      }\n    },\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var isActive = _props.isActive;\n        var id = _props.id;\n\n        var classes = undefined;\n        if (isActive) {\n          classes = ["pad", "active"].join(" ");\n        } else {\n          classes = ["pad"].join(" ");\n        }\n        return React.createElement(\n          "button",\n          { className: classes, onClick: this.handleClick.bind(this) },\n          id\n        );\n      }\n    }\n  });\n\n  return Pad;\n})(React.Component);\n\nPad.propTypes = {\n  id: React.PropTypes.number.isRequired,\n  isActive: React.PropTypes.bool\n};\n\nmodule.exports = Pad;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Pad.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BhZC5qc3g/MjdlYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztJQUFPLEtBQUssdUNBQU0sQ0FBTzs7SUFDbEIsT0FBTyx1Q0FBTSxFQUFxQjs7b0JBQ2xDLEdBQXNCOztJQUV2QixHQUFHO0FBQ0ksV0FEUCxHQUFHLENBQ0ssS0FBSyxFQUFDOzBCQURkLEdBQUc7O0FBRUwsK0JBRkUsR0FBRyw2Q0FFQyxLQUFLLEVBQUU7R0FDZDs7WUFIRyxHQUFHOztlQUFILEdBQUc7QUFJUCxlQUFXO2FBQUEsdUJBQUU7QUFDWCxlQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7T0FDbEM7O0FBQ0QsVUFBTTthQUFBLGtCQUFFO3FCQUNpQixJQUFJLENBQUMsS0FBSztZQUEzQixRQUFRLFVBQVIsUUFBUTtZQUFFLEVBQUUsVUFBRixFQUFFOztBQUNsQixZQUFJLE9BQU8sYUFBQztBQUNaLFlBQUcsUUFBUSxFQUFDO0FBQ1YsaUJBQU8sR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDdkMsTUFBTTtBQUNMLGlCQUFPLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDN0I7QUFDRCxlQUNFOztZQUFRLFNBQVMsRUFBRyxPQUFTLEVBQUMsT0FBTyxFQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBRztVQUNqRSxFQUFFO1NBQ0csQ0FDVjtPQUNGOzs7O1NBcEJHLEdBQUc7R0FBUyxLQUFLLENBQUMsU0FBUzs7QUF1QmpDLEdBQUcsQ0FBQyxTQUFTLEdBQUc7QUFDZCxJQUFFLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsVUFBVTtBQUNyQyxVQUFRLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0NBQy9COztpQkFFYyxHQUFHLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucy9pbmRleC5qcyc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9wYWQuY3NzJztcblxuY2xhc3MgUGFkIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpe1xuICAgIHN1cGVyKHByb3BzKTtcbiAgfVxuICBoYW5kbGVDbGljaygpe1xuICAgIEFjdGlvbnMucGFkUHVzaGVkKHRoaXMucHJvcHMuaWQpO1xuICB9XG4gIHJlbmRlcigpe1xuICAgIGxldCB7IGlzQWN0aXZlLCBpZCB9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgY2xhc3NlcztcbiAgICBpZihpc0FjdGl2ZSl7XG4gICAgICBjbGFzc2VzID0gWydwYWQnLCAnYWN0aXZlJ10uam9pbignICcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGFzc2VzID0gWydwYWQnXS5qb2luKCcgJyk7XG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT17IGNsYXNzZXMgfSBvbkNsaWNrPXsgdGhpcy5oYW5kbGVDbGljay5iaW5kKHRoaXMpIH0+XG4gICAgICAgIHsgaWQgfVxuICAgICAgPC9idXR0b24+XG4gICAgKVxuICB9XG59XG5cblBhZC5wcm9wVHlwZXMgPSB7XG4gIGlkOiBSZWFjdC5Qcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gIGlzQWN0aXZlOiBSZWFjdC5Qcm9wVHlwZXMuYm9vbFxufVxuXG5leHBvcnQgZGVmYXVsdCBQYWQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvUGFkLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEyNC5qcyJ9');

},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar R = _interopRequire(__webpack_require__(21));\n\nvar Pad = _interopRequire(__webpack_require__(124));\n\nvar Actions = _interopRequire(__webpack_require__(27));\n\n__webpack_require__(226);\n\nvar Pads = (function (_React$Component) {\n  function Pads() {\n    _classCallCheck(this, Pads);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Pads, _React$Component);\n\n  _createClass(Pads, {\n    handleClick: {\n      value: function handleClick() {\n        Actions.toggleAutoPlay();\n      }\n    },\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var activeSlide = _props.activeSlide;\n        var playing = _props.playing;\n        var slides = _props.slides;\n\n        var createPads = R.mapIndexed(function (_ref) {\n          var index = _ref.index;\n          var layout = _ref.layout;\n          var content = _ref.content;\n\n          var isActive = index === activeSlide;\n          return React.createElement(Pad, { isActive: isActive, key: index, type: layout, id: index, content: content });\n        });\n        var pads = createPads(slides);\n        return React.createElement(\n          "section",\n          { className: "pads" },\n          pads\n        );\n      }\n    }\n  });\n\n  return Pads;\n})(React.Component);\n\nPads.propTypes = {\n  activeSlide: React.PropTypes.number,\n  playing: React.PropTypes.bool,\n  slides: React.PropTypes.array.isRequired\n};\n\nmodule.exports = Pads;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Pads.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1BhZHMuanN4PzlmNjEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQU8sS0FBSyx1Q0FBTSxDQUFPOztJQUNsQixDQUFDLHVDQUFNLEVBQU87O0lBQ2QsR0FBRyx1Q0FBTSxHQUFXOztJQUNwQixPQUFPLHVDQUFNLEVBQXFCOztvQkFDbEMsR0FBdUI7O0lBRXhCLElBQUk7V0FBSixJQUFJOzBCQUFKLElBQUk7Ozs7Ozs7WUFBSixJQUFJOztlQUFKLElBQUk7QUFFUixlQUFXO2FBQUEsdUJBQUU7QUFDWCxlQUFPLENBQUMsY0FBYyxFQUFFLENBQUM7T0FDMUI7O0FBRUQsVUFBTTthQUFBLGtCQUFFO3FCQUNpQyxJQUFJLENBQUMsS0FBSztZQUEzQyxXQUFXLFVBQVgsV0FBVztZQUFFLE9BQU8sVUFBUCxPQUFPO1lBQUUsTUFBTSxVQUFOLE1BQU07O0FBQ2xDLFlBQUksVUFBVSxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsZ0JBQStCO2NBQTVCLEtBQUssUUFBTCxLQUFLO2NBQUUsTUFBTSxRQUFOLE1BQU07Y0FBRSxPQUFPLFFBQVAsT0FBTzs7QUFDckQsY0FBSSxRQUFRLEdBQUcsS0FBSyxLQUFLLFdBQVcsQ0FBQztBQUNyQyxpQkFBTyxvQkFBQyxHQUFHLElBQUMsUUFBUSxFQUFHLFFBQVUsRUFBQyxHQUFHLEVBQUcsS0FBTyxFQUFDLElBQUksRUFBRyxNQUFRLEVBQUMsRUFBRSxFQUFHLEtBQU8sRUFBQyxPQUFPLEVBQUcsT0FBUyxHQUFFO1NBQ25HLENBQUM7QUFDRixZQUFJLElBQUksR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDOUIsZUFDRTs7WUFBUyxTQUFTLEVBQUMsTUFBTTtVQUNyQixJQUFJO1NBQ0UsQ0FDWDtPQUNGOzs7O1NBbEJHLElBQUk7R0FBUyxLQUFLLENBQUMsU0FBUzs7QUFxQmxDLElBQUksQ0FBQyxTQUFTLEdBQUc7QUFDZixhQUFXLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNO0FBQ25DLFNBQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUk7QUFDN0IsUUFBTSxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLFVBQVU7Q0FDekM7O2lCQUVjLElBQUksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUiBmcm9tICdyYW1kYSc7XG5pbXBvcnQgUGFkIGZyb20gJy4vUGFkLmpzeCc7XG5pbXBvcnQgQWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zL2luZGV4LmpzJztcbmltcG9ydCAnLi4vLi4vc3R5bGVzL3BhZHMuY3NzJztcblxuY2xhc3MgUGFkcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG5cbiAgaGFuZGxlQ2xpY2soKXtcbiAgICBBY3Rpb25zLnRvZ2dsZUF1dG9QbGF5KCk7XG4gIH1cblxuICByZW5kZXIoKXtcbiAgICBsZXQgeyBhY3RpdmVTbGlkZSwgcGxheWluZywgc2xpZGVzIH0gPSB0aGlzLnByb3BzO1xuICAgIGxldCBjcmVhdGVQYWRzID0gUi5tYXBJbmRleGVkKCh7IGluZGV4LCBsYXlvdXQsIGNvbnRlbnR9KSA9PiB7XG4gICAgICBsZXQgaXNBY3RpdmUgPSBpbmRleCA9PT0gYWN0aXZlU2xpZGU7XG4gICAgICByZXR1cm4gPFBhZCBpc0FjdGl2ZT17IGlzQWN0aXZlIH0ga2V5PXsgaW5kZXggfSB0eXBlPXsgbGF5b3V0IH0gaWQ9eyBpbmRleCB9IGNvbnRlbnQ9eyBjb250ZW50IH0vPlxuICAgIH0pXG4gICAgbGV0IHBhZHMgPSBjcmVhdGVQYWRzKHNsaWRlcyk7IFxuICAgIHJldHVybiAoXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJwYWRzXCI+XG4gICAgICAgIHsgcGFkcyB9XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKVxuICB9XG59XG5cblBhZHMucHJvcFR5cGVzID0ge1xuICBhY3RpdmVTbGlkZTogUmVhY3QuUHJvcFR5cGVzLm51bWJlcixcbiAgcGxheWluZzogUmVhY3QuUHJvcFR5cGVzLmJvb2wsXG4gIHNsaWRlczogUmVhY3QuUHJvcFR5cGVzLmFycmF5LmlzUmVxdWlyZWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFkcztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9QYWRzLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEyNS5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(46);\n\nvar SectionTitleSlide = (function (_React$Component) {\n  function SectionTitleSlide() {\n    _classCallCheck(this, SectionTitleSlide);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(SectionTitleSlide, _React$Component);\n\n  _createClass(SectionTitleSlide, {\n    render: {\n      value: function render() {\n        var _props$slide = this.props.slide;\n        var title = _props$slide.title;\n        var sectionIndex = _props$slide.sectionIndex;\n\n        var classes = "titleSlide slide section" + sectionIndex;\n        return React.createElement(\n          "section",\n          { className: classes },\n          React.createElement(\n            "section",\n            { className: "content" },\n            React.createElement(\n              "h1",\n              null,\n              title\n            )\n          )\n        );\n      }\n    }\n  });\n\n  return SectionTitleSlide;\n})(React.Component);\n\nSectionTitleSlide.propTypes = {\n  slide: React.PropTypes.object.isRequired\n};\n\nmodule.exports = SectionTitleSlide;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "SectionTitleSlide.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NlY3Rpb25UaXRsZVNsaWRlLmpzeD8xYTcyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztJQUFPLEtBQUssdUNBQU0sQ0FBTzs7b0JBQ2xCLEVBQXdCOztJQUV6QixpQkFBaUI7V0FBakIsaUJBQWlCOzBCQUFqQixpQkFBaUI7Ozs7Ozs7WUFBakIsaUJBQWlCOztlQUFqQixpQkFBaUI7QUFDckIsVUFBTTthQUFBLGtCQUFFOzJCQUN3QixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7WUFBeEMsS0FBSyxnQkFBTCxLQUFLO1lBQUUsWUFBWSxnQkFBWixZQUFZOztBQUN6QixZQUFJLE9BQU8sZ0NBQStCLFlBQWUsQ0FBQztBQUMxRCxlQUNFOztZQUFTLFNBQVMsRUFBRyxPQUFTO1VBQzVCOztjQUFTLFNBQVMsRUFBQyxTQUFTO1lBQzFCOzs7Y0FBTSxLQUFLO2FBQU87V0FDVjtTQUNGLENBQ1g7T0FDRjs7OztTQVhHLGlCQUFpQjtHQUFTLEtBQUssQ0FBQyxTQUFTOztBQWEvQyxpQkFBaUIsQ0FBQyxTQUFTLEdBQUc7QUFDNUIsT0FBSyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFVBQVU7Q0FDekM7O2lCQUdjLGlCQUFpQixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi4vLi4vc3R5bGVzL3NsaWRlLmNzcyc7XG5cbmNsYXNzIFNlY3Rpb25UaXRsZVNsaWRlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCl7XG4gICAgbGV0IHsgdGl0bGUsIHNlY3Rpb25JbmRleCB9ID0gdGhpcy5wcm9wcy5zbGlkZTtcbiAgICBsZXQgY2xhc3NlcyA9IGB0aXRsZVNsaWRlIHNsaWRlIHNlY3Rpb24keyBzZWN0aW9uSW5kZXggfWA7XG4gICAgcmV0dXJuIChcbiAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17IGNsYXNzZXMgfT5cbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiY29udGVudFwiPlxuICAgICAgICAgIDxoMT57IHRpdGxlIH08L2gxPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKVxuICB9XG59XG5TZWN0aW9uVGl0bGVTbGlkZS5wcm9wVHlwZXMgPSB7XG4gIHNsaWRlOiBSZWFjdC5Qcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWRcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTZWN0aW9uVGl0bGVTbGlkZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9TZWN0aW9uVGl0bGVTbGlkZS5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMjYuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(227);\n\nvar ControlPanel = _interopRequire(__webpack_require__(116));\n\nvar Collapser = _interopRequire(__webpack_require__(115));\n\nvar Sidebar = (function (_React$Component) {\n  function Sidebar() {\n    _classCallCheck(this, Sidebar);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Sidebar, _React$Component);\n\n  _createClass(Sidebar, {\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var isOpen = _props.isOpen;\n        var side = _props.side;\n\n        var classes = "sidebar " + (side === "right" || !isOpen ? "closed" : "open");\n\n        return React.createElement(\n          "section",\n          { className: classes },\n          side === "left" && React.createElement(ControlPanel, { isOpen: isOpen }),\n          React.createElement(Collapser, { isOpen: isOpen })\n        );\n      }\n    }\n  });\n\n  return Sidebar;\n})(React.Component);\n\nSidebar.propTypes = {\n  isOpen: React.PropTypes.bool,\n  side: React.PropTypes.string\n};\n\nmodule.exports = Sidebar;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Sidebar.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NpZGViYXIuanN4PzljYjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQU8sS0FBSyx1Q0FBTSxDQUFPOztvQkFDbEIsR0FBMEI7O0lBQzFCLFlBQVksdUNBQU0sR0FBb0I7O0lBQ3RDLFNBQVMsdUNBQU0sR0FBaUI7O0lBRWpDLE9BQU87V0FBUCxPQUFPOzBCQUFQLE9BQU87Ozs7Ozs7WUFBUCxPQUFPOztlQUFQLE9BQU87QUFFWCxVQUFNO2FBQUEsa0JBQUU7cUJBQ2lCLElBQUksQ0FBQyxLQUFLO1lBQTNCLE1BQU0sVUFBTixNQUFNO1lBQUUsSUFBSSxVQUFKLElBQUk7O0FBQ2xCLFlBQUksT0FBTyxpQkFBZSxJQUFJLEtBQUssT0FBTyxJQUFJLENBQUMsTUFBTSxHQUFHLFFBQVEsR0FBRyxNQUFNLENBQUcsQ0FBQzs7QUFFN0UsZUFDRTs7WUFBUyxTQUFTLEVBQUcsT0FBUztVQUMxQixJQUFJLEtBQUssTUFBTSxJQUFJLG9CQUFDLFlBQVksSUFBQyxNQUFNLEVBQUcsTUFBUSxHQUFFO1VBQ3RELG9CQUFDLFNBQVMsSUFBQyxNQUFNLEVBQUcsTUFBUSxHQUFFO1NBQ3RCLENBQ1g7T0FDRjs7OztTQVpHLE9BQU87R0FBUyxLQUFLLENBQUMsU0FBUzs7QUFlckMsT0FBTyxDQUFDLFNBQVMsR0FBRztBQUNsQixRQUFNLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJO0FBQzVCLE1BQUksRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU07Q0FDN0I7O2lCQUVjLE9BQU8sQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9zaWRlYmFyLmNzcyc7XG5pbXBvcnQgQ29udHJvbFBhbmVsIGZyb20gJy4vQ29udHJvbFBhbmVsLmpzeCc7XG5pbXBvcnQgQ29sbGFwc2VyIGZyb20gJy4vQ29sbGFwc2VyLmpzeCc7XG5cbmNsYXNzIFNpZGViYXIgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuXG4gIHJlbmRlcigpe1xuICAgIGxldCB7IGlzT3Blbiwgc2lkZSB9ID0gdGhpcy5wcm9wcztcbiAgICBsZXQgY2xhc3NlcyA9IGBzaWRlYmFyICR7IHNpZGUgPT09ICdyaWdodCcgfHwgIWlzT3BlbiA/ICdjbG9zZWQnIDogJ29wZW4nIH1gO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT17IGNsYXNzZXMgfT5cbiAgICAgICAgeyBzaWRlID09PSAnbGVmdCcgJiYgPENvbnRyb2xQYW5lbCBpc09wZW49eyBpc09wZW4gfS8+IH1cbiAgICAgICAgPENvbGxhcHNlciBpc09wZW49eyBpc09wZW4gfS8+XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKVxuICB9XG59XG5cblNpZGViYXIucHJvcFR5cGVzID0ge1xuICBpc09wZW46IFJlYWN0LlByb3BUeXBlcy5ib29sLFxuICBzaWRlOiBSZWFjdC5Qcm9wVHlwZXMuc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNpZGViYXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvU2lkZWJhci5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMjcuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(46);\n\nvar SlideLabel = _interopRequire(__webpack_require__(130));\n\nvar SlideContent = _interopRequire(__webpack_require__(129));\n\nvar SlideProgram = _interopRequire(__webpack_require__(131));\n\nvar Slide = (function (_React$Component) {\n  function Slide() {\n    _classCallCheck(this, Slide);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Slide, _React$Component);\n\n  _createClass(Slide, {\n    render: {\n      value: function render() {\n        var _props$slide = this.props.slide;\n        var type = _props$slide.type;\n        var content = _props$slide.content;\n        var sectionTitle = _props$slide.sectionTitle;\n        var title = _props$slide.title;\n\n        return React.createElement(\n          "section",\n          { className: "slide" },\n          React.createElement(\n            "header",\n            null,\n            type === "normal" && React.createElement(SlideLabel, { title: title || sectionTitle }),\n            type === "program" && React.createElement(SlideLabel, { title: "Program" })\n          ),\n          type === "normal" && React.createElement(SlideContent, { content: content }),\n          type === "program" && React.createElement(SlideProgram, { content: content })\n        );\n      }\n    }\n  });\n\n  return Slide;\n})(React.Component);\n\nSlide.propTypes = {\n  title: React.PropTypes.string,\n  content: React.PropTypes.string };\n\nmodule.exports = Slide;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Slide.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlLmpzeD8yOGNiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztJQUFPLEtBQUssdUNBQU0sQ0FBTzs7b0JBQ2xCLEVBQXdCOztJQUN4QixVQUFVLHVDQUFNLEdBQWtCOztJQUNsQyxZQUFZLHVDQUFNLEdBQW9COztJQUN0QyxZQUFZLHVDQUFNLEdBQW9COztJQUV2QyxLQUFLO1dBQUwsS0FBSzswQkFBTCxLQUFLOzs7Ozs7O1lBQUwsS0FBSzs7ZUFBTCxLQUFLO0FBQ1QsVUFBTTthQUFBLGtCQUFFOzJCQUN1QyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7WUFBdkQsSUFBSSxnQkFBSixJQUFJO1lBQUUsT0FBTyxnQkFBUCxPQUFPO1lBQUUsWUFBWSxnQkFBWixZQUFZO1lBQUUsS0FBSyxnQkFBTCxLQUFLOztBQUN4QyxlQUNFOztZQUFTLFNBQVMsRUFBQyxPQUFPO1VBQ3hCOzs7WUFDSSxJQUFJLEtBQUssUUFBUSxJQUFJLG9CQUFDLFVBQVUsSUFBQyxLQUFLLEVBQUcsS0FBSyxJQUFJLFlBQWMsR0FBRTtZQUNsRSxJQUFJLEtBQUssU0FBUyxJQUFJLG9CQUFDLFVBQVUsSUFBQyxLQUFLLEVBQUcsU0FBVyxHQUFFO1dBQ2xEO1VBQ1AsSUFBSSxLQUFLLFFBQVEsSUFBSSxvQkFBQyxZQUFZLElBQUMsT0FBTyxFQUFHLE9BQVMsR0FBRTtVQUN4RCxJQUFJLEtBQUssU0FBUyxJQUFJLG9CQUFDLFlBQVksSUFBQyxPQUFPLEVBQUcsT0FBUyxHQUFFO1NBQ25ELENBQ1g7T0FDRjs7OztTQWJHLEtBQUs7R0FBUyxLQUFLLENBQUMsU0FBUzs7QUFlbkMsS0FBSyxDQUFDLFNBQVMsR0FBRztBQUNoQixPQUFLLEVBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxNQUFNO0FBQzdCLFNBQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFDaEM7O2lCQUdjLEtBQUssQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9zbGlkZS5jc3MnO1xuaW1wb3J0IFNsaWRlTGFiZWwgZnJvbSAnLi9TbGlkZUxhYmVsLmpzeCc7XG5pbXBvcnQgU2xpZGVDb250ZW50IGZyb20gJy4vU2xpZGVDb250ZW50LmpzeCc7XG5pbXBvcnQgU2xpZGVQcm9ncmFtIGZyb20gJy4vU2xpZGVQcm9ncmFtLmpzeCc7XG5cbmNsYXNzIFNsaWRlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCl7XG4gICAgbGV0IHsgdHlwZSwgY29udGVudCwgc2VjdGlvblRpdGxlLCB0aXRsZSB9ID0gdGhpcy5wcm9wcy5zbGlkZTtcbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPSdzbGlkZSc+XG4gICAgICAgIDxoZWFkZXI+XG4gICAgICAgICAgeyB0eXBlID09PSAnbm9ybWFsJyAmJiA8U2xpZGVMYWJlbCB0aXRsZT17IHRpdGxlIHx8IHNlY3Rpb25UaXRsZSB9Lz4gfVxuICAgICAgICAgIHsgdHlwZSA9PT0gJ3Byb2dyYW0nICYmIDxTbGlkZUxhYmVsIHRpdGxlPXsgJ1Byb2dyYW0nIH0vPiB9XG4gICAgICAgIDwvaGVhZGVyPlxuICAgICAgICB7IHR5cGUgPT09ICdub3JtYWwnICYmIDxTbGlkZUNvbnRlbnQgY29udGVudD17IGNvbnRlbnQgfS8+IH1cbiAgICAgICAgeyB0eXBlID09PSAncHJvZ3JhbScgJiYgPFNsaWRlUHJvZ3JhbSBjb250ZW50PXsgY29udGVudCB9Lz4gfVxuICAgICAgPC9zZWN0aW9uPlxuICAgIClcbiAgfVxufVxuU2xpZGUucHJvcFR5cGVzID0ge1xuICB0aXRsZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbiAgY29udGVudDogUmVhY3QuUHJvcFR5cGVzLnN0cmluZyxcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBTbGlkZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9TbGlkZS5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMjguanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar marked = _interopRequire(__webpack_require__(113));\n\n__webpack_require__(110);\n\nvar renderer = new marked.Renderer();\n\nrenderer.listitem = function (text) {\n  var output = undefined;\n  if (/<\\/a>/.test(text)) {\n    output = "<li class=\\"has-link\\"><p>" + text + "</p></li>";\n  } else {\n    output = "<li><p>" + text + "</p></li>";\n  }\n  return output;\n};\n\nvar SlideContent = (function (_React$Component) {\n  function SlideContent() {\n    _classCallCheck(this, SlideContent);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(SlideContent, _React$Component);\n\n  _createClass(SlideContent, {\n    render: {\n      value: function render() {\n        var content = this.props.content;\n\n        var renderedContent = { __html: marked(content, { renderer: renderer }) };\n        return React.createElement("section", { className: "slideContent",\n          dangerouslySetInnerHTML: renderedContent });\n      }\n    }\n  });\n\n  return SlideContent;\n})(React.Component);\n\nSlideContent.propTypes = {\n  content: React.PropTypes.string.isRequired\n};\n\nmodule.exports = SlideContent;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "SlideContent.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlQ29udGVudC5qc3g/NTY0MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLE1BQU0sdUNBQU0sR0FBUTs7b0JBQ3BCLEdBQStCOztBQUV0QyxJQUFJLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLEVBQUUsQ0FBQzs7QUFFckMsUUFBUSxDQUFDLFFBQVEsR0FBRyxVQUFDLElBQUksRUFBSztBQUM1QixNQUFJLE1BQU0sYUFBQztBQUNYLE1BQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQztBQUNwQixVQUFNLGtDQUErQixJQUFJLGNBQVksQ0FBQztHQUN2RCxNQUFNO0FBQ0wsVUFBTSxlQUFjLElBQUksY0FBWSxDQUFDO0dBQ3RDO0FBQ0QsU0FBTyxNQUFNLENBQUM7Q0FDZjs7SUFFSyxZQUFZO1dBQVosWUFBWTswQkFBWixZQUFZOzs7Ozs7O1lBQVosWUFBWTs7ZUFBWixZQUFZO0FBQ2hCLFVBQU07YUFBQSxrQkFBRTtZQUNBLE9BQU8sR0FBSyxJQUFJLENBQUMsS0FBSyxDQUF0QixPQUFPOztBQUNiLFlBQUksZUFBZSxHQUFHLEVBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxPQUFPLEVBQUUsRUFBRSxRQUFRLEVBQVIsUUFBUSxFQUFFLENBQUMsRUFBQyxDQUFDO0FBQzlELGVBQ0UsaUNBQVMsU0FBUyxFQUFDLGNBQWM7QUFDeEIsaUNBQXVCLEVBQUcsZUFBaUIsR0FDMUMsQ0FDWDtPQUNGOzs7O1NBVEcsWUFBWTtHQUFTLEtBQUssQ0FBQyxTQUFTOztBQVcxQyxZQUFZLENBQUMsU0FBUyxHQUFHO0FBQ3ZCLFNBQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVO0NBQzNDOztpQkFHYyxZQUFZLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IG1hcmtlZCBmcm9tICdtYXJrZWQnO1xuaW1wb3J0ICcuLi8uLi9zdHlsZXMvc2xpZGVDb250ZW50LmNzcyc7XG5cbmxldCByZW5kZXJlciA9IG5ldyBtYXJrZWQuUmVuZGVyZXIoKTtcblxucmVuZGVyZXIubGlzdGl0ZW0gPSAodGV4dCkgPT4ge1xuICBsZXQgb3V0cHV0O1xuICBpZigvPFxcL2E+Ly50ZXN0KHRleHQpKXtcbiAgICBvdXRwdXQgPSBgPGxpIGNsYXNzPVwiaGFzLWxpbmtcIj48cD4keyB0ZXh0IH08L3A+PC9saT5gO1xuICB9IGVsc2Uge1xuICAgIG91dHB1dCA9IGA8bGk+PHA+JHsgdGV4dCB9PC9wPjwvbGk+YDtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufVxuXG5jbGFzcyBTbGlkZUNvbnRlbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICByZW5kZXIoKXtcbiAgICBsZXQgeyBjb250ZW50IH0gPSB0aGlzLnByb3BzO1xuICAgIGxldCByZW5kZXJlZENvbnRlbnQgPSB7X19odG1sOiBtYXJrZWQoY29udGVudCwgeyByZW5kZXJlciB9KX07XG4gICAgcmV0dXJuIChcbiAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInNsaWRlQ29udGVudFwiXG4gICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17IHJlbmRlcmVkQ29udGVudCB9PlxuICAgICAgPC9zZWN0aW9uPlxuICAgIClcbiAgfVxufVxuU2xpZGVDb250ZW50LnByb3BUeXBlcyA9IHtcbiAgY29udGVudDogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG59XG5cblxuZXhwb3J0IGRlZmF1bHQgU2xpZGVDb250ZW50O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlQ29udGVudC5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMjkuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar SlideLabel = (function (_React$Component) {\n  function SlideLabel() {\n    _classCallCheck(this, SlideLabel);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(SlideLabel, _React$Component);\n\n  _createClass(SlideLabel, {\n    render: {\n      value: function render() {\n        var title = this.props.title;\n\n        return React.createElement(\n          "hgroup",\n          { className: "label" },\n          React.createElement(\n            "h1",\n            null,\n            title\n          )\n        );\n      }\n    }\n  });\n\n  return SlideLabel;\n})(React.Component);\n\nSlideLabel.propTypes = {\n  title: React.PropTypes.string.isRequired\n};\n\nmodule.exports = SlideLabel;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "SlideLabel.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlTGFiZWwuanN4PzA2ZTIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0lBQU8sS0FBSyx1Q0FBTSxDQUFPOztJQUVuQixVQUFVO1dBQVYsVUFBVTswQkFBVixVQUFVOzs7Ozs7O1lBQVYsVUFBVTs7ZUFBVixVQUFVO0FBQ2QsVUFBTTthQUFBLGtCQUFFO1lBQ0EsS0FBSyxHQUFLLElBQUksQ0FBQyxLQUFLLENBQXBCLEtBQUs7O0FBQ1gsZUFDRTs7WUFBUSxTQUFTLEVBQUMsT0FBTztVQUN2Qjs7O1lBQU0sS0FBSztXQUFPO1NBQ1gsQ0FDVjtPQUNGOzs7O1NBUkcsVUFBVTtHQUFTLEtBQUssQ0FBQyxTQUFTOztBQVV4QyxVQUFVLENBQUMsU0FBUyxHQUFHO0FBQ3JCLE9BQUssRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVO0NBQ3pDOztpQkFHYyxVQUFVLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5jbGFzcyBTbGlkZUxhYmVsIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgcmVuZGVyKCl7XG4gICAgbGV0IHsgdGl0bGUgfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxoZ3JvdXAgY2xhc3NOYW1lPVwibGFiZWxcIj5cbiAgICAgICAgPGgxPnsgdGl0bGUgfTwvaDE+XG4gICAgICA8L2hncm91cD5cbiAgICApXG4gIH1cbn1cblNsaWRlTGFiZWwucHJvcFR5cGVzID0ge1xuICB0aXRsZTogUmVhY3QuUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkXG59XG5cblxuZXhwb3J0IGRlZmF1bHQgU2xpZGVMYWJlbDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvY29tcG9uZW50cy9TbGlkZUxhYmVsLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEzMC5qcyJ9');

},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\n__webpack_require__(110);\n\nvar R = _interopRequire(__webpack_require__(21));\n\nvar SlideProgram = (function (_React$Component) {\n  function SlideProgram() {\n    _classCallCheck(this, SlideProgram);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(SlideProgram, _React$Component);\n\n  _createClass(SlideProgram, {\n    render: {\n      value: function render() {\n        var content = this.props.content;\n\n        var createProgramList = R.mapIndexed(function (item, index) {\n          return React.createElement(\n            "li",\n            { key: index },\n            React.createElement(\n              "p",\n              null,\n              item\n            )\n          );\n        });\n        var program = createProgramList(content);\n\n        return React.createElement(\n          "section",\n          { className: "slideContent program" },\n          React.createElement(\n            "ul",\n            null,\n            program\n          )\n        );\n      }\n    }\n  });\n\n  return SlideProgram;\n})(React.Component);\n\nSlideProgram.propTypes = {\n  content: React.PropTypes.array.isRequired\n};\n\nmodule.exports = SlideProgram;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "SlideProgram.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlUHJvZ3JhbS5qc3g/ZjI1YyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O29CQUNsQixHQUErQjs7SUFDL0IsQ0FBQyx1Q0FBTSxFQUFPOztJQUVmLFlBQVk7V0FBWixZQUFZOzBCQUFaLFlBQVk7Ozs7Ozs7WUFBWixZQUFZOztlQUFaLFlBQVk7QUFFaEIsVUFBTTthQUFBLGtCQUFFO1lBQ0EsT0FBTyxHQUFLLElBQUksQ0FBQyxLQUFLLENBQXRCLE9BQU87O0FBQ2IsWUFBSSxpQkFBaUIsR0FBRyxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQUMsSUFBSSxFQUFFLEtBQUs7aUJBQy9DOztjQUFJLEdBQUcsRUFBRyxLQUFPO1lBQUM7OztjQUFLLElBQUk7YUFBTTtXQUFLO1NBQUMsQ0FDeEMsQ0FBQztBQUNGLFlBQUksT0FBTyxHQUFFLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDOztBQUV4QyxlQUNFOztZQUFTLFNBQVMsRUFBQyxzQkFBc0I7VUFDdkM7OztZQUNJLE9BQU87V0FDTjtTQUNHLENBQ1g7T0FDRjs7OztTQWhCRyxZQUFZO0dBQVMsS0FBSyxDQUFDLFNBQVM7O0FBbUIxQyxZQUFZLENBQUMsU0FBUyxHQUFHO0FBQ3ZCLFNBQU8sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxVQUFVO0NBQzFDLENBQUM7O2lCQUdhLFlBQVksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9zbGlkZUNvbnRlbnQuY3NzJztcbmltcG9ydCBSIGZyb20gJ3JhbWRhJztcblxuY2xhc3MgU2xpZGVQcm9ncmFtIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcblxuICByZW5kZXIoKXtcbiAgICBsZXQgeyBjb250ZW50IH0gPSB0aGlzLnByb3BzO1xuICAgIGxldCBjcmVhdGVQcm9ncmFtTGlzdCA9IFIubWFwSW5kZXhlZCgoaXRlbSwgaW5kZXgpID0+IChcbiAgICAgIDxsaSBrZXk9eyBpbmRleCB9PjxwPnsgaXRlbSB9PC9wPjwvbGk+KVxuICAgICk7XG4gICAgbGV0IHByb2dyYW09IGNyZWF0ZVByb2dyYW1MaXN0KGNvbnRlbnQpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInNsaWRlQ29udGVudCBwcm9ncmFtXCI+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICB7IHByb2dyYW0gfVxuICAgICAgICA8L3VsPlxuICAgICAgPC9zZWN0aW9uPlxuICAgIClcbiAgfVxufVxuXG5TbGlkZVByb2dyYW0ucHJvcFR5cGVzID0ge1xuICBjb250ZW50OiBSZWFjdC5Qcm9wVHlwZXMuYXJyYXkuaXNSZXF1aXJlZFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBTbGlkZVByb2dyYW07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2NvbXBvbmVudHMvU2xpZGVQcm9ncmFtLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEzMS5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar MainTitleSlide = _interopRequire(__webpack_require__(123));\n\nvar SectionTitleSlide = _interopRequire(__webpack_require__(126));\n\nvar CreditsSlide = _interopRequire(__webpack_require__(117));\n\nvar Slide = _interopRequire(__webpack_require__(128));\n\n__webpack_require__(228);\n\nvar R = _interopRequire(__webpack_require__(21));\n\nvar LogoText = _interopRequire(__webpack_require__(119));\n\nvar Main = (function (_React$Component) {\n  function Main() {\n    _classCallCheck(this, Main);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Main, _React$Component);\n\n  _createClass(Main, {\n    selectType: {\n      value: function selectType(data) {\n        var slide = undefined;\n        switch (data.type) {\n          case "main-title":\n            slide = React.createElement(MainTitleSlide, { slide: data });\n            break;\n          case "section-title":\n            slide = React.createElement(SectionTitleSlide, { slide: data });\n            break;\n          case "credits":\n            slide = React.createElement(CreditsSlide, { slide: data });\n            break;\n          case "credits":\n          default:\n            slide = React.createElement(Slide, { slide: data });\n        }\n        return slide;\n      }\n    },\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var activeSlide = _props.activeSlide;\n        var slides = _props.slides;\n\n        var slideData = R.find(R.propEq("index", activeSlide))(slides);\n        var slide = slideData ? this.selectType(slideData) : null;\n        return React.createElement(\n          "section",\n          { className: "slides" },\n          slide ? slide : React.createElement(LogoText, null)\n        );\n      }\n    }\n  });\n\n  return Main;\n})(React.Component);\n\nMain.propTypes = {\n  slides: React.PropTypes.array.isRequired,\n  activeSlide: React.PropTypes.number.isRequired };\n\nmodule.exports = Main;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Slides.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlcy5qc3g/ZWFmNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLGNBQWMsdUNBQU0sR0FBc0I7O0lBQzFDLGlCQUFpQix1Q0FBTSxHQUF5Qjs7SUFDaEQsWUFBWSx1Q0FBTSxHQUFvQjs7SUFDdEMsS0FBSyx1Q0FBTSxHQUFhOztvQkFDeEIsR0FBeUI7O0lBQ3pCLENBQUMsdUNBQU0sRUFBTzs7SUFDZCxRQUFRLHVDQUFNLEdBQWdCOztJQUUvQixJQUFJO1dBQUosSUFBSTswQkFBSixJQUFJOzs7Ozs7O1lBQUosSUFBSTs7ZUFBSixJQUFJO0FBQ1IsY0FBVTthQUFBLG9CQUFDLElBQUksRUFBQztBQUNkLFlBQUksS0FBSyxhQUFDO0FBQ1YsZ0JBQU8sSUFBSSxDQUFDLElBQUk7QUFDZCxlQUFLLFlBQVk7QUFDZixpQkFBSyxHQUFHLG9CQUFDLGNBQWMsSUFBQyxLQUFLLEVBQUUsSUFBSyxHQUFFO0FBQ3RDLGtCQUFNO0FBQ1IsZUFBSyxlQUFlO0FBQ2xCLGlCQUFLLEdBQUcsb0JBQUMsaUJBQWlCLElBQUMsS0FBSyxFQUFFLElBQUssR0FBRTtBQUN6QyxrQkFBTTtBQUNSLGVBQUssU0FBUztBQUNaLGlCQUFLLEdBQUcsb0JBQUMsWUFBWSxJQUFDLEtBQUssRUFBRSxJQUFLLEdBQUU7QUFDcEMsa0JBQU07QUFDUixlQUFLLFNBQVMsQ0FBQztBQUNmO0FBQ0UsaUJBQUssR0FBRyxvQkFBQyxLQUFLLElBQUMsS0FBSyxFQUFFLElBQUssR0FBRTtBQUFBLFNBQ2hDO0FBQ0QsZUFBTyxLQUFLLENBQUM7T0FDZDs7QUFFRCxVQUFNO2FBQUEsa0JBQUU7cUJBQ3dCLElBQUksQ0FBQyxLQUFLO1lBQWxDLFdBQVcsVUFBWCxXQUFXO1lBQUUsTUFBTSxVQUFOLE1BQU07O0FBQ3pCLFlBQUksU0FBUyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMvRCxZQUFJLEtBQUssR0FBRyxTQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUM7QUFDMUQsZUFDRTs7WUFBUyxTQUFTLEVBQUcsUUFBVTtVQUMzQixLQUFLLEdBQUcsS0FBSyxHQUFHLG9CQUFDLFFBQVEsT0FBRztTQUN0QixDQUNWO09BRUg7Ozs7U0E5QkcsSUFBSTtHQUFTLEtBQUssQ0FBQyxTQUFTOztBQWlDbEMsSUFBSSxDQUFDLFNBQVMsR0FBRztBQUNmLFFBQU0sRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxVQUFVO0FBQ3hDLGFBQVcsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQy9DLENBQUM7O2lCQUdhLElBQUksQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTWFpblRpdGxlU2xpZGUgZnJvbSAnLi9NYWluVGl0bGVTbGlkZS5qc3gnO1xuaW1wb3J0IFNlY3Rpb25UaXRsZVNsaWRlIGZyb20gJy4vU2VjdGlvblRpdGxlU2xpZGUuanN4JztcbmltcG9ydCBDcmVkaXRzU2xpZGUgZnJvbSAnLi9DcmVkaXRzU2xpZGUuanN4JztcbmltcG9ydCBTbGlkZSBmcm9tICcuL1NsaWRlLmpzeCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy9zbGlkZXMuY3NzJztcbmltcG9ydCBSIGZyb20gJ3JhbWRhJztcbmltcG9ydCBMb2dvVGV4dCBmcm9tICcuL0xvZ29UZXh0LmpzeCc7XG5cbmNsYXNzIE1haW4gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBzZWxlY3RUeXBlKGRhdGEpe1xuICAgIGxldCBzbGlkZTtcbiAgICBzd2l0Y2goZGF0YS50eXBlKXtcbiAgICAgIGNhc2UgJ21haW4tdGl0bGUnOlxuICAgICAgICBzbGlkZSA9IDxNYWluVGl0bGVTbGlkZSBzbGlkZT17ZGF0YX0vPlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3NlY3Rpb24tdGl0bGUnOlxuICAgICAgICBzbGlkZSA9IDxTZWN0aW9uVGl0bGVTbGlkZSBzbGlkZT17ZGF0YX0vPlxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NyZWRpdHMnOlxuICAgICAgICBzbGlkZSA9IDxDcmVkaXRzU2xpZGUgc2xpZGU9e2RhdGF9Lz5cbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjcmVkaXRzJzpcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHNsaWRlID0gPFNsaWRlIHNsaWRlPXtkYXRhfS8+XG4gICAgfVxuICAgIHJldHVybiBzbGlkZTtcbiAgfVxuXG4gIHJlbmRlcigpe1xuICAgIGxldCB7IGFjdGl2ZVNsaWRlLCBzbGlkZXMgfSA9IHRoaXMucHJvcHM7XG4gICAgbGV0IHNsaWRlRGF0YSA9IFIuZmluZChSLnByb3BFcSgnaW5kZXgnLCBhY3RpdmVTbGlkZSkpKHNsaWRlcyk7XG4gICAgbGV0IHNsaWRlID0gc2xpZGVEYXRhID8gdGhpcy5zZWxlY3RUeXBlKHNsaWRlRGF0YSkgOiBudWxsO1xuICAgIHJldHVybiAoXG4gICAgICA8c2VjdGlvbiBjbGFzc05hbWU9eyAnc2xpZGVzJyB9PlxuICAgICAgICB7IHNsaWRlID8gc2xpZGUgOiA8TG9nb1RleHQgLz59XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKTtcblxuICB9XG59XG5cbk1haW4ucHJvcFR5cGVzID0ge1xuICBzbGlkZXM6IFJlYWN0LlByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICBhY3RpdmVTbGlkZTogUmVhY3QuUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxufTtcblxuXG5leHBvcnQgZGVmYXVsdCBNYWluO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1NsaWRlcy5qc3hcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMzIuanMifQ==')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar Pads = _interopRequire(__webpack_require__(125));\n\n__webpack_require__(229);\n\nvar Timeline = (function (_React$Component) {\n  function Timeline() {\n    _classCallCheck(this, Timeline);\n\n    if (_React$Component != null) {\n      _React$Component.apply(this, arguments);\n    }\n  }\n\n  _inherits(Timeline, _React$Component);\n\n  _createClass(Timeline, {\n    render: {\n      value: function render() {\n        var _props = this.props;\n        var activeSlide = _props.activeSlide;\n        var playing = _props.playing;\n        var slides = _props.slides;\n\n        return React.createElement(\n          "section",\n          { className: "timeline" },\n          React.createElement(Pads, { slides: slides, activeSlide: activeSlide, playing: playing }),\n          React.createElement("section", { className: "modeSwitch" })\n        );\n      }\n    }\n  });\n\n  return Timeline;\n})(React.Component);\n\nmodule.exports = Timeline;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Timeline.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1RpbWVsaW5lLmpzeD9mZjRkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztJQUFPLEtBQUssdUNBQU0sQ0FBTzs7SUFDbEIsSUFBSSx1Q0FBTSxHQUFZOztvQkFDdEIsR0FBMkI7O0lBRTVCLFFBQVE7V0FBUixRQUFROzBCQUFSLFFBQVE7Ozs7Ozs7WUFBUixRQUFROztlQUFSLFFBQVE7QUFDWixVQUFNO2FBQUEsa0JBQUU7cUJBQ2lDLElBQUksQ0FBQyxLQUFLO1lBQTNDLFdBQVcsVUFBWCxXQUFXO1lBQUUsT0FBTyxVQUFQLE9BQU87WUFBRSxNQUFNLFVBQU4sTUFBTTs7QUFFbEMsZUFDRTs7WUFBUyxTQUFTLEVBQUMsVUFBVTtVQUMzQixvQkFBQyxJQUFJLElBQUMsTUFBTSxFQUFHLE1BQVEsRUFBQyxXQUFXLEVBQUcsV0FBYSxFQUFDLE9BQU8sRUFBRyxPQUFTLEdBQUc7VUFDMUUsaUNBQVMsU0FBUyxFQUFDLFlBQVksR0FBRTtTQUN6QixDQUNYO09BQ0Y7Ozs7U0FWRyxRQUFRO0dBQVMsS0FBSyxDQUFDLFNBQVM7O2lCQWF2QixRQUFRLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFBhZHMgZnJvbSAnLi9QYWRzLmpzeCc7XG5pbXBvcnQgJy4uLy4uL3N0eWxlcy90aW1lbGluZS5jc3MnO1xuXG5jbGFzcyBUaW1lbGluZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIHJlbmRlcigpe1xuICAgIGxldCB7IGFjdGl2ZVNsaWRlLCBwbGF5aW5nLCBzbGlkZXMgfSA9IHRoaXMucHJvcHM7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPSd0aW1lbGluZSc+XG4gICAgICAgIDxQYWRzIHNsaWRlcz17IHNsaWRlcyB9IGFjdGl2ZVNsaWRlPXsgYWN0aXZlU2xpZGUgfSBwbGF5aW5nPXsgcGxheWluZyB9IC8+XG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cIm1vZGVTd2l0Y2hcIi8+XG4gICAgICA8L3NlY3Rpb24+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRpbWVsaW5lO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy9jb21wb25lbnRzL1RpbWVsaW5lLmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEzMy5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar _callbacks = [];\nvar _promises = [];\n\nvar Dispatcher = (function () {\n  function Dispatcher() {\n    _classCallCheck(this, Dispatcher);\n  }\n\n  _createClass(Dispatcher, {\n    register: {\n      value: function register(callback) {\n        _callbacks.push(callback);\n        return _callbacks.length - 1; // index\n      }\n    },\n    dispatch: {\n      value: function dispatch(payload) {\n        var resolves = [];\n        var rejects = [];\n\n        _promises = _callbacks.map(function (_, i) {\n          return new Promise(function (resolve, reject) {\n            resolves[i] = resolve;\n            rejects[i] = reject;\n          });\n        });\n\n        _callbacks.forEach(function (callback, i) {\n          Promise.resolve(callback(payload)).then(function () {\n            resolves[i](payload);\n          }, function () {\n            rejects[i](new Error("Dispatcher callback unsuccessful"));\n          });\n        });\n        _promises = [];\n      }\n    }\n  });\n\n  return Dispatcher;\n})();\n\nmodule.exports = Dispatcher;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "Dispatcher.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9kaXNwYXRjaGVyL0Rpc3BhdGNoZXIuanM/N2Y3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUNwQixJQUFJLFNBQVMsR0FBRyxFQUFFLENBQUM7O0lBRWIsVUFBVTtXQUFWLFVBQVU7MEJBQVYsVUFBVTs7O2VBQVYsVUFBVTtBQUNkLFlBQVE7YUFBQSxrQkFBQyxRQUFRLEVBQUU7QUFDakIsa0JBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDMUIsZUFBTyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztPQUM5Qjs7QUFFRCxZQUFRO2FBQUEsa0JBQUMsT0FBTyxFQUFFO0FBQ2hCLFlBQUksUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNsQixZQUFJLE9BQU8sR0FBRyxFQUFFLENBQUM7O0FBRWpCLGlCQUFTLEdBQUcsVUFBVSxDQUFDLEdBQUcsQ0FBQyxVQUFDLENBQUMsRUFBRSxDQUFDLEVBQUs7QUFDbkMsaUJBQU8sSUFBSSxPQUFPLENBQUMsVUFBUyxPQUFPLEVBQUUsTUFBTSxFQUFFO0FBQzNDLG9CQUFRLENBQUMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDO0FBQ3RCLG1CQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDO1dBQ3JCLENBQUMsQ0FBQztTQUNKLENBQUMsQ0FBQzs7QUFFSCxrQkFBVSxDQUFDLE9BQU8sQ0FBQyxVQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUs7QUFDbEMsaUJBQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQU07QUFDNUMsb0JBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztXQUN0QixFQUFFLFlBQU07QUFDUCxtQkFBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLGtDQUFrQyxDQUFDLENBQUMsQ0FBQztXQUMzRCxDQUFDLENBQUM7U0FDSixDQUFDLENBQUM7QUFDSCxpQkFBUyxHQUFHLEVBQUUsQ0FBQztPQUNoQjs7OztTQXpCRyxVQUFVOzs7aUJBNEJELFVBQVUsQyIsInNvdXJjZXNDb250ZW50IjpbImxldCBfY2FsbGJhY2tzID0gW107XG5sZXQgX3Byb21pc2VzID0gW107XG5cbmNsYXNzIERpc3BhdGNoZXIge1xuICByZWdpc3RlcihjYWxsYmFjaykge1xuICAgIF9jYWxsYmFja3MucHVzaChjYWxsYmFjayk7XG4gICAgcmV0dXJuIF9jYWxsYmFja3MubGVuZ3RoIC0gMTsgLy8gaW5kZXhcbiAgfVxuXG4gIGRpc3BhdGNoKHBheWxvYWQpIHtcbiAgICBsZXQgcmVzb2x2ZXMgPSBbXTtcbiAgICBsZXQgcmVqZWN0cyA9IFtdO1xuXG4gICAgX3Byb21pc2VzID0gX2NhbGxiYWNrcy5tYXAoKF8sIGkpID0+IHtcbiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgcmVzb2x2ZXNbaV0gPSByZXNvbHZlO1xuICAgICAgICByZWplY3RzW2ldID0gcmVqZWN0O1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfY2FsbGJhY2tzLmZvckVhY2goKGNhbGxiYWNrLCBpKSA9PiB7XG4gICAgICBQcm9taXNlLnJlc29sdmUoY2FsbGJhY2socGF5bG9hZCkpLnRoZW4oKCkgPT4ge1xuICAgICAgICByZXNvbHZlc1tpXShwYXlsb2FkKTtcbiAgICAgIH0sICgpID0+IHtcbiAgICAgICAgcmVqZWN0c1tpXShuZXcgRXJyb3IoJ0Rpc3BhdGNoZXIgY2FsbGJhY2sgdW5zdWNjZXNzZnVsJykpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgX3Byb21pc2VzID0gW107XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGlzcGF0Y2hlcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NjcmlwdHMvZGlzcGF0Y2hlci9EaXNwYXRjaGVyLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTM0LmpzIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar React = _interopRequire(__webpack_require__(1));\n\nvar MPCContainer = _interopRequire(__webpack_require__(121));\n\nReact.render(React.createElement(MPCContainer, null), document.body);\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "entry.jsx" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9lbnRyeS5qc3g/NDNkNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7SUFBTyxLQUFLLHVDQUFNLENBQU87O0lBQ2xCLFlBQVksdUNBQU0sR0FBK0I7O0FBRXhELEtBQUssQ0FBQyxNQUFNLENBQUMsb0JBQUMsWUFBWSxPQUFHLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNUENDb250YWluZXIgZnJvbSAnLi9jb21wb25lbnRzL01QQ0NvbnRhaW5lci5qc3gnO1xuXG5SZWFjdC5yZW5kZXIoPE1QQ0NvbnRhaW5lciAvPiwgZG9jdW1lbnQuYm9keSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL2VudHJ5LmpzeFxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEzNS5qcyJ9')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar BaseStore = _interopRequire(__webpack_require__(84));\n\nvar AppStateConstants = _interopRequire(__webpack_require__(57));\n\nvar R = _interopRequire(__webpack_require__(21));\n\nvar slideShowData = _interopRequire(__webpack_require__(111));\n\nvar createSlideShow = _interopRequire(__webpack_require__(138));\n\nvar slideShow = createSlideShow(slideShowData);\n\nvar AppState = (function (_BaseStore) {\n  function AppState() {\n    _classCallCheck(this, AppState);\n\n    _get(Object.getPrototypeOf(AppState.prototype), "constructor", this).call(this);\n    this.slideShow = slideShow;\n    this.activeSlide = 0;\n    this.stop = this._stop.bind(this);\n    this.play = this._play.bind(this);\n    this.playing = undefined;\n    //this.play();\n    this.toggle = this._toggle.bind(this);\n    this.sidebarOpen = true;\n  }\n\n  _inherits(AppState, _BaseStore);\n\n  _createClass(AppState, {\n    _toggle: {\n      value: function _toggle() {\n        !this.playing ? this.play() : this.stop();\n        this.update();\n      }\n    },\n    _stop: {\n      value: function _stop(intervalId) {\n        clearInterval(this.playing);\n        this.playing = undefined;\n      }\n    },\n    _play: {\n      value: function _play() {\n        var _this = this;\n\n        this.playing = setInterval(function () {\n          _this.activeSlide = getRandomInt(1, 24);\n          _this.update();\n        }, 2000);\n      }\n    },\n    transitionSlide: {\n      value: function transitionSlide(direction) {\n        var lastSlide = this.slideShow.slides.length;\n        if (direction === "start") {\n          this.setActiveSlide(0);\n        }\n        if (direction === "forward" && this.activeSlide <= lastSlide) {\n          this.setActiveSlide(this.activeSlide + 1);\n        }\n        if (direction === "back" && this.activeSlide >= 1) {\n          this.setActiveSlide(this.activeSlide - 1);\n        }\n        if (direction === "end") {\n          this.setActiveSlide(lastSlide);\n        }\n      }\n    },\n    setActiveSlide: {\n      value: function setActiveSlide(padId) {\n        this.activeSlide = padId;\n        this.update();\n      }\n    },\n    toggleSidebar: {\n      value: function toggleSidebar() {\n        this.sidebarOpen = this.sidebarOpen ? false : true;\n        this.update();\n      }\n    },\n    update: {\n      value: function update() {\n        this.emitChange();\n      }\n    },\n    handleAction: {\n      value: function handleAction(_ref) {\n        var action = _ref.action;\n\n        switch (action.actionType) {\n          case AppStateConstants.PAD_PUSHED:\n            var padId = action.padId;\n\n            this.setActiveSlide(padId);\n            break;\n          case AppStateConstants.TOGGLE_AUTOPLAY:\n            this.toggle();\n            break;\n          case AppStateConstants.TRANSITION_SLIDE:\n            var direction = action.direction;\n\n            this.transitionSlide(direction);\n            break;\n          case AppStateConstants.TOGGLE_SIDEBAR:\n            this.toggleSidebar();\n            break;\n        }\n        return true;\n      }\n    }\n  });\n\n  return AppState;\n})(BaseStore);\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nmodule.exports = AppState;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "appState.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9zdG9yZXMvYXBwU3RhdGUuanM/OTA5YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztJQUFPLFNBQVMsdUNBQU0sRUFBYTs7SUFDNUIsaUJBQWlCLHVDQUFNLEVBQWdDOztJQUN2RCxDQUFDLHVDQUFNLEVBQU87O0lBQ2QsYUFBYSx1Q0FBTSxHQUE2Qzs7SUFDaEUsZUFBZSx1Q0FBTSxHQUEwQjs7QUFFdEQsSUFBSSxTQUFTLEdBQUcsZUFBZSxDQUFDLGFBQWEsQ0FBQyxDQUFDOztJQUV6QyxRQUFRO0FBRUQsV0FGUCxRQUFRLEdBRUM7MEJBRlQsUUFBUTs7QUFHViwrQkFIRSxRQUFRLDZDQUdGO0FBQ1IsUUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7QUFDM0IsUUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7QUFDckIsUUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsQyxRQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2xDLFFBQUksQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDOztBQUV6QixRQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RDLFFBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO0dBQ3pCOztZQVpHLFFBQVE7O2VBQVIsUUFBUTtBQWNaLFdBQU87YUFBQSxtQkFBRTtBQUNQLFNBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzFDLFlBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztPQUNmOztBQUVELFNBQUs7YUFBQSxlQUFDLFVBQVUsRUFBQztBQUNmLHFCQUFhLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzVCLFlBQUksQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDO09BQzFCOztBQUVELFNBQUs7YUFBQSxpQkFBRTs7O0FBQ0wsWUFBSSxDQUFDLE9BQU8sR0FBRyxXQUFXLENBQUMsWUFBSztBQUM5QixnQkFBSyxXQUFXLEdBQUcsWUFBWSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUN2QyxnQkFBSyxNQUFNLEVBQUUsQ0FBQztTQUNmLEVBQUUsSUFBSSxDQUFDLENBQUM7T0FDVjs7QUFFRCxtQkFBZTthQUFBLHlCQUFDLFNBQVMsRUFBQztBQUN4QixZQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDN0MsWUFBRyxTQUFTLEtBQUssT0FBTyxFQUFDO0FBQ3ZCLGNBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDO1NBQ3ZCO0FBQ0QsWUFBRyxTQUFTLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxXQUFXLElBQUksU0FBUyxFQUFDO0FBQzFELGNBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7U0FDMUM7QUFDRCxZQUFHLFNBQVMsS0FBSyxNQUFNLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxDQUFDLEVBQUM7QUFDL0MsY0FBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztTQUMxQztBQUNELFlBQUcsU0FBUyxLQUFLLEtBQUssRUFBQztBQUNyQixjQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQ2hDO09BQ0Y7O0FBRUQsa0JBQWM7YUFBQSx3QkFBQyxLQUFLLEVBQUM7QUFDbkIsWUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7QUFDekIsWUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO09BQ2Y7O0FBRUQsaUJBQWE7YUFBQSx5QkFBRTtBQUNiLFlBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDO0FBQ25ELFlBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztPQUNmOztBQUVELFVBQU07YUFBQSxrQkFBRTtBQUNOLFlBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztPQUNuQjs7QUFFRCxnQkFBWTthQUFBLDRCQUFZO1lBQVQsTUFBTSxRQUFOLE1BQU07O0FBQ25CLGdCQUFPLE1BQU0sQ0FBQyxVQUFVO0FBQ3RCLGVBQUssaUJBQWlCLENBQUMsVUFBVTtnQkFDekIsS0FBSyxHQUFLLE1BQU0sQ0FBaEIsS0FBSzs7QUFDWCxnQkFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUMzQixrQkFBTTtBQUNSLGVBQUssaUJBQWlCLENBQUMsZUFBZTtBQUNwQyxnQkFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQU07QUFDUixlQUFLLGlCQUFpQixDQUFDLGdCQUFnQjtnQkFDL0IsU0FBUyxHQUFLLE1BQU0sQ0FBcEIsU0FBUzs7QUFDZixnQkFBSSxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUNoQyxrQkFBTTtBQUNSLGVBQUssaUJBQWlCLENBQUMsY0FBYztBQUNuQyxnQkFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0FBQ3JCLGtCQUFNO0FBQUEsU0FDVDtBQUNELGVBQU8sSUFBSSxDQUFDO09BQ2I7Ozs7U0EvRUcsUUFBUTtHQUFTLFNBQVM7O0FBa0ZoQyxTQUFTLFlBQVksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFO0FBQzVCLFNBQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0NBQ3hEOztpQkFFYyxRQUFRLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZVN0b3JlIGZyb20gJy4vQmFzZVN0b3JlJztcbmltcG9ydCBBcHBTdGF0ZUNvbnN0YW50cyBmcm9tICcuLi9jb25zdGFudHMvQXBwU3RhdGVDb25zdGFudHMnO1xuaW1wb3J0IFIgZnJvbSAncmFtZGEnO1xuaW1wb3J0IHNsaWRlU2hvd0RhdGEgZnJvbSAnLi4vLi4vY29udGVudC9jdGgtb2YtZGlmZmVyZW50LWN1bHR1cmVzLnltbCc7XG5pbXBvcnQgY3JlYXRlU2xpZGVTaG93IGZyb20gJy4uL3V0aWxzL2NyZWF0ZVNsaWRlc2hvdyc7XG5cbmxldCBzbGlkZVNob3cgPSBjcmVhdGVTbGlkZVNob3coc2xpZGVTaG93RGF0YSk7XG5cbmNsYXNzIEFwcFN0YXRlIGV4dGVuZHMgQmFzZVN0b3JlIHtcblxuICBjb25zdHJ1Y3Rvcigpe1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zbGlkZVNob3cgPSBzbGlkZVNob3c7XG4gICAgdGhpcy5hY3RpdmVTbGlkZSA9IDA7XG4gICAgdGhpcy5zdG9wID0gdGhpcy5fc3RvcC5iaW5kKHRoaXMpO1xuICAgIHRoaXMucGxheSA9IHRoaXMuX3BsYXkuYmluZCh0aGlzKTtcbiAgICB0aGlzLnBsYXlpbmcgPSB1bmRlZmluZWQ7XG4gICAgLy90aGlzLnBsYXkoKTtcbiAgICB0aGlzLnRvZ2dsZSA9IHRoaXMuX3RvZ2dsZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc2lkZWJhck9wZW4gPSB0cnVlO1xuICB9XG5cbiAgX3RvZ2dsZSgpe1xuICAgICF0aGlzLnBsYXlpbmcgPyB0aGlzLnBsYXkoKSA6IHRoaXMuc3RvcCgpO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICBfc3RvcChpbnRlcnZhbElkKXtcbiAgICBjbGVhckludGVydmFsKHRoaXMucGxheWluZyk7XG4gICAgdGhpcy5wbGF5aW5nID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgX3BsYXkoKXtcbiAgICB0aGlzLnBsYXlpbmcgPSBzZXRJbnRlcnZhbCgoKT0+IHtcbiAgICAgIHRoaXMuYWN0aXZlU2xpZGUgPSBnZXRSYW5kb21JbnQoMSwgMjQpO1xuICAgICAgdGhpcy51cGRhdGUoKTtcbiAgICB9LCAyMDAwKTtcbiAgfVxuXG4gIHRyYW5zaXRpb25TbGlkZShkaXJlY3Rpb24pe1xuICAgIGxldCBsYXN0U2xpZGUgPSB0aGlzLnNsaWRlU2hvdy5zbGlkZXMubGVuZ3RoO1xuICAgIGlmKGRpcmVjdGlvbiA9PT0gJ3N0YXJ0Jyl7XG4gICAgICB0aGlzLnNldEFjdGl2ZVNsaWRlKDApXG4gICAgfVxuICAgIGlmKGRpcmVjdGlvbiA9PT0gJ2ZvcndhcmQnICYmIHRoaXMuYWN0aXZlU2xpZGUgPD0gbGFzdFNsaWRlKXtcbiAgICAgIHRoaXMuc2V0QWN0aXZlU2xpZGUodGhpcy5hY3RpdmVTbGlkZSArIDEpXG4gICAgfVxuICAgIGlmKGRpcmVjdGlvbiA9PT0gJ2JhY2snICYmIHRoaXMuYWN0aXZlU2xpZGUgPj0gMSl7XG4gICAgICB0aGlzLnNldEFjdGl2ZVNsaWRlKHRoaXMuYWN0aXZlU2xpZGUgLSAxKVxuICAgIH1cbiAgICBpZihkaXJlY3Rpb24gPT09ICdlbmQnKXtcbiAgICAgIHRoaXMuc2V0QWN0aXZlU2xpZGUobGFzdFNsaWRlKTtcbiAgICB9XG4gIH1cblxuICBzZXRBY3RpdmVTbGlkZShwYWRJZCl7XG4gICAgdGhpcy5hY3RpdmVTbGlkZSA9IHBhZElkO1xuICAgIHRoaXMudXBkYXRlKCk7XG4gIH1cblxuICB0b2dnbGVTaWRlYmFyKCl7XG4gICAgdGhpcy5zaWRlYmFyT3BlbiA9IHRoaXMuc2lkZWJhck9wZW4gPyBmYWxzZSA6IHRydWU7XG4gICAgdGhpcy51cGRhdGUoKTtcbiAgfVxuXG4gIHVwZGF0ZSgpe1xuICAgIHRoaXMuZW1pdENoYW5nZSgpO1xuICB9XG5cbiAgaGFuZGxlQWN0aW9uKHsgYWN0aW9uIH0pe1xuICAgIHN3aXRjaChhY3Rpb24uYWN0aW9uVHlwZSkge1xuICAgICAgY2FzZSBBcHBTdGF0ZUNvbnN0YW50cy5QQURfUFVTSEVEOlxuICAgICAgICBsZXQgeyBwYWRJZCB9ID0gYWN0aW9uO1xuICAgICAgICB0aGlzLnNldEFjdGl2ZVNsaWRlKHBhZElkKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIEFwcFN0YXRlQ29uc3RhbnRzLlRPR0dMRV9BVVRPUExBWTpcbiAgICAgICAgdGhpcy50b2dnbGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIEFwcFN0YXRlQ29uc3RhbnRzLlRSQU5TSVRJT05fU0xJREU6XG4gICAgICAgIGxldCB7IGRpcmVjdGlvbiB9ID0gYWN0aW9uO1xuICAgICAgICB0aGlzLnRyYW5zaXRpb25TbGlkZShkaXJlY3Rpb24pO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgQXBwU3RhdGVDb25zdGFudHMuVE9HR0xFX1NJREVCQVI6XG4gICAgICAgIHRoaXMudG9nZ2xlU2lkZWJhcigpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pKSArIG1pbjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwU3RhdGU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL3N0b3Jlcy9hcHBTdGF0ZS5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjEzNi5qcyJ9');

},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc && desc.writable) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _inherits = function (subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } };\n\nvar BaseStore = _interopRequire(__webpack_require__(84));\n\nvar _immutable = __webpack_require__(79);\n\nvar Map = _immutable.Map;\nvar Stack = _immutable.Stack;\n\nvar AppStateConstants = _interopRequire(__webpack_require__(57));\n\nvar collection = [];\n\nvar ModelStore = (function (_BaseStore) {\n  function ModelStore() {\n    _classCallCheck(this, ModelStore);\n\n    _get(Object.getPrototypeOf(ModelStore.prototype), "constructor", this).call(this);\n  }\n\n  _inherits(ModelStore, _BaseStore);\n\n  _createClass(ModelStore, {\n    collection: {\n      get: function () {\n        return collection;\n      }\n    },\n    handleAction: {\n      value: function handleAction(action) {\n        switch (action.actionType) {\n          case AppStateConstants.LOADED_COLLECTION:\n            collection = action.collection;\n            this.emitChange();\n            break;\n        }\n        return true;\n      }\n    }\n  });\n\n  return ModelStore;\n})(BaseStore);\n\nmodule.exports = ModelStore;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "collection.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9zdG9yZXMvY29sbGVjdGlvbi5qcz84YTRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0lBQU8sU0FBUyx1Q0FBTSxFQUFhOztxQ0FDUCxFQUFXOztJQUE5QixHQUFHLGNBQUgsR0FBRztJQUFFLEtBQUssY0FBTCxLQUFLOztJQUNaLGlCQUFpQix1Q0FBTSxFQUFnQzs7QUFFOUQsSUFBSSxVQUFVLEdBQUcsRUFBRSxDQUFDOztJQUVkLFVBQVU7QUFFSCxXQUZQLFVBQVUsR0FFRDswQkFGVCxVQUFVOztBQUdaLCtCQUhFLFVBQVUsNkNBR0o7R0FDVDs7WUFKRyxVQUFVOztlQUFWLFVBQVU7QUFNVixjQUFVO1dBQUEsWUFBRTtBQUNkLGVBQU8sVUFBVSxDQUFDO09BQ25COztBQUdELGdCQUFZO2FBQUEsc0JBQUMsTUFBTSxFQUFDO0FBQ2xCLGdCQUFPLE1BQU0sQ0FBQyxVQUFVO0FBQ3RCLGVBQUssaUJBQWlCLENBQUMsaUJBQWlCO0FBQ3RDLHNCQUFVLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQztBQUMvQixnQkFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0FBQ2xCLGtCQUFNO0FBQUEsU0FDVDtBQUNELGVBQU8sSUFBSSxDQUFDO09BQ2I7Ozs7U0FuQkcsVUFBVTtHQUFTLFNBQVM7O2lCQXVCbkIsVUFBVSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJhc2VTdG9yZSBmcm9tICcuL0Jhc2VTdG9yZSc7XG5pbXBvcnQgeyBNYXAsIFN0YWNrIH0gIGZyb20gJ2ltbXV0YWJsZSc7XG5pbXBvcnQgQXBwU3RhdGVDb25zdGFudHMgZnJvbSAnLi4vY29uc3RhbnRzL0FwcFN0YXRlQ29uc3RhbnRzJ1xuXG5sZXQgY29sbGVjdGlvbiA9IFtdO1xuXG5jbGFzcyBNb2RlbFN0b3JlIGV4dGVuZHMgQmFzZVN0b3JlIHtcblxuICBjb25zdHJ1Y3Rvcigpe1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBnZXQgY29sbGVjdGlvbigpe1xuICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICB9XG5cblxuICBoYW5kbGVBY3Rpb24oYWN0aW9uKXtcbiAgICBzd2l0Y2goYWN0aW9uLmFjdGlvblR5cGUpIHtcbiAgICAgIGNhc2UgQXBwU3RhdGVDb25zdGFudHMuTE9BREVEX0NPTExFQ1RJT046XG4gICAgICAgIGNvbGxlY3Rpb24gPSBhY3Rpb24uY29sbGVjdGlvbjtcbiAgICAgICAgdGhpcy5lbWl0Q2hhbmdlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IE1vZGVsU3RvcmU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zY3JpcHRzL3N0b3Jlcy9jb2xsZWN0aW9uLmpzXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTM3LmpzIn0=')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(8), RootInstanceProvider = __webpack_require__(6), ReactMount = __webpack_require__(3), React = __webpack_require__(1); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } (function () {\n\n"use strict";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj["default"] : obj; };\n\nvar R = _interopRequire(__webpack_require__(21));\n\nfunction createSlideshow(data) {\n  var cover = createCover(data);\n  var backCover = createBackCover(data);\n  var program = createProgram(data.slides);\n  var temp = R.concat([cover, program], data.slides);\n  var slideShow = R.concat(temp, [backCover]);\n  data.slides = createSlides(slideShow);\n  return data;\n}\n\nfunction createCover(data) {\n  var title = data.title;\n  var presenter = data.presenter;\n  var event = data.event;\n\n  var type = "main-title";\n  return { title: title, type: type, presenter: presenter, event: event };\n}\n\nfunction createBackCover(data) {\n  var url = data.url;\n  var presenter = data.presenter;\n\n  var title = url;\n  var type = "credits";\n  return { url: url, type: type, presenter: presenter };\n}\n\nfunction createProgram(slides) {\n  var getSectionSlides = R.filter(function (_ref) {\n    var type = _ref.type;\n    return type === "section-title";\n  });\n  var sectionSlides = getSectionSlides(slides);\n  var content = R.pluck("title")(sectionSlides);\n  var type = "program";\n  return { type: type, content: content };\n}\n\nfunction createSlides(slides) {\n  var sectionIndex = 0;\n  var sectionTitle = undefined;\n  var slideFactory = R.mapIndexed(function (item, index) {\n\n    if (item.type === "section-title") {\n      sectionIndex += 1;\n      sectionTitle = item.title;\n    }\n\n    item.sectionIndex = sectionIndex;\n    item.sectionTitle = sectionTitle;\n    item.index = index + 1;\n\n    return item;\n  });\n  return slideFactory(slides);\n}\n\nmodule.exports = createSlideshow;\n\n/* REACT HOT LOADER */ })(); if (true) { (function () { module.hot.dispose(function (data) { data.makeHot = module.makeHot; }); if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(7), foundReactClasses = false; if (makeExportsHot(module, __webpack_require__(1))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error("Cannot not apply hot update to " + "createSlideshow.js" + ": " + err.message); } }); } } })(); }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy91dGlscy9jcmVhdGVTbGlkZXNob3cuanM/M2FiZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7SUFBTyxDQUFDLHVDQUFNLEVBQU87O0FBRXJCLFNBQVMsZUFBZSxDQUFDLElBQUksRUFBQztBQUM1QixNQUFJLEtBQUssR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDOUIsTUFBSSxTQUFTLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RDLE1BQUksT0FBTyxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDekMsTUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbkQsTUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQzVDLE1BQUksQ0FBQyxNQUFNLEdBQUcsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3RDLFNBQU8sSUFBSSxDQUFDO0NBQ2I7O0FBRUQsU0FBUyxXQUFXLENBQUMsSUFBSSxFQUFDO01BQ2xCLEtBQUssR0FBdUIsSUFBSSxDQUFoQyxLQUFLO01BQUUsU0FBUyxHQUFZLElBQUksQ0FBekIsU0FBUztNQUFFLEtBQUssR0FBSyxJQUFJLENBQWQsS0FBSzs7QUFDN0IsTUFBSSxJQUFJLEdBQUcsWUFBWSxDQUFDO0FBQ3hCLFNBQU8sRUFBRSxLQUFLLEVBQUwsS0FBSyxFQUFFLElBQUksRUFBSixJQUFJLEVBQUUsU0FBUyxFQUFULFNBQVMsRUFBRSxLQUFLLEVBQUwsS0FBSyxFQUFFLENBQUM7Q0FDMUM7O0FBRUQsU0FBUyxlQUFlLENBQUMsSUFBSSxFQUFDO01BQ3RCLEdBQUcsR0FBZ0IsSUFBSSxDQUF2QixHQUFHO01BQUUsU0FBUyxHQUFLLElBQUksQ0FBbEIsU0FBUzs7QUFDcEIsTUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDO0FBQ2hCLE1BQUksSUFBSSxHQUFHLFNBQVMsQ0FBQztBQUNyQixTQUFPLEVBQUUsR0FBRyxFQUFILEdBQUcsRUFBRSxJQUFJLEVBQUosSUFBSSxFQUFFLFNBQVMsRUFBVCxTQUFTLEVBQUUsQ0FBQztDQUNqQzs7QUFHRCxTQUFTLGFBQWEsQ0FBQyxNQUFNLEVBQUM7QUFDNUIsTUFBSSxnQkFBZ0IsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDO1FBQUcsSUFBSSxRQUFKLElBQUk7V0FBTyxJQUFJLEtBQUssZUFBZTtHQUFBLENBQUMsQ0FBQztBQUN4RSxNQUFJLGFBQWEsR0FBRyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUM3QyxNQUFJLE9BQU8sR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQzlDLE1BQUksSUFBSSxHQUFHLFNBQVMsQ0FBQztBQUNyQixTQUFPLEVBQUUsSUFBSSxFQUFKLElBQUksRUFBRSxPQUFPLEVBQVAsT0FBTyxFQUFFLENBQUM7Q0FDMUI7O0FBRUQsU0FBUyxZQUFZLENBQUMsTUFBTSxFQUFDO0FBQzNCLE1BQUksWUFBWSxHQUFHLENBQUMsQ0FBQztBQUNyQixNQUFJLFlBQVksR0FBRyxTQUFTLENBQUM7QUFDN0IsTUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxVQUFDLElBQUksRUFBRSxLQUFLLEVBQUs7O0FBRS9DLFFBQUcsSUFBSSxDQUFDLElBQUksS0FBSyxlQUFlLEVBQUM7QUFDL0Isa0JBQVksSUFBSSxDQUFDLENBQUM7QUFDbEIsa0JBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO0tBQzNCOztBQUVELFFBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0FBQ2pDLFFBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0FBQ2pDLFFBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxHQUFHLENBQUMsQ0FBQzs7QUFFdkIsV0FBTyxJQUFJLENBQUM7R0FDYixDQUFDLENBQUM7QUFDSCxTQUFPLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztDQUM3Qjs7aUJBRWMsZUFBZSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFIgZnJvbSAncmFtZGEnO1xuXG5mdW5jdGlvbiBjcmVhdGVTbGlkZXNob3coZGF0YSl7XG4gIGxldCBjb3ZlciA9IGNyZWF0ZUNvdmVyKGRhdGEpO1xuICBsZXQgYmFja0NvdmVyID0gY3JlYXRlQmFja0NvdmVyKGRhdGEpO1xuICBsZXQgcHJvZ3JhbSA9IGNyZWF0ZVByb2dyYW0oZGF0YS5zbGlkZXMpO1xuICBsZXQgdGVtcCA9IFIuY29uY2F0KFtjb3ZlciwgcHJvZ3JhbV0sIGRhdGEuc2xpZGVzKTtcbiAgbGV0IHNsaWRlU2hvdyA9IFIuY29uY2F0KHRlbXAsIFtiYWNrQ292ZXJdKTtcbiAgZGF0YS5zbGlkZXMgPSBjcmVhdGVTbGlkZXMoc2xpZGVTaG93KTtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvdmVyKGRhdGEpe1xuICBsZXQgeyB0aXRsZSwgcHJlc2VudGVyLCBldmVudCB9ID0gZGF0YTtcbiAgbGV0IHR5cGUgPSAnbWFpbi10aXRsZSc7XG4gIHJldHVybiB7IHRpdGxlLCB0eXBlLCBwcmVzZW50ZXIsIGV2ZW50IH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUJhY2tDb3ZlcihkYXRhKXtcbiAgbGV0IHsgdXJsLCBwcmVzZW50ZXIgfSA9IGRhdGE7XG4gIGxldCB0aXRsZSA9IHVybDtcbiAgbGV0IHR5cGUgPSAnY3JlZGl0cyc7XG4gIHJldHVybiB7IHVybCwgdHlwZSwgcHJlc2VudGVyIH07XG59XG5cblxuZnVuY3Rpb24gY3JlYXRlUHJvZ3JhbShzbGlkZXMpe1xuICBsZXQgZ2V0U2VjdGlvblNsaWRlcyA9IFIuZmlsdGVyKCh7IHR5cGUgfSkgPT4gdHlwZSA9PT0gJ3NlY3Rpb24tdGl0bGUnKTtcbiAgbGV0IHNlY3Rpb25TbGlkZXMgPSBnZXRTZWN0aW9uU2xpZGVzKHNsaWRlcyk7XG4gIGxldCBjb250ZW50ID0gUi5wbHVjaygndGl0bGUnKShzZWN0aW9uU2xpZGVzKTtcbiAgbGV0IHR5cGUgPSAncHJvZ3JhbSc7XG4gIHJldHVybiB7IHR5cGUsIGNvbnRlbnQgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlU2xpZGVzKHNsaWRlcyl7XG4gIGxldCBzZWN0aW9uSW5kZXggPSAwO1xuICBsZXQgc2VjdGlvblRpdGxlID0gdW5kZWZpbmVkO1xuICBsZXQgc2xpZGVGYWN0b3J5ID0gUi5tYXBJbmRleGVkKChpdGVtLCBpbmRleCkgPT4ge1xuXG4gICAgaWYoaXRlbS50eXBlID09PSAnc2VjdGlvbi10aXRsZScpe1xuICAgICAgc2VjdGlvbkluZGV4ICs9IDE7XG4gICAgICBzZWN0aW9uVGl0bGUgPSBpdGVtLnRpdGxlO1xuICAgIH1cblxuICAgIGl0ZW0uc2VjdGlvbkluZGV4ID0gc2VjdGlvbkluZGV4O1xuICAgIGl0ZW0uc2VjdGlvblRpdGxlID0gc2VjdGlvblRpdGxlO1xuICAgIGl0ZW0uaW5kZXggPSBpbmRleCArIDE7XG5cbiAgICByZXR1cm4gaXRlbTtcbiAgfSk7XG4gIHJldHVybiBzbGlkZUZhY3Rvcnkoc2xpZGVzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU2xpZGVzaG93O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2NyaXB0cy91dGlscy9jcmVhdGVTbGlkZXNob3cuanNcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMzguanMifQ==')},function(module,exports,__webpack_require__){eval("var isReactClassish = __webpack_require__(86);\n\nfunction isReactElementish(obj) {\n  if (!obj) {\n    return false;\n  }\n\n  return Object.prototype.toString.call(obj.props) === '[object Object]' &&\n         isReactClassish(obj.type);\n}\n\nmodule.exports = isReactElementish;//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvaXNSZWFjdEVsZW1lbnRpc2guanM/ZTU4YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNSZWFjdENsYXNzaXNoID0gcmVxdWlyZSgnLi9pc1JlYWN0Q2xhc3Npc2gnKTtcblxuZnVuY3Rpb24gaXNSZWFjdEVsZW1lbnRpc2gob2JqKSB7XG4gIGlmICghb2JqKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmoucHJvcHMpID09PSAnW29iamVjdCBPYmplY3RdJyAmJlxuICAgICAgICAgaXNSZWFjdENsYXNzaXNoKG9iai50eXBlKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1JlYWN0RWxlbWVudGlzaDtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9yZWFjdC1ob3QtbG9hZGVyL2lzUmVhY3RFbGVtZW50aXNoLmpzXG4gKiogbW9kdWxlIGlkID0gMTM5XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxMzkuanMifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Based on https://github.com/facebook/react/blob/master/src/class/ReactClass.js#L637\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n\n  boundMethod.__reactBoundContext = component;\n  boundMethod.__reactBoundMethod = method;\n  boundMethod.__reactBoundArguments = null;\n\n  var componentName = component.constructor.displayName,\n      _bind = boundMethod.bind;\n\n  boundMethod.bind = function (newThis) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    if (newThis !== component && newThis !== null) {\n      console.warn(\n        'bind(): React component methods may only be bound to the ' +\n        'component instance. See ' + componentName\n      );\n    } else if (!args.length) {\n      console.warn(\n        'bind(): You are binding a component method to the component. ' +\n        'React does this for you automatically in a high-performance ' +\n        'way, so you can safely remove this call. See ' + componentName\n      );\n      return boundMethod;\n    }\n\n    var reboundMethod = _bind.apply(boundMethod, arguments);\n    reboundMethod.__reactBoundContext = component;\n    reboundMethod.__reactBoundMethod = method;\n    reboundMethod.__reactBoundArguments = args;\n\n    return reboundMethod;\n  };\n\n  return boundMethod;\n}\n\n/**\n * Performs auto-binding similar to how React does it.\n * Skips already auto-bound methods.\n * Based on https://github.com/facebook/react/blob/master/src/class/ReactClass.js#L679.\n */\nmodule.exports = function bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (!component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      continue;\n    }\n\n    // Skip already bound methods\n    if (component.hasOwnProperty(autoBindKey) &&\n        component[autoBindKey].__reactBoundContext === component) {\n      continue;\n    }\n\n    var method = component.__reactAutoBindMap[autoBindKey];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvYmluZEF1dG9CaW5kTWV0aG9kcy5qcz84ZGQzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlYWN0L2Jsb2IvbWFzdGVyL3NyYy9jbGFzcy9SZWFjdENsYXNzLmpzI0w2MzdcbiAqL1xuZnVuY3Rpb24gYmluZEF1dG9CaW5kTWV0aG9kKGNvbXBvbmVudCwgbWV0aG9kKSB7XG4gIHZhciBib3VuZE1ldGhvZCA9IG1ldGhvZC5iaW5kKGNvbXBvbmVudCk7XG5cbiAgYm91bmRNZXRob2QuX19yZWFjdEJvdW5kQ29udGV4dCA9IGNvbXBvbmVudDtcbiAgYm91bmRNZXRob2QuX19yZWFjdEJvdW5kTWV0aG9kID0gbWV0aG9kO1xuICBib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRBcmd1bWVudHMgPSBudWxsO1xuXG4gIHZhciBjb21wb25lbnROYW1lID0gY29tcG9uZW50LmNvbnN0cnVjdG9yLmRpc3BsYXlOYW1lLFxuICAgICAgX2JpbmQgPSBib3VuZE1ldGhvZC5iaW5kO1xuXG4gIGJvdW5kTWV0aG9kLmJpbmQgPSBmdW5jdGlvbiAobmV3VGhpcykge1xuICAgIHZhciBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICBpZiAobmV3VGhpcyAhPT0gY29tcG9uZW50ICYmIG5ld1RoaXMgIT09IG51bGwpIHtcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgJ2JpbmQoKTogUmVhY3QgY29tcG9uZW50IG1ldGhvZHMgbWF5IG9ubHkgYmUgYm91bmQgdG8gdGhlICcgK1xuICAgICAgICAnY29tcG9uZW50IGluc3RhbmNlLiBTZWUgJyArIGNvbXBvbmVudE5hbWVcbiAgICAgICk7XG4gICAgfSBlbHNlIGlmICghYXJncy5sZW5ndGgpIHtcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgJ2JpbmQoKTogWW91IGFyZSBiaW5kaW5nIGEgY29tcG9uZW50IG1ldGhvZCB0byB0aGUgY29tcG9uZW50LiAnICtcbiAgICAgICAgJ1JlYWN0IGRvZXMgdGhpcyBmb3IgeW91IGF1dG9tYXRpY2FsbHkgaW4gYSBoaWdoLXBlcmZvcm1hbmNlICcgK1xuICAgICAgICAnd2F5LCBzbyB5b3UgY2FuIHNhZmVseSByZW1vdmUgdGhpcyBjYWxsLiBTZWUgJyArIGNvbXBvbmVudE5hbWVcbiAgICAgICk7XG4gICAgICByZXR1cm4gYm91bmRNZXRob2Q7XG4gICAgfVxuXG4gICAgdmFyIHJlYm91bmRNZXRob2QgPSBfYmluZC5hcHBseShib3VuZE1ldGhvZCwgYXJndW1lbnRzKTtcbiAgICByZWJvdW5kTWV0aG9kLl9fcmVhY3RCb3VuZENvbnRleHQgPSBjb21wb25lbnQ7XG4gICAgcmVib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRNZXRob2QgPSBtZXRob2Q7XG4gICAgcmVib3VuZE1ldGhvZC5fX3JlYWN0Qm91bmRBcmd1bWVudHMgPSBhcmdzO1xuXG4gICAgcmV0dXJuIHJlYm91bmRNZXRob2Q7XG4gIH07XG5cbiAgcmV0dXJuIGJvdW5kTWV0aG9kO1xufVxuXG4vKipcbiAqIFBlcmZvcm1zIGF1dG8tYmluZGluZyBzaW1pbGFyIHRvIGhvdyBSZWFjdCBkb2VzIGl0LlxuICogU2tpcHMgYWxyZWFkeSBhdXRvLWJvdW5kIG1ldGhvZHMuXG4gKiBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi9tYXN0ZXIvc3JjL2NsYXNzL1JlYWN0Q2xhc3MuanMjTDY3OS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBiaW5kQXV0b0JpbmRNZXRob2RzKGNvbXBvbmVudCkge1xuICBmb3IgKHZhciBhdXRvQmluZEtleSBpbiBjb21wb25lbnQuX19yZWFjdEF1dG9CaW5kTWFwKSB7XG4gICAgaWYgKCFjb21wb25lbnQuX19yZWFjdEF1dG9CaW5kTWFwLmhhc093blByb3BlcnR5KGF1dG9CaW5kS2V5KSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gU2tpcCBhbHJlYWR5IGJvdW5kIG1ldGhvZHNcbiAgICBpZiAoY29tcG9uZW50Lmhhc093blByb3BlcnR5KGF1dG9CaW5kS2V5KSAmJlxuICAgICAgICBjb21wb25lbnRbYXV0b0JpbmRLZXldLl9fcmVhY3RCb3VuZENvbnRleHQgPT09IGNvbXBvbmVudCkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdmFyIG1ldGhvZCA9IGNvbXBvbmVudC5fX3JlYWN0QXV0b0JpbmRNYXBbYXV0b0JpbmRLZXldO1xuICAgIGNvbXBvbmVudFthdXRvQmluZEtleV0gPSBiaW5kQXV0b0JpbmRNZXRob2QoY29tcG9uZW50LCBtZXRob2QpO1xuICB9XG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvYmluZEF1dG9CaW5kTWV0aG9kcy5qc1xuICoqIG1vZHVsZSBpZCA9IDE0MFxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTQwLmpzIn0=")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar bindAutoBindMethods = __webpack_require__(140);\nvar traverseRenderedChildren = __webpack_require__(146);\n\nfunction setPendingForceUpdate(internalInstance) {\n  if (internalInstance._pendingForceUpdate === false) {\n    internalInstance._pendingForceUpdate = true;\n  }\n}\n\nfunction forceUpdateIfPending(internalInstance, React) {\n  if (internalInstance._pendingForceUpdate === true) {\n    // `|| internalInstance` for React 0.12 and earlier\n    var instance = internalInstance._instance || internalInstance;\n\n    if (instance.forceUpdate) {\n      instance.forceUpdate();\n    } else if (React && React.Component) {\n      React.Component.prototype.forceUpdate.call(instance);\n    }\n  }\n}\n\n/**\n * Updates a React component recursively, so even if children define funky\n * `shouldComponentUpdate`, they are forced to re-render.\n * Makes sure that any newly added methods are properly auto-bound.\n */\nfunction deepForceUpdate(internalInstance, React) {\n  traverseRenderedChildren(internalInstance, bindAutoBindMethods);\n  traverseRenderedChildren(internalInstance, setPendingForceUpdate);\n  traverseRenderedChildren(internalInstance, forceUpdateIfPending, React);\n}\n\nmodule.exports = deepForceUpdate;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvZGVlcEZvcmNlVXBkYXRlLmpzPzgwYzQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBiaW5kQXV0b0JpbmRNZXRob2RzID0gcmVxdWlyZSgnLi9iaW5kQXV0b0JpbmRNZXRob2RzJyk7XG52YXIgdHJhdmVyc2VSZW5kZXJlZENoaWxkcmVuID0gcmVxdWlyZSgnLi90cmF2ZXJzZVJlbmRlcmVkQ2hpbGRyZW4nKTtcblxuZnVuY3Rpb24gc2V0UGVuZGluZ0ZvcmNlVXBkYXRlKGludGVybmFsSW5zdGFuY2UpIHtcbiAgaWYgKGludGVybmFsSW5zdGFuY2UuX3BlbmRpbmdGb3JjZVVwZGF0ZSA9PT0gZmFsc2UpIHtcbiAgICBpbnRlcm5hbEluc3RhbmNlLl9wZW5kaW5nRm9yY2VVcGRhdGUgPSB0cnVlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGZvcmNlVXBkYXRlSWZQZW5kaW5nKGludGVybmFsSW5zdGFuY2UsIFJlYWN0KSB7XG4gIGlmIChpbnRlcm5hbEluc3RhbmNlLl9wZW5kaW5nRm9yY2VVcGRhdGUgPT09IHRydWUpIHtcbiAgICAvLyBgfHwgaW50ZXJuYWxJbnN0YW5jZWAgZm9yIFJlYWN0IDAuMTIgYW5kIGVhcmxpZXJcbiAgICB2YXIgaW5zdGFuY2UgPSBpbnRlcm5hbEluc3RhbmNlLl9pbnN0YW5jZSB8fCBpbnRlcm5hbEluc3RhbmNlO1xuXG4gICAgaWYgKGluc3RhbmNlLmZvcmNlVXBkYXRlKSB7XG4gICAgICBpbnN0YW5jZS5mb3JjZVVwZGF0ZSgpO1xuICAgIH0gZWxzZSBpZiAoUmVhY3QgJiYgUmVhY3QuQ29tcG9uZW50KSB7XG4gICAgICBSZWFjdC5Db21wb25lbnQucHJvdG90eXBlLmZvcmNlVXBkYXRlLmNhbGwoaW5zdGFuY2UpO1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFVwZGF0ZXMgYSBSZWFjdCBjb21wb25lbnQgcmVjdXJzaXZlbHksIHNvIGV2ZW4gaWYgY2hpbGRyZW4gZGVmaW5lIGZ1bmt5XG4gKiBgc2hvdWxkQ29tcG9uZW50VXBkYXRlYCwgdGhleSBhcmUgZm9yY2VkIHRvIHJlLXJlbmRlci5cbiAqIE1ha2VzIHN1cmUgdGhhdCBhbnkgbmV3bHkgYWRkZWQgbWV0aG9kcyBhcmUgcHJvcGVybHkgYXV0by1ib3VuZC5cbiAqL1xuZnVuY3Rpb24gZGVlcEZvcmNlVXBkYXRlKGludGVybmFsSW5zdGFuY2UsIFJlYWN0KSB7XG4gIHRyYXZlcnNlUmVuZGVyZWRDaGlsZHJlbihpbnRlcm5hbEluc3RhbmNlLCBiaW5kQXV0b0JpbmRNZXRob2RzKTtcbiAgdHJhdmVyc2VSZW5kZXJlZENoaWxkcmVuKGludGVybmFsSW5zdGFuY2UsIHNldFBlbmRpbmdGb3JjZVVwZGF0ZSk7XG4gIHRyYXZlcnNlUmVuZGVyZWRDaGlsZHJlbihpbnRlcm5hbEluc3RhbmNlLCBmb3JjZVVwZGF0ZUlmUGVuZGluZywgUmVhY3QpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRlZXBGb3JjZVVwZGF0ZTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvZGVlcEZvcmNlVXBkYXRlLmpzXG4gKiogbW9kdWxlIGlkID0gMTQxXG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxNDEuanMifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\n/**\n * Returns a function that establishes the first prototype passed to it\n * as the \"source of truth\" and patches its methods on subsequent invocations,\n * also patching current and previous prototypes to forward calls to it.\n */\nmodule.exports = function makeAssimilatePrototype() {\n  var storedPrototype,\n      knownPrototypes = [];\n\n  function wrapMethod(key) {\n    return function () {\n      if (storedPrototype[key]) {\n        return storedPrototype[key].apply(this, arguments);\n      }\n    };\n  }\n\n  function patchProperty(proto, key) {\n    proto[key] = storedPrototype[key];\n\n    if (typeof proto[key] !== 'function' ||\n      key === 'type' ||\n      key === 'constructor') {\n      return;\n    }\n\n    proto[key] = wrapMethod(key);\n\n    if (storedPrototype[key].isReactClassApproved) {\n      proto[key].isReactClassApproved = storedPrototype[key].isReactClassApproved;\n    }\n\n    if (proto.__reactAutoBindMap && proto.__reactAutoBindMap[key]) {\n      proto.__reactAutoBindMap[key] = proto[key];\n    }\n  }\n\n  function updateStoredPrototype(freshPrototype) {\n    storedPrototype = {};\n\n    Object.getOwnPropertyNames(freshPrototype).forEach(function (key) {\n      storedPrototype[key] = freshPrototype[key];\n    });\n  }\n\n  function reconcileWithStoredPrototypes(freshPrototype) {\n    knownPrototypes.push(freshPrototype);\n    knownPrototypes.forEach(function (proto) {\n      Object.getOwnPropertyNames(storedPrototype).forEach(function (key) {\n        patchProperty(proto, key);\n      });\n    });\n  }\n\n  return function assimilatePrototype(freshPrototype) {\n    if (Object.prototype.hasOwnProperty.call(freshPrototype, '__isAssimilatedByReactHotAPI')) {\n      return;\n    }\n\n    updateStoredPrototype(freshPrototype);\n    reconcileWithStoredPrototypes(freshPrototype);\n    freshPrototype.__isAssimilatedByReactHotAPI = true;\n  };\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvbWFrZUFzc2ltaWxhdGVQcm90b3R5cGUuanM/NTA2YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgZXN0YWJsaXNoZXMgdGhlIGZpcnN0IHByb3RvdHlwZSBwYXNzZWQgdG8gaXRcbiAqIGFzIHRoZSBcInNvdXJjZSBvZiB0cnV0aFwiIGFuZCBwYXRjaGVzIGl0cyBtZXRob2RzIG9uIHN1YnNlcXVlbnQgaW52b2NhdGlvbnMsXG4gKiBhbHNvIHBhdGNoaW5nIGN1cnJlbnQgYW5kIHByZXZpb3VzIHByb3RvdHlwZXMgdG8gZm9yd2FyZCBjYWxscyB0byBpdC5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtYWtlQXNzaW1pbGF0ZVByb3RvdHlwZSgpIHtcbiAgdmFyIHN0b3JlZFByb3RvdHlwZSxcbiAgICAgIGtub3duUHJvdG90eXBlcyA9IFtdO1xuXG4gIGZ1bmN0aW9uIHdyYXBNZXRob2Qoa2V5KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChzdG9yZWRQcm90b3R5cGVba2V5XSkge1xuICAgICAgICByZXR1cm4gc3RvcmVkUHJvdG90eXBlW2tleV0uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gcGF0Y2hQcm9wZXJ0eShwcm90bywga2V5KSB7XG4gICAgcHJvdG9ba2V5XSA9IHN0b3JlZFByb3RvdHlwZVtrZXldO1xuXG4gICAgaWYgKHR5cGVvZiBwcm90b1trZXldICE9PSAnZnVuY3Rpb24nIHx8XG4gICAgICBrZXkgPT09ICd0eXBlJyB8fFxuICAgICAga2V5ID09PSAnY29uc3RydWN0b3InKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcHJvdG9ba2V5XSA9IHdyYXBNZXRob2Qoa2V5KTtcblxuICAgIGlmIChzdG9yZWRQcm90b3R5cGVba2V5XS5pc1JlYWN0Q2xhc3NBcHByb3ZlZCkge1xuICAgICAgcHJvdG9ba2V5XS5pc1JlYWN0Q2xhc3NBcHByb3ZlZCA9IHN0b3JlZFByb3RvdHlwZVtrZXldLmlzUmVhY3RDbGFzc0FwcHJvdmVkO1xuICAgIH1cblxuICAgIGlmIChwcm90by5fX3JlYWN0QXV0b0JpbmRNYXAgJiYgcHJvdG8uX19yZWFjdEF1dG9CaW5kTWFwW2tleV0pIHtcbiAgICAgIHByb3RvLl9fcmVhY3RBdXRvQmluZE1hcFtrZXldID0gcHJvdG9ba2V5XTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVTdG9yZWRQcm90b3R5cGUoZnJlc2hQcm90b3R5cGUpIHtcbiAgICBzdG9yZWRQcm90b3R5cGUgPSB7fTtcblxuICAgIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKGZyZXNoUHJvdG90eXBlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIHN0b3JlZFByb3RvdHlwZVtrZXldID0gZnJlc2hQcm90b3R5cGVba2V5XTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlY29uY2lsZVdpdGhTdG9yZWRQcm90b3R5cGVzKGZyZXNoUHJvdG90eXBlKSB7XG4gICAga25vd25Qcm90b3R5cGVzLnB1c2goZnJlc2hQcm90b3R5cGUpO1xuICAgIGtub3duUHJvdG90eXBlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm90bykge1xuICAgICAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc3RvcmVkUHJvdG90eXBlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgcGF0Y2hQcm9wZXJ0eShwcm90bywga2V5KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGFzc2ltaWxhdGVQcm90b3R5cGUoZnJlc2hQcm90b3R5cGUpIHtcbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZyZXNoUHJvdG90eXBlLCAnX19pc0Fzc2ltaWxhdGVkQnlSZWFjdEhvdEFQSScpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdXBkYXRlU3RvcmVkUHJvdG90eXBlKGZyZXNoUHJvdG90eXBlKTtcbiAgICByZWNvbmNpbGVXaXRoU3RvcmVkUHJvdG90eXBlcyhmcmVzaFByb3RvdHlwZSk7XG4gICAgZnJlc2hQcm90b3R5cGUuX19pc0Fzc2ltaWxhdGVkQnlSZWFjdEhvdEFQSSA9IHRydWU7XG4gIH07XG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvbWFrZUFzc2ltaWxhdGVQcm90b3R5cGUuanNcbiAqKiBtb2R1bGUgaWQgPSAxNDJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjE0Mi5qcyJ9")},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar makePatchReactClass = __webpack_require__(144);\n\n/**\n * Returns a function that, when invoked, patches a React class with a new\n * version of itself. To patch different classes, pass different IDs.\n */\nmodule.exports = function makeMakeHot(getRootInstances, React) {\n  if (typeof getRootInstances !== 'function') {\n    throw new Error('Expected getRootInstances to be a function.');\n  }\n\n  var patchers = {};\n\n  return function makeHot(NextClass, persistentId) {\n    persistentId = persistentId || NextClass.displayName || NextClass.name;\n\n    if (!persistentId) {\n      console.error(\n        'Hot reload is disabled for one of your types. To enable it, pass a ' +\n        'string uniquely identifying this class within this current module ' +\n        'as a second parameter to makeHot.'\n      );\n      return NextClass;\n    }\n\n    if (!patchers[persistentId]) {\n      patchers[persistentId] = makePatchReactClass(getRootInstances, React);\n    }\n\n    var patchReactClass = patchers[persistentId];\n    return patchReactClass(NextClass);\n  };\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvbWFrZU1ha2VIb3QuanM/ZTYwMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBtYWtlUGF0Y2hSZWFjdENsYXNzID0gcmVxdWlyZSgnLi9tYWtlUGF0Y2hSZWFjdENsYXNzJyk7XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQsIHdoZW4gaW52b2tlZCwgcGF0Y2hlcyBhIFJlYWN0IGNsYXNzIHdpdGggYSBuZXdcbiAqIHZlcnNpb24gb2YgaXRzZWxmLiBUbyBwYXRjaCBkaWZmZXJlbnQgY2xhc3NlcywgcGFzcyBkaWZmZXJlbnQgSURzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1ha2VNYWtlSG90KGdldFJvb3RJbnN0YW5jZXMsIFJlYWN0KSB7XG4gIGlmICh0eXBlb2YgZ2V0Um9vdEluc3RhbmNlcyAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgZ2V0Um9vdEluc3RhbmNlcyB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgdmFyIHBhdGNoZXJzID0ge307XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIG1ha2VIb3QoTmV4dENsYXNzLCBwZXJzaXN0ZW50SWQpIHtcbiAgICBwZXJzaXN0ZW50SWQgPSBwZXJzaXN0ZW50SWQgfHwgTmV4dENsYXNzLmRpc3BsYXlOYW1lIHx8IE5leHRDbGFzcy5uYW1lO1xuXG4gICAgaWYgKCFwZXJzaXN0ZW50SWQpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXG4gICAgICAgICdIb3QgcmVsb2FkIGlzIGRpc2FibGVkIGZvciBvbmUgb2YgeW91ciB0eXBlcy4gVG8gZW5hYmxlIGl0LCBwYXNzIGEgJyArXG4gICAgICAgICdzdHJpbmcgdW5pcXVlbHkgaWRlbnRpZnlpbmcgdGhpcyBjbGFzcyB3aXRoaW4gdGhpcyBjdXJyZW50IG1vZHVsZSAnICtcbiAgICAgICAgJ2FzIGEgc2Vjb25kIHBhcmFtZXRlciB0byBtYWtlSG90LidcbiAgICAgICk7XG4gICAgICByZXR1cm4gTmV4dENsYXNzO1xuICAgIH1cblxuICAgIGlmICghcGF0Y2hlcnNbcGVyc2lzdGVudElkXSkge1xuICAgICAgcGF0Y2hlcnNbcGVyc2lzdGVudElkXSA9IG1ha2VQYXRjaFJlYWN0Q2xhc3MoZ2V0Um9vdEluc3RhbmNlcywgUmVhY3QpO1xuICAgIH1cblxuICAgIHZhciBwYXRjaFJlYWN0Q2xhc3MgPSBwYXRjaGVyc1twZXJzaXN0ZW50SWRdO1xuICAgIHJldHVybiBwYXRjaFJlYWN0Q2xhc3MoTmV4dENsYXNzKTtcbiAgfTtcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vcmVhY3QtaG90LWxvYWRlci9+L3JlYWN0LWhvdC1hcGkvbW9kdWxlcy9tYWtlTWFrZUhvdC5qc1xuICoqIG1vZHVsZSBpZCA9IDE0M1xuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTQzLmpzIn0=");

},function(module,exports,__webpack_require__){eval("'use strict';\n\nvar makeAssimilatePrototype = __webpack_require__(142),\n    requestForceUpdateAll = __webpack_require__(145);\n\nfunction hasNonStubTypeProperty(ReactClass) {\n  if (!ReactClass.hasOwnProperty('type')) {\n    return false;\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(ReactClass, 'type');\n  if (typeof descriptor.get === 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getPrototype(ReactClass) {\n  var prototype = ReactClass.prototype,\n      seemsLegit = prototype && typeof prototype.render === 'function';\n\n  if (!seemsLegit && hasNonStubTypeProperty(ReactClass)) {\n    prototype = ReactClass.type.prototype;\n  }\n\n  return prototype;\n}\n\n/**\n * Returns a function that will patch React class with new versions of itself\n * on subsequent invocations. Both legacy and ES6 style classes are supported.\n */\nmodule.exports = function makePatchReactClass(getRootInstances, React) {\n  var assimilatePrototype = makeAssimilatePrototype(),\n      FirstClass = null;\n\n  return function patchReactClass(NextClass) {\n    var nextPrototype = getPrototype(NextClass);\n    assimilatePrototype(nextPrototype);\n\n    if (FirstClass) {\n      requestForceUpdateAll(getRootInstances, React);\n    }\n\n    return FirstClass || (FirstClass = NextClass);\n  };\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvbWFrZVBhdGNoUmVhY3RDbGFzcy5qcz9lNTAyIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBtYWtlQXNzaW1pbGF0ZVByb3RvdHlwZSA9IHJlcXVpcmUoJy4vbWFrZUFzc2ltaWxhdGVQcm90b3R5cGUnKSxcbiAgICByZXF1ZXN0Rm9yY2VVcGRhdGVBbGwgPSByZXF1aXJlKCcuL3JlcXVlc3RGb3JjZVVwZGF0ZUFsbCcpO1xuXG5mdW5jdGlvbiBoYXNOb25TdHViVHlwZVByb3BlcnR5KFJlYWN0Q2xhc3MpIHtcbiAgaWYgKCFSZWFjdENsYXNzLmhhc093blByb3BlcnR5KCd0eXBlJykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoUmVhY3RDbGFzcywgJ3R5cGUnKTtcbiAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yLmdldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBnZXRQcm90b3R5cGUoUmVhY3RDbGFzcykge1xuICB2YXIgcHJvdG90eXBlID0gUmVhY3RDbGFzcy5wcm90b3R5cGUsXG4gICAgICBzZWVtc0xlZ2l0ID0gcHJvdG90eXBlICYmIHR5cGVvZiBwcm90b3R5cGUucmVuZGVyID09PSAnZnVuY3Rpb24nO1xuXG4gIGlmICghc2VlbXNMZWdpdCAmJiBoYXNOb25TdHViVHlwZVByb3BlcnR5KFJlYWN0Q2xhc3MpKSB7XG4gICAgcHJvdG90eXBlID0gUmVhY3RDbGFzcy50eXBlLnByb3RvdHlwZTtcbiAgfVxuXG4gIHJldHVybiBwcm90b3R5cGU7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBwYXRjaCBSZWFjdCBjbGFzcyB3aXRoIG5ldyB2ZXJzaW9ucyBvZiBpdHNlbGZcbiAqIG9uIHN1YnNlcXVlbnQgaW52b2NhdGlvbnMuIEJvdGggbGVnYWN5IGFuZCBFUzYgc3R5bGUgY2xhc3NlcyBhcmUgc3VwcG9ydGVkLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1ha2VQYXRjaFJlYWN0Q2xhc3MoZ2V0Um9vdEluc3RhbmNlcywgUmVhY3QpIHtcbiAgdmFyIGFzc2ltaWxhdGVQcm90b3R5cGUgPSBtYWtlQXNzaW1pbGF0ZVByb3RvdHlwZSgpLFxuICAgICAgRmlyc3RDbGFzcyA9IG51bGw7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHBhdGNoUmVhY3RDbGFzcyhOZXh0Q2xhc3MpIHtcbiAgICB2YXIgbmV4dFByb3RvdHlwZSA9IGdldFByb3RvdHlwZShOZXh0Q2xhc3MpO1xuICAgIGFzc2ltaWxhdGVQcm90b3R5cGUobmV4dFByb3RvdHlwZSk7XG5cbiAgICBpZiAoRmlyc3RDbGFzcykge1xuICAgICAgcmVxdWVzdEZvcmNlVXBkYXRlQWxsKGdldFJvb3RJbnN0YW5jZXMsIFJlYWN0KTtcbiAgICB9XG5cbiAgICByZXR1cm4gRmlyc3RDbGFzcyB8fCAoRmlyc3RDbGFzcyA9IE5leHRDbGFzcyk7XG4gIH07XG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvbWFrZVBhdGNoUmVhY3RDbGFzcy5qc1xuICoqIG1vZHVsZSBpZCA9IDE0NFxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMTQ0LmpzIn0=")},function(module,exports,__webpack_require__){eval("var deepForceUpdate = __webpack_require__(141);\n\nvar isRequestPending = false;\n\nmodule.exports = function requestForceUpdateAll(getRootInstances, React) {\n  if (isRequestPending) {\n    return;\n  }\n\n  /**\n   * Forces deep re-render of all mounted React components.\n   * Hat's off to Omar Skalli (@Chetane) for suggesting this approach:\n   * https://gist.github.com/Chetane/9a230a9fdcdca21a4e29\n   */\n  function forceUpdateAll() {\n    isRequestPending = false;\n\n    var rootInstances = getRootInstances(),\n        rootInstance;\n\n    for (var key in rootInstances) {\n      if (rootInstances.hasOwnProperty(key)) {\n        rootInstance = rootInstances[key];\n\n        // `|| rootInstance` for React 0.12 and earlier\n        rootInstance = rootInstance._reactInternalInstance || rootInstance;\n        deepForceUpdate(rootInstance, React);\n      }\n    }\n  }\n\n  setTimeout(forceUpdateAll);\n};//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvcmVxdWVzdEZvcmNlVXBkYXRlQWxsLmpzPzhlMDQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVlcEZvcmNlVXBkYXRlID0gcmVxdWlyZSgnLi9kZWVwRm9yY2VVcGRhdGUnKTtcblxudmFyIGlzUmVxdWVzdFBlbmRpbmcgPSBmYWxzZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZXF1ZXN0Rm9yY2VVcGRhdGVBbGwoZ2V0Um9vdEluc3RhbmNlcywgUmVhY3QpIHtcbiAgaWYgKGlzUmVxdWVzdFBlbmRpbmcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRm9yY2VzIGRlZXAgcmUtcmVuZGVyIG9mIGFsbCBtb3VudGVkIFJlYWN0IGNvbXBvbmVudHMuXG4gICAqIEhhdCdzIG9mZiB0byBPbWFyIFNrYWxsaSAoQENoZXRhbmUpIGZvciBzdWdnZXN0aW5nIHRoaXMgYXBwcm9hY2g6XG4gICAqIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL0NoZXRhbmUvOWEyMzBhOWZkY2RjYTIxYTRlMjlcbiAgICovXG4gIGZ1bmN0aW9uIGZvcmNlVXBkYXRlQWxsKCkge1xuICAgIGlzUmVxdWVzdFBlbmRpbmcgPSBmYWxzZTtcblxuICAgIHZhciByb290SW5zdGFuY2VzID0gZ2V0Um9vdEluc3RhbmNlcygpLFxuICAgICAgICByb290SW5zdGFuY2U7XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gcm9vdEluc3RhbmNlcykge1xuICAgICAgaWYgKHJvb3RJbnN0YW5jZXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICByb290SW5zdGFuY2UgPSByb290SW5zdGFuY2VzW2tleV07XG5cbiAgICAgICAgLy8gYHx8IHJvb3RJbnN0YW5jZWAgZm9yIFJlYWN0IDAuMTIgYW5kIGVhcmxpZXJcbiAgICAgICAgcm9vdEluc3RhbmNlID0gcm9vdEluc3RhbmNlLl9yZWFjdEludGVybmFsSW5zdGFuY2UgfHwgcm9vdEluc3RhbmNlO1xuICAgICAgICBkZWVwRm9yY2VVcGRhdGUocm9vdEluc3RhbmNlLCBSZWFjdCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgc2V0VGltZW91dChmb3JjZVVwZGF0ZUFsbCk7XG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvcmVxdWVzdEZvcmNlVXBkYXRlQWxsLmpzXG4gKiogbW9kdWxlIGlkID0gMTQ1XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxNDUuanMifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nfunction traverseRenderedChildren(internalInstance, callback, argument) {\n  callback(internalInstance, argument);\n\n  if (internalInstance._renderedComponent) {\n    traverseRenderedChildren(\n      internalInstance._renderedComponent,\n      callback,\n      argument\n    );\n  } else {\n    for (var key in internalInstance._renderedChildren) {\n      traverseRenderedChildren(\n        internalInstance._renderedChildren[key],\n        callback,\n        argument\n      );\n    }\n  }\n}\n\nmodule.exports = traverseRenderedChildren;\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvdHJhdmVyc2VSZW5kZXJlZENoaWxkcmVuLmpzPzkwZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiB0cmF2ZXJzZVJlbmRlcmVkQ2hpbGRyZW4oaW50ZXJuYWxJbnN0YW5jZSwgY2FsbGJhY2ssIGFyZ3VtZW50KSB7XG4gIGNhbGxiYWNrKGludGVybmFsSW5zdGFuY2UsIGFyZ3VtZW50KTtcblxuICBpZiAoaW50ZXJuYWxJbnN0YW5jZS5fcmVuZGVyZWRDb21wb25lbnQpIHtcbiAgICB0cmF2ZXJzZVJlbmRlcmVkQ2hpbGRyZW4oXG4gICAgICBpbnRlcm5hbEluc3RhbmNlLl9yZW5kZXJlZENvbXBvbmVudCxcbiAgICAgIGNhbGxiYWNrLFxuICAgICAgYXJndW1lbnRcbiAgICApO1xuICB9IGVsc2Uge1xuICAgIGZvciAodmFyIGtleSBpbiBpbnRlcm5hbEluc3RhbmNlLl9yZW5kZXJlZENoaWxkcmVuKSB7XG4gICAgICB0cmF2ZXJzZVJlbmRlcmVkQ2hpbGRyZW4oXG4gICAgICAgIGludGVybmFsSW5zdGFuY2UuX3JlbmRlcmVkQ2hpbGRyZW5ba2V5XSxcbiAgICAgICAgY2FsbGJhY2ssXG4gICAgICAgIGFyZ3VtZW50XG4gICAgICApO1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHRyYXZlcnNlUmVuZGVyZWRDaGlsZHJlbjtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3JlYWN0LWhvdC1sb2FkZXIvfi9yZWFjdC1ob3QtYXBpL21vZHVsZXMvdHJhdmVyc2VSZW5kZXJlZENoaWxkcmVuLmpzXG4gKiogbW9kdWxlIGlkID0gMTQ2XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIxNDYuanMifQ==")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(47);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(47, function() {\n		var newContent = __webpack_require__(47);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcz9lYTA1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQXNHO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzc1wiKTtcblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzc1xuICoqIG1vZHVsZSBpZCA9IDIyMlxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMjIyLmpzIn0=")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(48);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(48, function() {\n		var newContent = __webpack_require__(48);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL2FwcC5jc3M/ZTIyYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFzRztBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvYXBwLmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvYXBwLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL2FwcC5jc3NcIik7XG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL3N0eWxlcy9hcHAuY3NzXG4gKiogbW9kdWxlIGlkID0gMjIzXG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIyMjMuanMifQ==")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(49);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(49, function() {\n		var newContent = __webpack_require__(49);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uY3NzP2UzZDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBc0c7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL21haW4uY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvc3JjL3N0eWxlcy9tYWluLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL21haW4uY3NzXCIpO1xuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9zdHlsZXMvbWFpbi5jc3NcbiAqKiBtb2R1bGUgaWQgPSAyMjRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjIyNC5qcyJ9")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(50);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(50, function() {\n		var newContent = __webpack_require__(50);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3BhZC5jc3M/NDc4ZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFzRztBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvcGFkLmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvcGFkLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3BhZC5jc3NcIik7XG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL3N0eWxlcy9wYWQuY3NzXG4gKiogbW9kdWxlIGlkID0gMjI1XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIyMjUuanMifQ==")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(51);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(51, function() {\n		var newContent = __webpack_require__(51);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3BhZHMuY3NzP2JhNjQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBc0c7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3BhZHMuY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvc3JjL3N0eWxlcy9wYWRzLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3BhZHMuY3NzXCIpO1xuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9zdHlsZXMvcGFkcy5jc3NcbiAqKiBtb2R1bGUgaWQgPSAyMjZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjIyNi5qcyJ9")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(52);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(52, function() {\n		var newContent = __webpack_require__(52);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NpZGViYXIuY3NzPzBmZDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBc0c7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxnQ0FBZ0MsVUFBVSxFQUFFO0FBQzVDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gc3R5bGUtbG9hZGVyOiBBZGRzIHNvbWUgY3NzIHRvIHRoZSBET00gYnkgYWRkaW5nIGEgPHN0eWxlPiB0YWdcblxuLy8gbG9hZCB0aGUgc3R5bGVzXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3NpZGViYXIuY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4vLyBhZGQgdGhlIHN0eWxlcyB0byB0aGUgRE9NXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCB7fSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG5cdC8vIFdoZW4gdGhlIHN0eWxlcyBjaGFuZ2UsIHVwZGF0ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvc3JjL3N0eWxlcy9zaWRlYmFyLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3NpZGViYXIuY3NzXCIpO1xuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cdC8vIFdoZW4gdGhlIG1vZHVsZSBpcyBkaXNwb3NlZCwgcmVtb3ZlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9zdHlsZXMvc2lkZWJhci5jc3NcbiAqKiBtb2R1bGUgaWQgPSAyMjdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjIyNy5qcyJ9")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(55);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(55, function() {\n		var newContent = __webpack_require__(55);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3NsaWRlcy5jc3M/MWQ1NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFzRztBQUN0RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBLGdDQUFnQyxVQUFVLEVBQUU7QUFDNUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzdHlsZS1sb2FkZXI6IEFkZHMgc29tZSBjc3MgdG8gdGhlIERPTSBieSBhZGRpbmcgYSA8c3R5bGU+IHRhZ1xuXG4vLyBsb2FkIHRoZSBzdHlsZXNcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvc2xpZGVzLmNzc1wiKTtcbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuLy8gYWRkIHRoZSBzdHlsZXMgdG8gdGhlIERPTVxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9hZGRTdHlsZXMuanNcIikoY29udGVudCwge30pO1xuLy8gSG90IE1vZHVsZSBSZXBsYWNlbWVudFxuaWYobW9kdWxlLmhvdCkge1xuXHQvLyBXaGVuIHRoZSBzdHlsZXMgY2hhbmdlLCB1cGRhdGUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL3NyYy9zdHlsZXMvc2xpZGVzLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3NsaWRlcy5jc3NcIik7XG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblx0Ly8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL3N0eWxlcy9zbGlkZXMuY3NzXG4gKiogbW9kdWxlIGlkID0gMjI4XG4gKiogbW9kdWxlIGNodW5rcyA9IDFcbiAqKi8iXSwic291cmNlUm9vdCI6IiIsImZpbGUiOiIyMjguanMifQ==")},function(module,exports,__webpack_require__){eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(56);\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(17)(content, {});\n// Hot Module Replacement\nif(true) {\n	// When the styles change, update the <style> tags\n	module.hot.accept(56, function() {\n		var newContent = __webpack_require__(56);\n		if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n		update(newContent);\n	});\n	// When the module is disposed, remove the <style> tags\n	module.hot.dispose(function() { update(); });\n}//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL3RpbWVsaW5lLmNzcz80MzkwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQXNHO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsZ0NBQWdDLFVBQVUsRUFBRTtBQUM1QyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanMhL2hvbWUveWVlaGFhL0RvY3VtZW50cy9tcGMvc3JjL3N0eWxlcy90aW1lbGluZS5jc3NcIik7XG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIHt9KTtcbi8vIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnRcbmlmKG1vZHVsZS5ob3QpIHtcblx0Ly8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3Ncblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3RpbWVsaW5lLmNzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS9ob21lL3llZWhhYS9Eb2N1bWVudHMvbXBjL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcyEvaG9tZS95ZWVoYWEvRG9jdW1lbnRzL21wYy9zcmMvc3R5bGVzL3RpbWVsaW5lLmNzc1wiKTtcblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXHQvLyBXaGVuIHRoZSBtb2R1bGUgaXMgZGlzcG9zZWQsIHJlbW92ZSB0aGUgPHN0eWxlPiB0YWdzXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvc3R5bGVzL3RpbWVsaW5lLmNzc1xuICoqIG1vZHVsZSBpZCA9IDIyOVxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMjI5LmpzIn0=");

},,,,function(module,exports,__webpack_require__){eval('module.exports = "data:application/font-woff;base64,"//@ sourceMappingURL=data:application/json;base64,');

},function(module,exports,__webpack_require__){eval('module.exports = "data:application/font-woff;base64,"//@ sourceMappingURL=data:application/json;base64,');

},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(__resourceQuery) {var io = __webpack_require__(236);\r\nvar scriptElements = document.getElementsByTagName("script");\r\nio = io.connect(true ?\r\n	__resourceQuery.substr(1) :\r\n	scriptElements[scriptElements.length-1].getAttribute("src").replace(/\\/[^\\/]+$/, "")\r\n);\r\n\r\nvar hot = false;\r\nvar initial = true;\r\nvar currentHash = "";\r\n\r\nio.on("hot", function() {\r\n	hot = true;\r\n	console.log("[WDS] Hot Module Replacement enabled.");\r\n});\r\n\r\nio.on("invalid", function() {\r\n	console.log("[WDS] App updated. Recompiling...");\r\n});\r\n\r\nio.on("hash", function(hash) {\r\n	currentHash = hash;\r\n});\r\n\r\nio.on("ok", function() {\r\n	if(initial) return initial = false;\r\n	reloadApp();\r\n});\r\n\r\nio.on("warnings", function(warnings) {\r\n	console.log("[WDS] Warnings while compiling.");\r\n	for(var i = 0; i < warnings.length; i++)\r\n		console.warn(warnings[i]);\r\n	if(initial) return initial = false;\r\n	reloadApp();\r\n});\r\n\r\nio.on("errors", function(errors) {\r\n	console.log("[WDS] Errors while compiling.");\r\n	for(var i = 0; i < errors.length; i++)\r\n		console.error(errors[i]);\r\n	if(initial) return initial = false;\r\n	reloadApp();\r\n});\r\n\r\nio.on("proxy-error", function(errors) {\r\n	console.log("[WDS] Proxy error.");\r\n	for(var i = 0; i < errors.length; i++)\r\n		console.error(errors[i]);\r\n	if(initial) return initial = false;\r\n	reloadApp();\r\n});\r\n\r\nio.on("disconnect", function() {\r\n	console.error("[WDS] Disconnected!");\r\n});\r\n\r\nfunction reloadApp() {\r\n	if(hot) {\r\n		console.log("[WDS] App hot update...");\r\n		window.postMessage("webpackHotUpdate" + currentHash, "*");\r\n	} else {\r\n		console.log("[WDS] App updated. Reloading...");\r\n		window.location.reload();\r\n	}\r\n}\n/* WEBPACK VAR INJECTION */}.call(exports, "?http://localhost:8080"))//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50P2E3MTUiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS1kZXYtc2VydmVyL2NsaWVudD9jZDE3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHVEQ0FBLFNEQUEsbUJDQUEsQ0RBQSxHQ0FBO0FBQ0E7QUFDQSxnQkRBQSxJQ0FBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQSxDQUFDOztBQUVEO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLGVBQWUscUJBQXFCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLGVBQWUsbUJBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLGVBQWUsbUJBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsQyIsInNvdXJjZXNDb250ZW50IjpbIm51bGxcblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAod2VicGFjayktZGV2LXNlcnZlci9jbGllbnQ/aHR0cDovbG9jYWxob3N0OjgwODBcbiAqKi8iLCJ2YXIgaW8gPSByZXF1aXJlKFwiLi93ZWJfbW9kdWxlcy9zb2NrZXQuaW9cIik7XHJcbnZhciBzY3JpcHRFbGVtZW50cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xyXG5pbyA9IGlvLmNvbm5lY3QodHlwZW9mIF9fcmVzb3VyY2VRdWVyeSA9PT0gXCJzdHJpbmdcIiAmJiBfX3Jlc291cmNlUXVlcnkgP1xyXG5cdF9fcmVzb3VyY2VRdWVyeS5zdWJzdHIoMSkgOlxyXG5cdHNjcmlwdEVsZW1lbnRzW3NjcmlwdEVsZW1lbnRzLmxlbmd0aC0xXS5nZXRBdHRyaWJ1dGUoXCJzcmNcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIlwiKVxyXG4pO1xyXG5cclxudmFyIGhvdCA9IGZhbHNlO1xyXG52YXIgaW5pdGlhbCA9IHRydWU7XHJcbnZhciBjdXJyZW50SGFzaCA9IFwiXCI7XHJcblxyXG5pby5vbihcImhvdFwiLCBmdW5jdGlvbigpIHtcclxuXHRob3QgPSB0cnVlO1xyXG5cdGNvbnNvbGUubG9nKFwiW1dEU10gSG90IE1vZHVsZSBSZXBsYWNlbWVudCBlbmFibGVkLlwiKTtcclxufSk7XHJcblxyXG5pby5vbihcImludmFsaWRcIiwgZnVuY3Rpb24oKSB7XHJcblx0Y29uc29sZS5sb2coXCJbV0RTXSBBcHAgdXBkYXRlZC4gUmVjb21waWxpbmcuLi5cIik7XHJcbn0pO1xyXG5cclxuaW8ub24oXCJoYXNoXCIsIGZ1bmN0aW9uKGhhc2gpIHtcclxuXHRjdXJyZW50SGFzaCA9IGhhc2g7XHJcbn0pO1xyXG5cclxuaW8ub24oXCJva1wiLCBmdW5jdGlvbigpIHtcclxuXHRpZihpbml0aWFsKSByZXR1cm4gaW5pdGlhbCA9IGZhbHNlO1xyXG5cdHJlbG9hZEFwcCgpO1xyXG59KTtcclxuXHJcbmlvLm9uKFwid2FybmluZ3NcIiwgZnVuY3Rpb24od2FybmluZ3MpIHtcclxuXHRjb25zb2xlLmxvZyhcIltXRFNdIFdhcm5pbmdzIHdoaWxlIGNvbXBpbGluZy5cIik7XHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IHdhcm5pbmdzLmxlbmd0aDsgaSsrKVxyXG5cdFx0Y29uc29sZS53YXJuKHdhcm5pbmdzW2ldKTtcclxuXHRpZihpbml0aWFsKSByZXR1cm4gaW5pdGlhbCA9IGZhbHNlO1xyXG5cdHJlbG9hZEFwcCgpO1xyXG59KTtcclxuXHJcbmlvLm9uKFwiZXJyb3JzXCIsIGZ1bmN0aW9uKGVycm9ycykge1xyXG5cdGNvbnNvbGUubG9nKFwiW1dEU10gRXJyb3JzIHdoaWxlIGNvbXBpbGluZy5cIik7XHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IGVycm9ycy5sZW5ndGg7IGkrKylcclxuXHRcdGNvbnNvbGUuZXJyb3IoZXJyb3JzW2ldKTtcclxuXHRpZihpbml0aWFsKSByZXR1cm4gaW5pdGlhbCA9IGZhbHNlO1xyXG5cdHJlbG9hZEFwcCgpO1xyXG59KTtcclxuXHJcbmlvLm9uKFwicHJveHktZXJyb3JcIiwgZnVuY3Rpb24oZXJyb3JzKSB7XHJcblx0Y29uc29sZS5sb2coXCJbV0RTXSBQcm94eSBlcnJvci5cIik7XHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IGVycm9ycy5sZW5ndGg7IGkrKylcclxuXHRcdGNvbnNvbGUuZXJyb3IoZXJyb3JzW2ldKTtcclxuXHRpZihpbml0aWFsKSByZXR1cm4gaW5pdGlhbCA9IGZhbHNlO1xyXG5cdHJlbG9hZEFwcCgpO1xyXG59KTtcclxuXHJcbmlvLm9uKFwiZGlzY29ubmVjdFwiLCBmdW5jdGlvbigpIHtcclxuXHRjb25zb2xlLmVycm9yKFwiW1dEU10gRGlzY29ubmVjdGVkIVwiKTtcclxufSk7XHJcblxyXG5mdW5jdGlvbiByZWxvYWRBcHAoKSB7XHJcblx0aWYoaG90KSB7XHJcblx0XHRjb25zb2xlLmxvZyhcIltXRFNdIEFwcCBob3QgdXBkYXRlLi4uXCIpO1xyXG5cdFx0d2luZG93LnBvc3RNZXNzYWdlKFwid2VicGFja0hvdFVwZGF0ZVwiICsgY3VycmVudEhhc2gsIFwiKlwiKTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0Y29uc29sZS5sb2coXCJbV0RTXSBBcHAgdXBkYXRlZC4gUmVsb2FkaW5nLi4uXCIpO1xyXG5cdFx0d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cdH1cclxufVxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50P2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MFxuICoqIG1vZHVsZSBpZCA9IDIzNVxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMjM1LmpzIn0=')},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(237);\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50L3dlYl9tb2R1bGVzL3NvY2tldC5pby9pbmRleC5qcz9mYWVhIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi9zb2NrZXQuaW9cIik7XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spLWRldi1zZXJ2ZXIvY2xpZW50L3dlYl9tb2R1bGVzL3NvY2tldC5pby9pbmRleC5qc1xuICoqIG1vZHVsZSBpZCA9IDIzNlxuICoqIG1vZHVsZSBjaHVua3MgPSAxXG4gKiovIl0sInNvdXJjZVJvb3QiOiIiLCJmaWxlIjoiMjM2LmpzIn0=")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(module) {/*! Socket.IO.js build:0.9.10, development. Copyright(c) 2011 LearnBoost <dev@learnboost.com> MIT Licensed */\r\n\r\nvar io = (false ? {} : module.exports);\r\n(function() {\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * IO namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var io = exports;\r\n\r\n  /**\r\n   * Socket.IO version\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.version = '0.9.10';\r\n\r\n  /**\r\n   * Protocol implemented.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.protocol = 1;\r\n\r\n  /**\r\n   * Available transports, these will be populated with the available transports\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  io.transports = [];\r\n\r\n  /**\r\n   * Keep track of jsonp callbacks.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.j = [];\r\n\r\n  /**\r\n   * Keep track of our io.Sockets\r\n   *\r\n   * @api private\r\n   */\r\n  io.sockets = {};\r\n\r\n\r\n  /**\r\n   * Manages connections to hosts.\r\n   *\r\n   * @param {String} uri\r\n   * @Param {Boolean} force creation of new socket (defaults to false)\r\n   * @api public\r\n   */\r\n\r\n  io.connect = function (host, details) {\r\n    var uri = io.util.parseUri(host)\r\n      , uuri\r\n      , socket;\r\n\r\n    if (global && global.location) {\r\n      uri.protocol = uri.protocol || global.location.protocol.slice(0, -1);\r\n      uri.host = uri.host || (global.document\r\n        ? global.document.domain : global.location.hostname);\r\n      uri.port = uri.port || global.location.port;\r\n    }\r\n\r\n    uuri = io.util.uniqueUri(uri);\r\n\r\n    var options = {\r\n        host: uri.host\r\n      , secure: 'https' == uri.protocol\r\n      , port: uri.port || ('https' == uri.protocol ? 443 : 80)\r\n      , query: uri.query || ''\r\n    };\r\n\r\n    io.util.merge(options, details);\r\n\r\n    if (options['force new connection'] || !io.sockets[uuri]) {\r\n      socket = new io.Socket(options);\r\n    }\r\n\r\n    if (!options['force new connection'] && socket) {\r\n      io.sockets[uuri] = socket;\r\n    }\r\n\r\n    socket = socket || io.sockets[uuri];\r\n\r\n    // if path is different from '' or /\r\n    return socket.of(uri.path.length > 1 ? uri.path : '');\r\n  };\r\n\r\n})(true ? module.exports : (this.io = {}), this);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, global) {\r\n\r\n  /**\r\n   * Utilities namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var util = exports.util = {};\r\n\r\n  /**\r\n   * Parses an URI\r\n   *\r\n   * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n   * @api public\r\n   */\r\n\r\n  var re = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\n  var parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password',\r\n               'host', 'port', 'relative', 'path', 'directory', 'file', 'query',\r\n               'anchor'];\r\n\r\n  util.parseUri = function (str) {\r\n    var m = re.exec(str || '')\r\n      , uri = {}\r\n      , i = 14;\r\n\r\n    while (i--) {\r\n      uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    return uri;\r\n  };\r\n\r\n  /**\r\n   * Produces a unique url that identifies a Socket.IO connection.\r\n   *\r\n   * @param {Object} uri\r\n   * @api public\r\n   */\r\n\r\n  util.uniqueUri = function (uri) {\r\n    var protocol = uri.protocol\r\n      , host = uri.host\r\n      , port = uri.port;\r\n\r\n    if ('document' in global) {\r\n      host = host || document.domain;\r\n      port = port || (protocol == 'https'\r\n        && document.location.protocol !== 'https:' ? 443 : document.location.port);\r\n    } else {\r\n      host = host || 'localhost';\r\n\r\n      if (!port && protocol == 'https') {\r\n        port = 443;\r\n      }\r\n    }\r\n\r\n    return (protocol || 'http') + '://' + host + ':' + (port || 80);\r\n  };\r\n\r\n  /**\r\n   * Mergest 2 query strings in to once unique query string\r\n   *\r\n   * @param {String} base\r\n   * @param {String} addition\r\n   * @api public\r\n   */\r\n\r\n  util.query = function (base, addition) {\r\n    var query = util.chunkQuery(base || '')\r\n      , components = [];\r\n\r\n    util.merge(query, util.chunkQuery(addition || ''));\r\n    for (var part in query) {\r\n      if (query.hasOwnProperty(part)) {\r\n        components.push(part + '=' + query[part]);\r\n      }\r\n    }\r\n\r\n    return components.length ? '?' + components.join('&') : '';\r\n  };\r\n\r\n  /**\r\n   * Transforms a querystring in to an object\r\n   *\r\n   * @param {String} qs\r\n   * @api public\r\n   */\r\n\r\n  util.chunkQuery = function (qs) {\r\n    var query = {}\r\n      , params = qs.split('&')\r\n      , i = 0\r\n      , l = params.length\r\n      , kv;\r\n\r\n    for (; i < l; ++i) {\r\n      kv = params[i].split('=');\r\n      if (kv[0]) {\r\n        query[kv[0]] = kv[1];\r\n      }\r\n    }\r\n\r\n    return query;\r\n  };\r\n\r\n  /**\r\n   * Executes the given function when the page is loaded.\r\n   *\r\n   *     io.util.load(function () { console.log('page loaded'); });\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  var pageLoaded = false;\r\n\r\n  util.load = function (fn) {\r\n    if ('document' in global && document.readyState === 'complete' || pageLoaded) {\r\n      return fn();\r\n    }\r\n\r\n    util.on(global, 'load', fn, false);\r\n  };\r\n\r\n  /**\r\n   * Adds an event.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.on = function (element, event, fn, capture) {\r\n    if (element.attachEvent) {\r\n      element.attachEvent('on' + event, fn);\r\n    } else if (element.addEventListener) {\r\n      element.addEventListener(event, fn, capture);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Generates the correct `XMLHttpRequest` for regular and cross domain requests.\r\n   *\r\n   * @param {Boolean} [xdomain] Create a request that can be used cross domain.\r\n   * @returns {XMLHttpRequest|false} If we can create a XMLHttpRequest.\r\n   * @api private\r\n   */\r\n\r\n  util.request = function (xdomain) {\r\n\r\n    if (xdomain && 'undefined' != typeof XDomainRequest) {\r\n      return new XDomainRequest();\r\n    }\r\n\r\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || util.ua.hasCORS)) {\r\n      return new XMLHttpRequest();\r\n    }\r\n\r\n    if (!xdomain) {\r\n      try {\r\n        return new window[(['Active'].concat('Object').join('X'))]('Microsoft.XMLHTTP');\r\n      } catch(e) { }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * XHR based transport constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  /**\r\n   * Change the internal pageLoaded value.\r\n   */\r\n\r\n  if ('undefined' != typeof window) {\r\n    util.load(function () {\r\n      pageLoaded = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Defers a function to ensure a spinner is not displayed by the browser\r\n   *\r\n   * @param {Function} fn\r\n   * @api public\r\n   */\r\n\r\n  util.defer = function (fn) {\r\n    if (!util.ua.webkit || 'undefined' != typeof importScripts) {\r\n      return fn();\r\n    }\r\n\r\n    util.load(function () {\r\n      setTimeout(fn, 100);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Merges two objects.\r\n   *\r\n   * @api public\r\n   */\r\n  \r\n  util.merge = function merge (target, additional, deep, lastseen) {\r\n    var seen = lastseen || []\r\n      , depth = typeof deep == 'undefined' ? 2 : deep\r\n      , prop;\r\n\r\n    for (prop in additional) {\r\n      if (additional.hasOwnProperty(prop) && util.indexOf(seen, prop) < 0) {\r\n        if (typeof target[prop] !== 'object' || !depth) {\r\n          target[prop] = additional[prop];\r\n          seen.push(additional[prop]);\r\n        } else {\r\n          util.merge(target[prop], additional[prop], depth - 1, seen);\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  /**\r\n   * Merges prototypes from objects\r\n   *\r\n   * @api public\r\n   */\r\n  \r\n  util.mixin = function (ctor, ctor2) {\r\n    util.merge(ctor.prototype, ctor2.prototype);\r\n  };\r\n\r\n  /**\r\n   * Shortcut for prototypical and static inheritance.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  util.inherit = function (ctor, ctor2) {\r\n    function f() {};\r\n    f.prototype = ctor2.prototype;\r\n    ctor.prototype = new f;\r\n  };\r\n\r\n  /**\r\n   * Checks if the given object is an Array.\r\n   *\r\n   *     io.util.isArray([]); // true\r\n   *     io.util.isArray({}); // false\r\n   *\r\n   * @param Object obj\r\n   * @api public\r\n   */\r\n\r\n  util.isArray = Array.isArray || function (obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Array]';\r\n  };\r\n\r\n  /**\r\n   * Intersects values of two arrays into a third\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.intersect = function (arr, arr2) {\r\n    var ret = []\r\n      , longest = arr.length > arr2.length ? arr : arr2\r\n      , shortest = arr.length > arr2.length ? arr2 : arr;\r\n\r\n    for (var i = 0, l = shortest.length; i < l; i++) {\r\n      if (~util.indexOf(longest, shortest[i]))\r\n        ret.push(shortest[i]);\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  /**\r\n   * Array indexOf compatibility.\r\n   *\r\n   * @see bit.ly/a5Dxa2\r\n   * @api public\r\n   */\r\n\r\n  util.indexOf = function (arr, o, i) {\r\n    \r\n    for (var j = arr.length, i = i < 0 ? i + j < 0 ? 0 : i + j : i || 0; \r\n         i < j && arr[i] !== o; i++) {}\r\n\r\n    return j <= i ? -1 : i;\r\n  };\r\n\r\n  /**\r\n   * Converts enumerables to array.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.toArray = function (enu) {\r\n    var arr = [];\r\n\r\n    for (var i = 0, l = enu.length; i < l; i++)\r\n      arr.push(enu[i]);\r\n\r\n    return arr;\r\n  };\r\n\r\n  /**\r\n   * UA / engines detection namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  util.ua = {};\r\n\r\n  /**\r\n   * Whether the UA supports CORS for XHR.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.hasCORS = 'undefined' != typeof XMLHttpRequest && (function () {\r\n    try {\r\n      var a = new XMLHttpRequest();\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n\r\n    return a.withCredentials != undefined;\r\n  })();\r\n\r\n  /**\r\n   * Detect webkit.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.webkit = 'undefined' != typeof navigator\r\n    && /webkit/i.test(navigator.userAgent);\r\n\r\n   /**\r\n   * Detect iPad/iPhone/iPod.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  util.ua.iDevice = 'undefined' != typeof navigator\r\n      && /iPad|iPhone|iPod/i.test(navigator.userAgent);\r\n\r\n})('undefined' != typeof io ? io : module.exports, this);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.EventEmitter = EventEmitter;\r\n\r\n  /**\r\n   * Event emitter constructor.\r\n   *\r\n   * @api public.\r\n   */\r\n\r\n  function EventEmitter () {};\r\n\r\n  /**\r\n   * Adds a listener\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.on = function (name, fn) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = fn;\r\n    } else if (io.util.isArray(this.$events[name])) {\r\n      this.$events[name].push(fn);\r\n    } else {\r\n      this.$events[name] = [this.$events[name], fn];\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n  /**\r\n   * Adds a volatile listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.once = function (name, fn) {\r\n    var self = this;\r\n\r\n    function on () {\r\n      self.removeListener(name, on);\r\n      fn.apply(this, arguments);\r\n    };\r\n\r\n    on.listener = fn;\r\n    this.on(name, on);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes a listener.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeListener = function (name, fn) {\r\n    if (this.$events && this.$events[name]) {\r\n      var list = this.$events[name];\r\n\r\n      if (io.util.isArray(list)) {\r\n        var pos = -1;\r\n\r\n        for (var i = 0, l = list.length; i < l; i++) {\r\n          if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\r\n            pos = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (pos < 0) {\r\n          return this;\r\n        }\r\n\r\n        list.splice(pos, 1);\r\n\r\n        if (!list.length) {\r\n          delete this.$events[name];\r\n        }\r\n      } else if (list === fn || (list.listener && list.listener === fn)) {\r\n        delete this.$events[name];\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Removes all listeners for an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.removeAllListeners = function (name) {\r\n    if (name === undefined) {\r\n      this.$events = {};\r\n      return this;\r\n    }\r\n\r\n    if (this.$events && this.$events[name]) {\r\n      this.$events[name] = null;\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Gets all listeners for a certain event.\r\n   *\r\n   * @api publci\r\n   */\r\n\r\n  EventEmitter.prototype.listeners = function (name) {\r\n    if (!this.$events) {\r\n      this.$events = {};\r\n    }\r\n\r\n    if (!this.$events[name]) {\r\n      this.$events[name] = [];\r\n    }\r\n\r\n    if (!io.util.isArray(this.$events[name])) {\r\n      this.$events[name] = [this.$events[name]];\r\n    }\r\n\r\n    return this.$events[name];\r\n  };\r\n\r\n  /**\r\n   * Emits an event.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  EventEmitter.prototype.emit = function (name) {\r\n    if (!this.$events) {\r\n      return false;\r\n    }\r\n\r\n    var handler = this.$events[name];\r\n\r\n    if (!handler) {\r\n      return false;\r\n    }\r\n\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n    if ('function' == typeof handler) {\r\n      handler.apply(this, args);\r\n    } else if (io.util.isArray(handler)) {\r\n      var listeners = handler.slice();\r\n\r\n      for (var i = 0, l = listeners.length; i < l; i++) {\r\n        listeners[i].apply(this, args);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Based on JSON2 (http://www.JSON.org/js.html).\r\n */\r\n\r\n(function (exports, nativeJSON) {\r\n  \"use strict\";\r\n\r\n  // use native JSON if it's available\r\n  if (nativeJSON && nativeJSON.parse){\r\n    return exports.JSON = {\r\n      parse: nativeJSON.parse\r\n    , stringify: nativeJSON.stringify\r\n    }\r\n  }\r\n\r\n  var JSON = exports.JSON = {};\r\n\r\n  function f(n) {\r\n      // Format integers to have at least two digits.\r\n      return n < 10 ? '0' + n : n;\r\n  }\r\n\r\n  function date(d, key) {\r\n    return isFinite(d.valueOf()) ?\r\n        d.getUTCFullYear()     + '-' +\r\n        f(d.getUTCMonth() + 1) + '-' +\r\n        f(d.getUTCDate())      + 'T' +\r\n        f(d.getUTCHours())     + ':' +\r\n        f(d.getUTCMinutes())   + ':' +\r\n        f(d.getUTCSeconds())   + 'Z' : null;\r\n  };\r\n\r\n  var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n      gap,\r\n      indent,\r\n      meta = {    // table of character substitutions\r\n          '\\b': '\\\\b',\r\n          '\\t': '\\\\t',\r\n          '\\n': '\\\\n',\r\n          '\\f': '\\\\f',\r\n          '\\r': '\\\\r',\r\n          '\"' : '\\\\\"',\r\n          '\\\\': '\\\\\\\\'\r\n      },\r\n      rep;\r\n\r\n\r\n  function quote(string) {\r\n\r\n// If the string contains no control characters, no quote characters, and no\r\n// backslash characters, then we can safely slap some quotes around it.\r\n// Otherwise we must also replace the offending characters with safe escape\r\n// sequences.\r\n\r\n      escapable.lastIndex = 0;\r\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\r\n          var c = meta[a];\r\n          return typeof c === 'string' ? c :\r\n              '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n      }) + '\"' : '\"' + string + '\"';\r\n  }\r\n\r\n\r\n  function str(key, holder) {\r\n\r\n// Produce a string from holder[key].\r\n\r\n      var i,          // The loop counter.\r\n          k,          // The member key.\r\n          v,          // The member value.\r\n          length,\r\n          mind = gap,\r\n          partial,\r\n          value = holder[key];\r\n\r\n// If the value has a toJSON method, call it to obtain a replacement value.\r\n\r\n      if (value instanceof Date) {\r\n          value = date(key);\r\n      }\r\n\r\n// If we were called with a replacer function, then call the replacer to\r\n// obtain a replacement value.\r\n\r\n      if (typeof rep === 'function') {\r\n          value = rep.call(holder, key, value);\r\n      }\r\n\r\n// What happens next depends on the value's type.\r\n\r\n      switch (typeof value) {\r\n      case 'string':\r\n          return quote(value);\r\n\r\n      case 'number':\r\n\r\n// JSON numbers must be finite. Encode non-finite numbers as null.\r\n\r\n          return isFinite(value) ? String(value) : 'null';\r\n\r\n      case 'boolean':\r\n      case 'null':\r\n\r\n// If the value is a boolean or null, convert it to a string. Note:\r\n// typeof null does not produce 'null'. The case is included here in\r\n// the remote chance that this gets fixed someday.\r\n\r\n          return String(value);\r\n\r\n// If the type is 'object', we might be dealing with an object or an array or\r\n// null.\r\n\r\n      case 'object':\r\n\r\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\r\n// so watch out for that case.\r\n\r\n          if (!value) {\r\n              return 'null';\r\n          }\r\n\r\n// Make an array to hold the partial results of stringifying this object value.\r\n\r\n          gap += indent;\r\n          partial = [];\r\n\r\n// Is the value an array?\r\n\r\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\r\n\r\n// The value is an array. Stringify every element. Use null as a placeholder\r\n// for non-JSON values.\r\n\r\n              length = value.length;\r\n              for (i = 0; i < length; i += 1) {\r\n                  partial[i] = str(i, value) || 'null';\r\n              }\r\n\r\n// Join all of the elements together, separated with commas, and wrap them in\r\n// brackets.\r\n\r\n              v = partial.length === 0 ? '[]' : gap ?\r\n                  '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\r\n                  '[' + partial.join(',') + ']';\r\n              gap = mind;\r\n              return v;\r\n          }\r\n\r\n// If the replacer is an array, use it to select the members to be stringified.\r\n\r\n          if (rep && typeof rep === 'object') {\r\n              length = rep.length;\r\n              for (i = 0; i < length; i += 1) {\r\n                  if (typeof rep[i] === 'string') {\r\n                      k = rep[i];\r\n                      v = str(k, value);\r\n                      if (v) {\r\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                      }\r\n                  }\r\n              }\r\n          } else {\r\n\r\n// Otherwise, iterate through all of the keys in the object.\r\n\r\n              for (k in value) {\r\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                      v = str(k, value);\r\n                      if (v) {\r\n                          partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n\r\n// Join all of the member texts together, separated with commas,\r\n// and wrap them in braces.\r\n\r\n          v = partial.length === 0 ? '{}' : gap ?\r\n              '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\r\n              '{' + partial.join(',') + '}';\r\n          gap = mind;\r\n          return v;\r\n      }\r\n  }\r\n\r\n// If the JSON object does not yet have a stringify method, give it one.\r\n\r\n  JSON.stringify = function (value, replacer, space) {\r\n\r\n// The stringify method takes a value and an optional replacer, and an optional\r\n// space parameter, and returns a JSON text. The replacer can be a function\r\n// that can replace values, or an array of strings that will select the keys.\r\n// A default replacer method can be provided. Use of the space parameter can\r\n// produce text that is more easily readable.\r\n\r\n      var i;\r\n      gap = '';\r\n      indent = '';\r\n\r\n// If the space parameter is a number, make an indent string containing that\r\n// many spaces.\r\n\r\n      if (typeof space === 'number') {\r\n          for (i = 0; i < space; i += 1) {\r\n              indent += ' ';\r\n          }\r\n\r\n// If the space parameter is a string, it will be used as the indent string.\r\n\r\n      } else if (typeof space === 'string') {\r\n          indent = space;\r\n      }\r\n\r\n// If there is a replacer, it must be a function or an array.\r\n// Otherwise, throw an error.\r\n\r\n      rep = replacer;\r\n      if (replacer && typeof replacer !== 'function' &&\r\n              (typeof replacer !== 'object' ||\r\n              typeof replacer.length !== 'number')) {\r\n          throw new Error('JSON.stringify');\r\n      }\r\n\r\n// Make a fake root object containing our value under the key of ''.\r\n// Return the result of stringifying the value.\r\n\r\n      return str('', {'': value});\r\n  };\r\n\r\n// If the JSON object does not yet have a parse method, give it one.\r\n\r\n  JSON.parse = function (text, reviver) {\r\n  // The parse method takes a text and an optional reviver function, and returns\r\n  // a JavaScript value if the text is a valid JSON text.\r\n\r\n      var j;\r\n\r\n      function walk(holder, key) {\r\n\r\n  // The walk method is used to recursively walk the resulting structure so\r\n  // that modifications can be made.\r\n\r\n          var k, v, value = holder[key];\r\n          if (value && typeof value === 'object') {\r\n              for (k in value) {\r\n                  if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                      v = walk(value, k);\r\n                      if (v !== undefined) {\r\n                          value[k] = v;\r\n                      } else {\r\n                          delete value[k];\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          return reviver.call(holder, key, value);\r\n      }\r\n\r\n\r\n  // Parsing happens in four stages. In the first stage, we replace certain\r\n  // Unicode characters with escape sequences. JavaScript handles many characters\r\n  // incorrectly, either silently deleting them, or treating them as line endings.\r\n\r\n      text = String(text);\r\n      cx.lastIndex = 0;\r\n      if (cx.test(text)) {\r\n          text = text.replace(cx, function (a) {\r\n              return '\\\\u' +\r\n                  ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n          });\r\n      }\r\n\r\n  // In the second stage, we run the text against regular expressions that look\r\n  // for non-JSON patterns. We are especially concerned with '()' and 'new'\r\n  // because they can cause invocation, and '=' because it can cause mutation.\r\n  // But just to be safe, we want to reject all unexpected forms.\r\n\r\n  // We split the second stage into 4 regexp operations in order to work around\r\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\r\n  // replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\r\n  // replace all simple value tokens with ']' characters. Third, we delete all\r\n  // open brackets that follow a colon or comma or that begin the text. Finally,\r\n  // we look to see that the remaining characters are only whitespace or ']' or\r\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\r\n\r\n      if (/^[\\],:{}\\s]*$/\r\n              .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\r\n                  .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\r\n                  .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\r\n\r\n  // In the third stage we use the eval function to compile the text into a\r\n  // JavaScript structure. The '{' operator is subject to a syntactic ambiguity\r\n  // in JavaScript: it can begin a block or an object literal. We wrap the text\r\n  // in parens to eliminate the ambiguity.\r\n\r\n          j = eval('(' + text + ')');\r\n\r\n  // In the optional fourth stage, we recursively walk the new structure, passing\r\n  // each name/value pair to a reviver function for possible transformation.\r\n\r\n          return typeof reviver === 'function' ?\r\n              walk({'': j}, '') : j;\r\n      }\r\n\r\n  // If the text is not JSON parseable, then a SyntaxError is thrown.\r\n\r\n      throw new SyntaxError('JSON.parse');\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , typeof JSON !== 'undefined' ? JSON : undefined\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Parser namespace.\r\n   *\r\n   * @namespace\r\n   */\r\n\r\n  var parser = exports.parser = {};\r\n\r\n  /**\r\n   * Packet types.\r\n   */\r\n\r\n  var packets = parser.packets = [\r\n      'disconnect'\r\n    , 'connect'\r\n    , 'heartbeat'\r\n    , 'message'\r\n    , 'json'\r\n    , 'event'\r\n    , 'ack'\r\n    , 'error'\r\n    , 'noop'\r\n  ];\r\n\r\n  /**\r\n   * Errors reasons.\r\n   */\r\n\r\n  var reasons = parser.reasons = [\r\n      'transport not supported'\r\n    , 'client not handshaken'\r\n    , 'unauthorized'\r\n  ];\r\n\r\n  /**\r\n   * Errors advice.\r\n   */\r\n\r\n  var advice = parser.advice = [\r\n      'reconnect'\r\n  ];\r\n\r\n  /**\r\n   * Shortcuts.\r\n   */\r\n\r\n  var JSON = io.JSON\r\n    , indexOf = io.util.indexOf;\r\n\r\n  /**\r\n   * Encodes a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePacket = function (packet) {\r\n    var type = indexOf(packets, packet.type)\r\n      , id = packet.id || ''\r\n      , endpoint = packet.endpoint || ''\r\n      , ack = packet.ack\r\n      , data = null;\r\n\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var reason = packet.reason ? indexOf(reasons, packet.reason) : ''\r\n          , adv = packet.advice ? indexOf(advice, packet.advice) : '';\r\n\r\n        if (reason !== '' || adv !== '')\r\n          data = reason + (adv !== '' ? ('+' + adv) : '');\r\n\r\n        break;\r\n\r\n      case 'message':\r\n        if (packet.data !== '')\r\n          data = packet.data;\r\n        break;\r\n\r\n      case 'event':\r\n        var ev = { name: packet.name };\r\n\r\n        if (packet.args && packet.args.length) {\r\n          ev.args = packet.args;\r\n        }\r\n\r\n        data = JSON.stringify(ev);\r\n        break;\r\n\r\n      case 'json':\r\n        data = JSON.stringify(packet.data);\r\n        break;\r\n\r\n      case 'connect':\r\n        if (packet.qs)\r\n          data = packet.qs;\r\n        break;\r\n\r\n      case 'ack':\r\n        data = packet.ackId\r\n          + (packet.args && packet.args.length\r\n              ? '+' + JSON.stringify(packet.args) : '');\r\n        break;\r\n    }\r\n\r\n    // construct packet with required fragments\r\n    var encoded = [\r\n        type\r\n      , id + (ack == 'data' ? '+' : '')\r\n      , endpoint\r\n    ];\r\n\r\n    // data fragment is optional\r\n    if (data !== null && data !== undefined)\r\n      encoded.push(data);\r\n\r\n    return encoded.join(':');\r\n  };\r\n\r\n  /**\r\n   * Encodes multiple messages (payload).\r\n   *\r\n   * @param {Array} messages\r\n   * @api private\r\n   */\r\n\r\n  parser.encodePayload = function (packets) {\r\n    var decoded = '';\r\n\r\n    if (packets.length == 1)\r\n      return packets[0];\r\n\r\n    for (var i = 0, l = packets.length; i < l; i++) {\r\n      var packet = packets[i];\r\n      decoded += '\\ufffd' + packet.length + '\\ufffd' + packets[i];\r\n    }\r\n\r\n    return decoded;\r\n  };\r\n\r\n  /**\r\n   * Decodes a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  var regexp = /([^:]+):([0-9]+)?(\\+)?:([^:]+)?:?([\\s\\S]*)?/;\r\n\r\n  parser.decodePacket = function (data) {\r\n    var pieces = data.match(regexp);\r\n\r\n    if (!pieces) return {};\r\n\r\n    var id = pieces[2] || ''\r\n      , data = pieces[5] || ''\r\n      , packet = {\r\n            type: packets[pieces[1]]\r\n          , endpoint: pieces[4] || ''\r\n        };\r\n\r\n    // whether we need to acknowledge the packet\r\n    if (id) {\r\n      packet.id = id;\r\n      if (pieces[3])\r\n        packet.ack = 'data';\r\n      else\r\n        packet.ack = true;\r\n    }\r\n\r\n    // handle different packet types\r\n    switch (packet.type) {\r\n      case 'error':\r\n        var pieces = data.split('+');\r\n        packet.reason = reasons[pieces[0]] || '';\r\n        packet.advice = advice[pieces[1]] || '';\r\n        break;\r\n\r\n      case 'message':\r\n        packet.data = data || '';\r\n        break;\r\n\r\n      case 'event':\r\n        try {\r\n          var opts = JSON.parse(data);\r\n          packet.name = opts.name;\r\n          packet.args = opts.args;\r\n        } catch (e) { }\r\n\r\n        packet.args = packet.args || [];\r\n        break;\r\n\r\n      case 'json':\r\n        try {\r\n          packet.data = JSON.parse(data);\r\n        } catch (e) { }\r\n        break;\r\n\r\n      case 'connect':\r\n        packet.qs = data || '';\r\n        break;\r\n\r\n      case 'ack':\r\n        var pieces = data.match(/^([0-9]+)(\\+)?(.*)/);\r\n        if (pieces) {\r\n          packet.ackId = pieces[1];\r\n          packet.args = [];\r\n\r\n          if (pieces[3]) {\r\n            try {\r\n              packet.args = pieces[3] ? JSON.parse(pieces[3]) : [];\r\n            } catch (e) { }\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'disconnect':\r\n      case 'heartbeat':\r\n        break;\r\n    };\r\n\r\n    return packet;\r\n  };\r\n\r\n  /**\r\n   * Decodes data payload. Detects multiple messages\r\n   *\r\n   * @return {Array} messages\r\n   * @api public\r\n   */\r\n\r\n  parser.decodePayload = function (data) {\r\n    // IE doesn't like data[i] for unicode chars, charAt works fine\r\n    if (data.charAt(0) == '\\ufffd') {\r\n      var ret = [];\r\n\r\n      for (var i = 1, length = ''; i < data.length; i++) {\r\n        if (data.charAt(i) == '\\ufffd') {\r\n          ret.push(parser.decodePacket(data.substr(i + 1).substr(0, length)));\r\n          i += Number(length) + 1;\r\n          length = '';\r\n        } else {\r\n          length += data.charAt(i);\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    } else {\r\n      return [parser.decodePacket(data)];\r\n    }\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Transport = Transport;\r\n\r\n  /**\r\n   * This is the transport template for all supported transport methods.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function Transport (socket, sessid) {\r\n    this.socket = socket;\r\n    this.sessid = sessid;\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Transport, io.EventEmitter);\r\n\r\n\r\n  /**\r\n   * Indicates whether heartbeats is enabled for this transport\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.heartbeats = function () {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Handles the response from the server. When a new response is received\r\n   * it will automatically update the timeout, decode the message and\r\n   * forwards the response to the onMessage function for further processing.\r\n   *\r\n   * @param {String} data Response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onData = function (data) {\r\n    this.clearCloseTimeout();\r\n    \r\n    // If the connection in currently open (or in a reopening state) reset the close \r\n    // timeout since we have just received data. This check is necessary so\r\n    // that we don't reset the timeout on an explicitly disconnected connection.\r\n    if (this.socket.connected || this.socket.connecting || this.socket.reconnecting) {\r\n      this.setCloseTimeout();\r\n    }\r\n\r\n    if (data !== '') {\r\n      // todo: we should only do decodePayload for xhr transports\r\n      var msgs = io.parser.decodePayload(data);\r\n\r\n      if (msgs && msgs.length) {\r\n        for (var i = 0, l = msgs.length; i < l; i++) {\r\n          this.onPacket(msgs[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles packets.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onPacket = function (packet) {\r\n    this.socket.setHeartbeatTimeout();\r\n\r\n    if (packet.type == 'heartbeat') {\r\n      return this.onHeartbeat();\r\n    }\r\n\r\n    if (packet.type == 'connect' && packet.endpoint == '') {\r\n      this.onConnect();\r\n    }\r\n\r\n    if (packet.type == 'error' && packet.advice == 'reconnect') {\r\n      this.isOpen = false;\r\n    }\r\n\r\n    this.socket.onPacket(packet);\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets close timeout\r\n   *\r\n   * @api private\r\n   */\r\n  \r\n  Transport.prototype.setCloseTimeout = function () {\r\n    if (!this.closeTimeout) {\r\n      var self = this;\r\n\r\n      this.closeTimeout = setTimeout(function () {\r\n        self.onDisconnect();\r\n      }, this.socket.closeTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onDisconnect = function () {\r\n    if (this.isOpen) this.close();\r\n    this.clearTimeouts();\r\n    this.socket.onDisconnect();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Called when transport connects\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onConnect = function () {\r\n    this.socket.onConnect();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clears close timeout\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearCloseTimeout = function () {\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n      this.closeTimeout = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Clear timeouts\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.clearTimeouts = function () {\r\n    this.clearCloseTimeout();\r\n\r\n    if (this.reopenTimeout) {\r\n      clearTimeout(this.reopenTimeout);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Sends a packet\r\n   *\r\n   * @param {Object} packet object.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.packet = function (packet) {\r\n    this.send(io.parser.encodePacket(packet));\r\n  };\r\n\r\n  /**\r\n   * Send the received heartbeat message back to server. So the server\r\n   * knows we are still connected.\r\n   *\r\n   * @param {String} heartbeat Heartbeat response from the server.\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onHeartbeat = function (heartbeat) {\r\n    this.packet({ type: 'heartbeat' });\r\n  };\r\n \r\n  /**\r\n   * Called when the transport opens.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onOpen = function () {\r\n    this.isOpen = true;\r\n    this.clearCloseTimeout();\r\n    this.socket.onOpen();\r\n  };\r\n\r\n  /**\r\n   * Notifies the base when the connection with the Socket.IO server\r\n   * has been disconnected.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.onClose = function () {\r\n    var self = this;\r\n\r\n    /* FIXME: reopen delay causing a infinit loop\r\n    this.reopenTimeout = setTimeout(function () {\r\n      self.open();\r\n    }, this.socket.options['reopen delay']);*/\r\n\r\n    this.isOpen = false;\r\n    this.socket.onClose();\r\n    this.onDisconnect();\r\n  };\r\n\r\n  /**\r\n   * Generates a connection url based on the Socket.IO URL Protocol.\r\n   * See <https://github.com/learnboost/socket.io-node/> for more details.\r\n   *\r\n   * @returns {String} Connection url\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.prepareUrl = function () {\r\n    var options = this.socket.options;\r\n\r\n    return this.scheme() + '://'\r\n      + options.host + ':' + options.port + '/'\r\n      + options.resource + '/' + io.protocol\r\n      + '/' + this.name + '/' + this.sessid;\r\n  };\r\n\r\n  /**\r\n   * Checks if the transport is ready to start a connection.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  Transport.prototype.ready = function (socket, fn) {\r\n    fn.call(this);\r\n  };\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.Socket = Socket;\r\n\r\n  /**\r\n   * Create a new `Socket.IO client` which can establish a persistent\r\n   * connection with a Socket.IO enabled server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  function Socket (options) {\r\n    this.options = {\r\n        port: 80\r\n      , secure: false\r\n      , document: 'document' in global ? document : false\r\n      , resource: 'socket.io'\r\n      , transports: io.transports\r\n      , 'connect timeout': 10000\r\n      , 'try multiple transports': true\r\n      , 'reconnect': true\r\n      , 'reconnection delay': 500\r\n      , 'reconnection limit': Infinity\r\n      , 'reopen delay': 3000\r\n      , 'max reconnection attempts': 10\r\n      , 'sync disconnect on unload': false\r\n      , 'auto connect': true\r\n      , 'flash policy port': 10843\r\n      , 'manualFlush': false\r\n    };\r\n\r\n    io.util.merge(this.options, options);\r\n\r\n    this.connected = false;\r\n    this.open = false;\r\n    this.connecting = false;\r\n    this.reconnecting = false;\r\n    this.namespaces = {};\r\n    this.buffer = [];\r\n    this.doBuffer = false;\r\n\r\n    if (this.options['sync disconnect on unload'] &&\r\n        (!this.isXDomain() || io.util.ua.hasCORS)) {\r\n      var self = this;\r\n      io.util.on(global, 'beforeunload', function () {\r\n        self.disconnectSync();\r\n      }, false);\r\n    }\r\n\r\n    if (this.options['auto connect']) {\r\n      this.connect();\r\n    }\r\n};\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(Socket, io.EventEmitter);\r\n\r\n  /**\r\n   * Returns a namespace listener/emitter for this socket\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.of = function (name) {\r\n    if (!this.namespaces[name]) {\r\n      this.namespaces[name] = new io.SocketNamespace(this, name);\r\n\r\n      if (name !== '') {\r\n        this.namespaces[name].packet({ type: 'connect' });\r\n      }\r\n    }\r\n\r\n    return this.namespaces[name];\r\n  };\r\n\r\n  /**\r\n   * Emits the given event to the Socket and all namespaces\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.publish = function () {\r\n    this.emit.apply(this, arguments);\r\n\r\n    var nsp;\r\n\r\n    for (var i in this.namespaces) {\r\n      if (this.namespaces.hasOwnProperty(i)) {\r\n        nsp = this.of(i);\r\n        nsp.$emit.apply(nsp, arguments);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Performs the handshake\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  Socket.prototype.handshake = function (fn) {\r\n    var self = this\r\n      , options = this.options;\r\n\r\n    function complete (data) {\r\n      if (data instanceof Error) {\r\n        self.connecting = false;\r\n        self.onError(data.message);\r\n      } else {\r\n        fn.apply(null, data.split(':'));\r\n      }\r\n    };\r\n\r\n    var url = [\r\n          'http' + (options.secure ? 's' : '') + ':/'\r\n        , options.host + ':' + options.port\r\n        , options.resource\r\n        , io.protocol\r\n        , io.util.query(this.options.query, 't=' + +new Date)\r\n      ].join('/');\r\n\r\n    if (this.isXDomain() && !io.util.ua.hasCORS) {\r\n      var insertAt = document.getElementsByTagName('script')[0]\r\n        , script = document.createElement('script');\r\n\r\n      script.src = url + '&jsonp=' + io.j.length;\r\n      insertAt.parentNode.insertBefore(script, insertAt);\r\n\r\n      io.j.push(function (data) {\r\n        complete(data);\r\n        script.parentNode.removeChild(script);\r\n      });\r\n    } else {\r\n      var xhr = io.util.request();\r\n\r\n      xhr.open('GET', url, true);\r\n      if (this.isXDomain()) {\r\n        xhr.withCredentials = true;\r\n      }\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n          xhr.onreadystatechange = empty;\r\n\r\n          if (xhr.status == 200) {\r\n            complete(xhr.responseText);\r\n          } else if (xhr.status == 403) {\r\n            self.onError(xhr.responseText);\r\n          } else {\r\n            self.connecting = false;            \r\n            !self.reconnecting && self.onError(xhr.responseText);\r\n          }\r\n        }\r\n      };\r\n      xhr.send(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find an available transport based on the options supplied in the constructor.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.getTransport = function (override) {\r\n    var transports = override || this.transports, match;\r\n\r\n    for (var i = 0, transport; transport = transports[i]; i++) {\r\n      if (io.Transport[transport]\r\n        && io.Transport[transport].check(this)\r\n        && (!this.isXDomain() || io.Transport[transport].xdomainCheck(this))) {\r\n        return new io.Transport[transport](this, this.sessionid);\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Connects to the server.\r\n   *\r\n   * @param {Function} [fn] Callback.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.connect = function (fn) {\r\n    if (this.connecting) {\r\n      return this;\r\n    }\r\n\r\n    var self = this;\r\n    self.connecting = true;\r\n    \r\n    this.handshake(function (sid, heartbeat, close, transports) {\r\n      self.sessionid = sid;\r\n      self.closeTimeout = close * 1000;\r\n      self.heartbeatTimeout = heartbeat * 1000;\r\n      if(!self.transports)\r\n          self.transports = self.origTransports = (transports ? io.util.intersect(\r\n              transports.split(',')\r\n            , self.options.transports\r\n          ) : self.options.transports);\r\n\r\n      self.setHeartbeatTimeout();\r\n\r\n      function connect (transports){\r\n        if (self.transport) self.transport.clearTimeouts();\r\n\r\n        self.transport = self.getTransport(transports);\r\n        if (!self.transport) return self.publish('connect_failed');\r\n\r\n        // once the transport is ready\r\n        self.transport.ready(self, function () {\r\n          self.connecting = true;\r\n          self.publish('connecting', self.transport.name);\r\n          self.transport.open();\r\n\r\n          if (self.options['connect timeout']) {\r\n            self.connectTimeoutTimer = setTimeout(function () {\r\n              if (!self.connected) {\r\n                self.connecting = false;\r\n\r\n                if (self.options['try multiple transports']) {\r\n                  var remaining = self.transports;\r\n\r\n                  while (remaining.length > 0 && remaining.splice(0,1)[0] !=\r\n                         self.transport.name) {}\r\n\r\n                    if (remaining.length){\r\n                      connect(remaining);\r\n                    } else {\r\n                      self.publish('connect_failed');\r\n                    }\r\n                }\r\n              }\r\n            }, self.options['connect timeout']);\r\n          }\r\n        });\r\n      }\r\n\r\n      connect(self.transports);\r\n\r\n      self.once('connect', function (){\r\n        clearTimeout(self.connectTimeoutTimer);\r\n\r\n        fn && typeof fn == 'function' && fn();\r\n      });\r\n    });\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Clears and sets a new heartbeat timeout using the value given by the\r\n   * server during the handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setHeartbeatTimeout = function () {\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n    if(this.transport && !this.transport.heartbeats()) return;\r\n\r\n    var self = this;\r\n    this.heartbeatTimeoutTimer = setTimeout(function () {\r\n      self.transport.onClose();\r\n    }, this.heartbeatTimeout);\r\n  };\r\n\r\n  /**\r\n   * Sends a message.\r\n   *\r\n   * @param {Object} data packet.\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.packet = function (data) {\r\n    if (this.connected && !this.doBuffer) {\r\n      this.transport.packet(data);\r\n    } else {\r\n      this.buffer.push(data);\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sets buffer state\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.setBuffer = function (v) {\r\n    this.doBuffer = v;\r\n\r\n    if (!v && this.connected && this.buffer.length) {\r\n      if (!this.options['manualFlush']) {\r\n        this.flushBuffer();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Flushes the buffer data over the wire.\r\n   * To be invoked manually when 'manualFlush' is set to true.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.flushBuffer = function() {\r\n    this.transport.payload(this.buffer);\r\n    this.buffer = [];\r\n  };\r\n  \r\n\r\n  /**\r\n   * Disconnect the established connect.\r\n   *\r\n   * @returns {io.Socket}\r\n   * @api public\r\n   */\r\n\r\n  Socket.prototype.disconnect = function () {\r\n    if (this.connected || this.connecting) {\r\n      if (this.open) {\r\n        this.of('').packet({ type: 'disconnect' });\r\n      }\r\n\r\n      // handle disconnection immediately\r\n      this.onDisconnect('booted');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnects the socket with a sync XHR.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.disconnectSync = function () {\r\n    // ensure disconnection\r\n    var xhr = io.util.request();\r\n    var uri = [\r\n        'http' + (this.options.secure ? 's' : '') + ':/'\r\n      , this.options.host + ':' + this.options.port\r\n      , this.options.resource\r\n      , io.protocol\r\n      , ''\r\n      , this.sessionid\r\n    ].join('/') + '/?disconnect=1';\r\n\r\n    xhr.open('GET', uri, false);\r\n    xhr.send(null);\r\n\r\n    // handle disconnection immediately\r\n    this.onDisconnect('booted');\r\n  };\r\n\r\n  /**\r\n   * Check if we need to use cross domain enabled transports. Cross domain would\r\n   * be a different port or different domain name.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.isXDomain = function () {\r\n\r\n    var port = global.location.port ||\r\n      ('https:' == global.location.protocol ? 443 : 80);\r\n\r\n    return this.options.host !== global.location.hostname \r\n      || this.options.port != port;\r\n  };\r\n\r\n  /**\r\n   * Called upon handshake.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onConnect = function () {\r\n    if (!this.connected) {\r\n      this.connected = true;\r\n      this.connecting = false;\r\n      if (!this.doBuffer) {\r\n        // make sure to flush the buffer\r\n        this.setBuffer(false);\r\n      }\r\n      this.emit('connect');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when the transport opens\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onOpen = function () {\r\n    this.open = true;\r\n  };\r\n\r\n  /**\r\n   * Called when the transport closes.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onClose = function () {\r\n    this.open = false;\r\n    clearTimeout(this.heartbeatTimeoutTimer);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport first opens a connection\r\n   *\r\n   * @param text\r\n   */\r\n\r\n  Socket.prototype.onPacket = function (packet) {\r\n    this.of(packet.endpoint).onPacket(packet);\r\n  };\r\n\r\n  /**\r\n   * Handles an error.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onError = function (err) {\r\n    if (err && err.advice) {\r\n      if (err.advice === 'reconnect' && (this.connected || this.connecting)) {\r\n        this.disconnect();\r\n        if (this.options.reconnect) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.publish('error', err && err.reason ? err.reason : err);\r\n  };\r\n\r\n  /**\r\n   * Called when the transport disconnects.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.onDisconnect = function (reason) {\r\n    var wasConnected = this.connected\r\n      , wasConnecting = this.connecting;\r\n\r\n    this.connected = false;\r\n    this.connecting = false;\r\n    this.open = false;\r\n\r\n    if (wasConnected || wasConnecting) {\r\n      this.transport.close();\r\n      this.transport.clearTimeouts();\r\n      if (wasConnected) {\r\n        this.publish('disconnect', reason);\r\n\r\n        if ('booted' != reason && this.options.reconnect && !this.reconnecting) {\r\n          this.reconnect();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called upon reconnection.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  Socket.prototype.reconnect = function () {\r\n    this.reconnecting = true;\r\n    this.reconnectionAttempts = 0;\r\n    this.reconnectionDelay = this.options['reconnection delay'];\r\n\r\n    var self = this\r\n      , maxAttempts = this.options['max reconnection attempts']\r\n      , tryMultiple = this.options['try multiple transports']\r\n      , limit = this.options['reconnection limit'];\r\n\r\n    function reset () {\r\n      if (self.connected) {\r\n        for (var i in self.namespaces) {\r\n          if (self.namespaces.hasOwnProperty(i) && '' !== i) {\r\n              self.namespaces[i].packet({ type: 'connect' });\r\n          }\r\n        }\r\n        self.publish('reconnect', self.transport.name, self.reconnectionAttempts);\r\n      }\r\n\r\n      clearTimeout(self.reconnectionTimer);\r\n\r\n      self.removeListener('connect_failed', maybeReconnect);\r\n      self.removeListener('connect', maybeReconnect);\r\n\r\n      self.reconnecting = false;\r\n\r\n      delete self.reconnectionAttempts;\r\n      delete self.reconnectionDelay;\r\n      delete self.reconnectionTimer;\r\n      delete self.redoTransports;\r\n\r\n      self.options['try multiple transports'] = tryMultiple;\r\n    };\r\n\r\n    function maybeReconnect () {\r\n      if (!self.reconnecting) {\r\n        return;\r\n      }\r\n\r\n      if (self.connected) {\r\n        return reset();\r\n      };\r\n\r\n      if (self.connecting && self.reconnecting) {\r\n        return self.reconnectionTimer = setTimeout(maybeReconnect, 1000);\r\n      }\r\n\r\n      if (self.reconnectionAttempts++ >= maxAttempts) {\r\n        if (!self.redoTransports) {\r\n          self.on('connect_failed', maybeReconnect);\r\n          self.options['try multiple transports'] = true;\r\n          self.transports = self.origTransports;\r\n          self.transport = self.getTransport();\r\n          self.redoTransports = true;\r\n          self.connect();\r\n        } else {\r\n          self.publish('reconnect_failed');\r\n          reset();\r\n        }\r\n      } else {\r\n        if (self.reconnectionDelay < limit) {\r\n          self.reconnectionDelay *= 2; // exponential back off\r\n        }\r\n\r\n        self.connect();\r\n        self.publish('reconnecting', self.reconnectionDelay, self.reconnectionAttempts);\r\n        self.reconnectionTimer = setTimeout(maybeReconnect, self.reconnectionDelay);\r\n      }\r\n    };\r\n\r\n    this.options['try multiple transports'] = false;\r\n    this.reconnectionTimer = setTimeout(maybeReconnect, this.reconnectionDelay);\r\n\r\n    this.on('connect', maybeReconnect);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , this\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.SocketNamespace = SocketNamespace;\r\n\r\n  /**\r\n   * Socket namespace constructor.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function SocketNamespace (socket, name) {\r\n    this.socket = socket;\r\n    this.name = name || '';\r\n    this.flags = {};\r\n    this.json = new Flag(this, 'json');\r\n    this.ackPackets = 0;\r\n    this.acks = {};\r\n  };\r\n\r\n  /**\r\n   * Apply EventEmitter mixin.\r\n   */\r\n\r\n  io.util.mixin(SocketNamespace, io.EventEmitter);\r\n\r\n  /**\r\n   * Copies emit since we override it\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.$emit = io.EventEmitter.prototype.emit;\r\n\r\n  /**\r\n   * Creates a new namespace, by proxying the request to the socket. This\r\n   * allows us to use the synax as we do on the server.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.of = function () {\r\n    return this.socket.of.apply(this.socket, arguments);\r\n  };\r\n\r\n  /**\r\n   * Sends a packet.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.packet = function (packet) {\r\n    packet.endpoint = this.name;\r\n    this.socket.packet(packet);\r\n    this.flags = {};\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Sends a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  SocketNamespace.prototype.send = function (data, fn) {\r\n    var packet = {\r\n        type: this.flags.json ? 'json' : 'message'\r\n      , data: data\r\n    };\r\n\r\n    if ('function' == typeof fn) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = true;\r\n      this.acks[packet.id] = fn;\r\n    }\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Emits an event\r\n   *\r\n   * @api public\r\n   */\r\n  \r\n  SocketNamespace.prototype.emit = function (name) {\r\n    var args = Array.prototype.slice.call(arguments, 1)\r\n      , lastArg = args[args.length - 1]\r\n      , packet = {\r\n            type: 'event'\r\n          , name: name\r\n        };\r\n\r\n    if ('function' == typeof lastArg) {\r\n      packet.id = ++this.ackPackets;\r\n      packet.ack = 'data';\r\n      this.acks[packet.id] = lastArg;\r\n      args = args.slice(0, args.length - 1);\r\n    }\r\n\r\n    packet.args = args;\r\n\r\n    return this.packet(packet);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the namespace\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.disconnect = function () {\r\n    if (this.name === '') {\r\n      this.socket.disconnect();\r\n    } else {\r\n      this.packet({ type: 'disconnect' });\r\n      this.$emit('disconnect');\r\n    }\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handles a packet\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  SocketNamespace.prototype.onPacket = function (packet) {\r\n    var self = this;\r\n\r\n    function ack () {\r\n      self.packet({\r\n          type: 'ack'\r\n        , args: io.util.toArray(arguments)\r\n        , ackId: packet.id\r\n      });\r\n    };\r\n\r\n    switch (packet.type) {\r\n      case 'connect':\r\n        this.$emit('connect');\r\n        break;\r\n\r\n      case 'disconnect':\r\n        if (this.name === '') {\r\n          this.socket.onDisconnect(packet.reason || 'booted');\r\n        } else {\r\n          this.$emit('disconnect', packet.reason);\r\n        }\r\n        break;\r\n\r\n      case 'message':\r\n      case 'json':\r\n        var params = ['message', packet.data];\r\n\r\n        if (packet.ack == 'data') {\r\n          params.push(ack);\r\n        } else if (packet.ack) {\r\n          this.packet({ type: 'ack', ackId: packet.id });\r\n        }\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'event':\r\n        var params = [packet.name].concat(packet.args);\r\n\r\n        if (packet.ack == 'data')\r\n          params.push(ack);\r\n\r\n        this.$emit.apply(this, params);\r\n        break;\r\n\r\n      case 'ack':\r\n        if (this.acks[packet.ackId]) {\r\n          this.acks[packet.ackId].apply(this, packet.args);\r\n          delete this.acks[packet.ackId];\r\n        }\r\n        break;\r\n\r\n      case 'error':\r\n        if (packet.advice){\r\n          this.socket.onError(packet);\r\n        } else {\r\n          if (packet.reason == 'unauthorized') {\r\n            this.$emit('connect_failed', packet.reason);\r\n          } else {\r\n            this.$emit('error', packet.reason);\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Flag interface.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function Flag (nsp, name) {\r\n    this.namespace = nsp;\r\n    this.name = name;\r\n  };\r\n\r\n  /**\r\n   * Send a message\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.send = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.send.apply(this.namespace, arguments);\r\n  };\r\n\r\n  /**\r\n   * Emit an event\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flag.prototype.emit = function () {\r\n    this.namespace.flags[this.name] = true;\r\n    this.namespace.emit.apply(this.namespace, arguments);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.websocket = WS;\r\n\r\n  /**\r\n   * The WebSocket transport uses the HTML5 WebSocket API to establish an\r\n   * persistent connection with the Socket.IO server. This transport will also\r\n   * be inherited by the FlashSocket fallback as it provides a API compatible\r\n   * polyfill for the WebSockets.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport}\r\n   * @api public\r\n   */\r\n\r\n  function WS (socket) {\r\n    io.Transport.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(WS, io.Transport);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.name = 'websocket';\r\n\r\n  /**\r\n   * Initializes a new `WebSocket` connection with the Socket.IO server. We attach\r\n   * all the appropriate listeners to handle the responses from the server.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.open = function () {\r\n    var query = io.util.query(this.socket.options.query)\r\n      , self = this\r\n      , Socket\r\n\r\n\r\n    if (!Socket) {\r\n      Socket = global.MozWebSocket || global.WebSocket;\r\n    }\r\n\r\n    this.websocket = new Socket(this.prepareUrl() + query);\r\n\r\n    this.websocket.onopen = function () {\r\n      self.onOpen();\r\n      self.socket.setBuffer(false);\r\n    };\r\n    this.websocket.onmessage = function (ev) {\r\n      self.onData(ev.data);\r\n    };\r\n    this.websocket.onclose = function () {\r\n      self.onClose();\r\n      self.socket.setBuffer(true);\r\n    };\r\n    this.websocket.onerror = function (e) {\r\n      self.onError(e);\r\n    };\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Send a message to the Socket.IO server. The message will automatically be\r\n   * encoded in the correct message format.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  // Do to a bug in the current IDevices browser, we need to wrap the send in a \r\n  // setTimeout, when they resume from sleeping the browser will crash if \r\n  // we don't allow the browser time to detect the socket has been closed\r\n  if (io.util.ua.iDevice) {\r\n    WS.prototype.send = function (data) {\r\n      var self = this;\r\n      setTimeout(function() {\r\n         self.websocket.send(data);\r\n      },0);\r\n      return this;\r\n    };\r\n  } else {\r\n    WS.prototype.send = function (data) {\r\n      this.websocket.send(data);\r\n      return this;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Payload\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.payload = function (arr) {\r\n    for (var i = 0, l = arr.length; i < l; i++) {\r\n      this.packet(arr[i]);\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnect the established `WebSocket` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  WS.prototype.close = function () {\r\n    this.websocket.close();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Handle the errors that `WebSocket` might be giving when we\r\n   * are attempting to connect or send messages.\r\n   *\r\n   * @param {Error} e The error.\r\n   * @api private\r\n   */\r\n\r\n  WS.prototype.onError = function (e) {\r\n    this.socket.onError(e);\r\n  };\r\n\r\n  /**\r\n   * Returns the appropriate scheme for the URI generation.\r\n   *\r\n   * @api private\r\n   */\r\n  WS.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'wss' : 'ws';\r\n  };\r\n\r\n  /**\r\n   * Checks if the browser has support for native `WebSockets` and that\r\n   * it's not the polyfill created for the FlashSocket transport.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.check = function () {\r\n    return ('WebSocket' in global && !('__addTask' in WebSocket))\r\n          || 'MozWebSocket' in global;\r\n  };\r\n\r\n  /**\r\n   * Check if the `WebSocket` transport support cross domain communications.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  WS.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('websocket');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , this\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.flashsocket = Flashsocket;\r\n\r\n  /**\r\n   * The FlashSocket transport. This is a API wrapper for the HTML5 WebSocket\r\n   * specification. It uses a .swf file to communicate with the server. If you want\r\n   * to serve the .swf file from a other server than where the Socket.IO script is\r\n   * coming from you need to use the insecure version of the .swf. More information\r\n   * about this can be found on the github page.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport.websocket}\r\n   * @api public\r\n   */\r\n\r\n  function Flashsocket () {\r\n    io.Transport.websocket.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(Flashsocket, io.Transport.websocket);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  Flashsocket.prototype.name = 'flashsocket';\r\n\r\n  /**\r\n   * Disconnect the established `FlashSocket` connection. This is done by adding a \r\n   * new task to the FlashSocket. The rest will be handled off by the `WebSocket` \r\n   * transport.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  Flashsocket.prototype.open = function () {\r\n    var self = this\r\n      , args = arguments;\r\n\r\n    WebSocket.__addTask(function () {\r\n      io.Transport.websocket.prototype.open.apply(self, args);\r\n    });\r\n    return this;\r\n  };\r\n  \r\n  /**\r\n   * Sends a message to the Socket.IO server. This is done by adding a new\r\n   * task to the FlashSocket. The rest will be handled off by the `WebSocket` \r\n   * transport.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  Flashsocket.prototype.send = function () {\r\n    var self = this, args = arguments;\r\n    WebSocket.__addTask(function () {\r\n      io.Transport.websocket.prototype.send.apply(self, args);\r\n    });\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established `FlashSocket` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  Flashsocket.prototype.close = function () {\r\n    WebSocket.__tasks.length = 0;\r\n    io.Transport.websocket.prototype.close.call(this);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * The WebSocket fall back needs to append the flash container to the body\r\n   * element, so we need to make sure we have access to it. Or defer the call\r\n   * until we are sure there is a body element.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  Flashsocket.prototype.ready = function (socket, fn) {\r\n    function init () {\r\n      var options = socket.options\r\n        , port = options['flash policy port']\r\n        , path = [\r\n              'http' + (options.secure ? 's' : '') + ':/'\r\n            , options.host + ':' + options.port\r\n            , options.resource\r\n            , 'static/flashsocket'\r\n            , 'WebSocketMain' + (socket.isXDomain() ? 'Insecure' : '') + '.swf'\r\n          ];\r\n\r\n      // Only start downloading the swf file when the checked that this browser\r\n      // actually supports it\r\n      if (!Flashsocket.loaded) {\r\n        if (typeof WEB_SOCKET_SWF_LOCATION === 'undefined') {\r\n          // Set the correct file based on the XDomain settings\r\n          WEB_SOCKET_SWF_LOCATION = path.join('/');\r\n        }\r\n\r\n        if (port !== 843) {\r\n          WebSocket.loadFlashPolicyFile('xmlsocket://' + options.host + ':' + port);\r\n        }\r\n\r\n        WebSocket.__initialize();\r\n        Flashsocket.loaded = true;\r\n      }\r\n\r\n      fn.call(self);\r\n    }\r\n\r\n    var self = this;\r\n    if (document.body) return init();\r\n\r\n    io.util.load(init);\r\n  };\r\n\r\n  /**\r\n   * Check if the FlashSocket transport is supported as it requires that the Adobe\r\n   * Flash Player plug-in version `10.0.0` or greater is installed. And also check if\r\n   * the polyfill is correctly loaded.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  Flashsocket.check = function () {\r\n    if (\r\n        typeof WebSocket == 'undefined'\r\n      || !('__initialize' in WebSocket) || !swfobject\r\n    ) return false;\r\n\r\n    return swfobject.getFlashPlayerVersion().major >= 10;\r\n  };\r\n\r\n  /**\r\n   * Check if the FlashSocket transport can be used as cross domain / cross origin \r\n   * transport. Because we can't see which type (secure or insecure) of .swf is used\r\n   * we will just return true.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  Flashsocket.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Disable AUTO_INITIALIZATION\r\n   */\r\n\r\n  if (typeof window != 'undefined') {\r\n    WEB_SOCKET_DISABLE_AUTO_INITIALIZATION = true;\r\n  }\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('flashsocket');\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n/*	SWFObject v2.2 <http://code.google.com/p/swfobject/> \r\n	is released under the MIT License <http://www.opensource.org/licenses/mit-license.php> \r\n*/\r\nif ('undefined' != typeof window) {\r\nvar swfobject=function(){var D=\"undefined\",r=\"object\",S=\"Shockwave Flash\",W=\"ShockwaveFlash.ShockwaveFlash\",q=\"application/x-shockwave-flash\",R=\"SWFObjectExprInst\",x=\"onreadystatechange\",O=window,j=document,t=navigator,T=false,U=[h],o=[],N=[],I=[],l,Q,E,B,J=false,a=false,n,G,m=true,M=function(){var aa=typeof j.getElementById!=D&&typeof j.getElementsByTagName!=D&&typeof j.createElement!=D,ah=t.userAgent.toLowerCase(),Y=t.platform.toLowerCase(),ae=Y?/win/.test(Y):/win/.test(ah),ac=Y?/mac/.test(Y):/mac/.test(ah),af=/webkit/.test(ah)?parseFloat(ah.replace(/^.*webkit\\/(\\d+(\\.\\d+)?).*$/,\"$1\")):false,X=!+\"\\v1\",ag=[0,0,0],ab=null;if(typeof t.plugins!=D&&typeof t.plugins[S]==r){ab=t.plugins[S].description;if(ab&&!(typeof t.mimeTypes!=D&&t.mimeTypes[q]&&!t.mimeTypes[q].enabledPlugin)){T=true;X=false;ab=ab.replace(/^.*\\s+(\\S+\\s+\\S+$)/,\"$1\");ag[0]=parseInt(ab.replace(/^(.*)\\..*$/,\"$1\"),10);ag[1]=parseInt(ab.replace(/^.*\\.(.*)\\s.*$/,\"$1\"),10);ag[2]=/[a-zA-Z]/.test(ab)?parseInt(ab.replace(/^.*[a-zA-Z]+(.*)$/,\"$1\"),10):0}}else{if(typeof O[(['Active'].concat('Object').join('X'))]!=D){try{var ad=new window[(['Active'].concat('Object').join('X'))](W);if(ad){ab=ad.GetVariable(\"$version\");if(ab){X=true;ab=ab.split(\" \")[1].split(\",\");ag=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}}catch(Z){}}}return{w3:aa,pv:ag,wk:af,ie:X,win:ae,mac:ac}}(),k=function(){if(!M.w3){return}if((typeof j.readyState!=D&&j.readyState==\"complete\")||(typeof j.readyState==D&&(j.getElementsByTagName(\"body\")[0]||j.body))){f()}if(!J){if(typeof j.addEventListener!=D){j.addEventListener(\"DOMContentLoaded\",f,false)}if(M.ie&&M.win){j.attachEvent(x,function(){if(j.readyState==\"complete\"){j.detachEvent(x,arguments.callee);f()}});if(O==top){(function(){if(J){return}try{j.documentElement.doScroll(\"left\")}catch(X){setTimeout(arguments.callee,0);return}f()})()}}if(M.wk){(function(){if(J){return}if(!/loaded|complete/.test(j.readyState)){setTimeout(arguments.callee,0);return}f()})()}s(f)}}();function f(){if(J){return}try{var Z=j.getElementsByTagName(\"body\")[0].appendChild(C(\"span\"));Z.parentNode.removeChild(Z)}catch(aa){return}J=true;var X=U.length;for(var Y=0;Y<X;Y++){U[Y]()}}function K(X){if(J){X()}else{U[U.length]=X}}function s(Y){if(typeof O.addEventListener!=D){O.addEventListener(\"load\",Y,false)}else{if(typeof j.addEventListener!=D){j.addEventListener(\"load\",Y,false)}else{if(typeof O.attachEvent!=D){i(O,\"onload\",Y)}else{if(typeof O.onload==\"function\"){var X=O.onload;O.onload=function(){X();Y()}}else{O.onload=Y}}}}}function h(){if(T){V()}else{H()}}function V(){var X=j.getElementsByTagName(\"body\")[0];var aa=C(r);aa.setAttribute(\"type\",q);var Z=X.appendChild(aa);if(Z){var Y=0;(function(){if(typeof Z.GetVariable!=D){var ab=Z.GetVariable(\"$version\");if(ab){ab=ab.split(\" \")[1].split(\",\");M.pv=[parseInt(ab[0],10),parseInt(ab[1],10),parseInt(ab[2],10)]}}else{if(Y<10){Y++;setTimeout(arguments.callee,10);return}}X.removeChild(aa);Z=null;H()})()}else{H()}}function H(){var ag=o.length;if(ag>0){for(var af=0;af<ag;af++){var Y=o[af].id;var ab=o[af].callbackFn;var aa={success:false,id:Y};if(M.pv[0]>0){var ae=c(Y);if(ae){if(F(o[af].swfVersion)&&!(M.wk&&M.wk<312)){w(Y,true);if(ab){aa.success=true;aa.ref=z(Y);ab(aa)}}else{if(o[af].expressInstall&&A()){var ai={};ai.data=o[af].expressInstall;ai.width=ae.getAttribute(\"width\")||\"0\";ai.height=ae.getAttribute(\"height\")||\"0\";if(ae.getAttribute(\"class\")){ai.styleclass=ae.getAttribute(\"class\")}if(ae.getAttribute(\"align\")){ai.align=ae.getAttribute(\"align\")}var ah={};var X=ae.getElementsByTagName(\"param\");var ac=X.length;for(var ad=0;ad<ac;ad++){if(X[ad].getAttribute(\"name\").toLowerCase()!=\"movie\"){ah[X[ad].getAttribute(\"name\")]=X[ad].getAttribute(\"value\")}}P(ai,ah,Y,ab)}else{p(ae);if(ab){ab(aa)}}}}}else{w(Y,true);if(ab){var Z=z(Y);if(Z&&typeof Z.SetVariable!=D){aa.success=true;aa.ref=Z}ab(aa)}}}}}function z(aa){var X=null;var Y=c(aa);if(Y&&Y.nodeName==\"OBJECT\"){if(typeof Y.SetVariable!=D){X=Y}else{var Z=Y.getElementsByTagName(r)[0];if(Z){X=Z}}}return X}function A(){return !a&&F(\"6.0.65\")&&(M.win||M.mac)&&!(M.wk&&M.wk<312)}function P(aa,ab,X,Z){a=true;E=Z||null;B={success:false,id:X};var ae=c(X);if(ae){if(ae.nodeName==\"OBJECT\"){l=g(ae);Q=null}else{l=ae;Q=X}aa.id=R;if(typeof aa.width==D||(!/%$/.test(aa.width)&&parseInt(aa.width,10)<310)){aa.width=\"310\"}if(typeof aa.height==D||(!/%$/.test(aa.height)&&parseInt(aa.height,10)<137)){aa.height=\"137\"}j.title=j.title.slice(0,47)+\" - Flash Player Installation\";var ad=M.ie&&M.win?(['Active'].concat('').join('X')):\"PlugIn\",ac=\"MMredirectURL=\"+O.location.toString().replace(/&/g,\"%26\")+\"&MMplayerType=\"+ad+\"&MMdoctitle=\"+j.title;if(typeof ab.flashvars!=D){ab.flashvars+=\"&\"+ac}else{ab.flashvars=ac}if(M.ie&&M.win&&ae.readyState!=4){var Y=C(\"div\");X+=\"SWFObjectNew\";Y.setAttribute(\"id\",X);ae.parentNode.insertBefore(Y,ae);ae.style.display=\"none\";(function(){if(ae.readyState==4){ae.parentNode.removeChild(ae)}else{setTimeout(arguments.callee,10)}})()}u(aa,ab,X)}}function p(Y){if(M.ie&&M.win&&Y.readyState!=4){var X=C(\"div\");Y.parentNode.insertBefore(X,Y);X.parentNode.replaceChild(g(Y),X);Y.style.display=\"none\";(function(){if(Y.readyState==4){Y.parentNode.removeChild(Y)}else{setTimeout(arguments.callee,10)}})()}else{Y.parentNode.replaceChild(g(Y),Y)}}function g(ab){var aa=C(\"div\");if(M.win&&M.ie){aa.innerHTML=ab.innerHTML}else{var Y=ab.getElementsByTagName(r)[0];if(Y){var ad=Y.childNodes;if(ad){var X=ad.length;for(var Z=0;Z<X;Z++){if(!(ad[Z].nodeType==1&&ad[Z].nodeName==\"PARAM\")&&!(ad[Z].nodeType==8)){aa.appendChild(ad[Z].cloneNode(true))}}}}}return aa}function u(ai,ag,Y){var X,aa=c(Y);if(M.wk&&M.wk<312){return X}if(aa){if(typeof ai.id==D){ai.id=Y}if(M.ie&&M.win){var ah=\"\";for(var ae in ai){if(ai[ae]!=Object.prototype[ae]){if(ae.toLowerCase()==\"data\"){ag.movie=ai[ae]}else{if(ae.toLowerCase()==\"styleclass\"){ah+=' class=\"'+ai[ae]+'\"'}else{if(ae.toLowerCase()!=\"classid\"){ah+=\" \"+ae+'=\"'+ai[ae]+'\"'}}}}}var af=\"\";for(var ad in ag){if(ag[ad]!=Object.prototype[ad]){af+='<param name=\"'+ad+'\" value=\"'+ag[ad]+'\" />'}}aa.outerHTML='<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"'+ah+\">\"+af+\"</object>\";N[N.length]=ai.id;X=c(ai.id)}else{var Z=C(r);Z.setAttribute(\"type\",q);for(var ac in ai){if(ai[ac]!=Object.prototype[ac]){if(ac.toLowerCase()==\"styleclass\"){Z.setAttribute(\"class\",ai[ac])}else{if(ac.toLowerCase()!=\"classid\"){Z.setAttribute(ac,ai[ac])}}}}for(var ab in ag){if(ag[ab]!=Object.prototype[ab]&&ab.toLowerCase()!=\"movie\"){e(Z,ab,ag[ab])}}aa.parentNode.replaceChild(Z,aa);X=Z}}return X}function e(Z,X,Y){var aa=C(\"param\");aa.setAttribute(\"name\",X);aa.setAttribute(\"value\",Y);Z.appendChild(aa)}function y(Y){var X=c(Y);if(X&&X.nodeName==\"OBJECT\"){if(M.ie&&M.win){X.style.display=\"none\";(function(){if(X.readyState==4){b(Y)}else{setTimeout(arguments.callee,10)}})()}else{X.parentNode.removeChild(X)}}}function b(Z){var Y=c(Z);if(Y){for(var X in Y){if(typeof Y[X]==\"function\"){Y[X]=null}}Y.parentNode.removeChild(Y)}}function c(Z){var X=null;try{X=j.getElementById(Z)}catch(Y){}return X}function C(X){return j.createElement(X)}function i(Z,X,Y){Z.attachEvent(X,Y);I[I.length]=[Z,X,Y]}function F(Z){var Y=M.pv,X=Z.split(\".\");X[0]=parseInt(X[0],10);X[1]=parseInt(X[1],10)||0;X[2]=parseInt(X[2],10)||0;return(Y[0]>X[0]||(Y[0]==X[0]&&Y[1]>X[1])||(Y[0]==X[0]&&Y[1]==X[1]&&Y[2]>=X[2]))?true:false}function v(ac,Y,ad,ab){if(M.ie&&M.mac){return}var aa=j.getElementsByTagName(\"head\")[0];if(!aa){return}var X=(ad&&typeof ad==\"string\")?ad:\"screen\";if(ab){n=null;G=null}if(!n||G!=X){var Z=C(\"style\");Z.setAttribute(\"type\",\"text/css\");Z.setAttribute(\"media\",X);n=aa.appendChild(Z);if(M.ie&&M.win&&typeof j.styleSheets!=D&&j.styleSheets.length>0){n=j.styleSheets[j.styleSheets.length-1]}G=X}if(M.ie&&M.win){if(n&&typeof n.addRule==r){n.addRule(ac,Y)}}else{if(n&&typeof j.createTextNode!=D){n.appendChild(j.createTextNode(ac+\" {\"+Y+\"}\"))}}}function w(Z,X){if(!m){return}var Y=X?\"visible\":\"hidden\";if(J&&c(Z)){c(Z).style.visibility=Y}else{v(\"#\"+Z,\"visibility:\"+Y)}}function L(Y){var Z=/[\\\\\\\"<>\\.;]/;var X=Z.exec(Y)!=null;return X&&typeof encodeURIComponent!=D?encodeURIComponent(Y):Y}var d=function(){if(M.ie&&M.win){window.attachEvent(\"onunload\",function(){var ac=I.length;for(var ab=0;ab<ac;ab++){I[ab][0].detachEvent(I[ab][1],I[ab][2])}var Z=N.length;for(var aa=0;aa<Z;aa++){y(N[aa])}for(var Y in M){M[Y]=null}M=null;for(var X in swfobject){swfobject[X]=null}swfobject=null})}}();return{registerObject:function(ab,X,aa,Z){if(M.w3&&ab&&X){var Y={};Y.id=ab;Y.swfVersion=X;Y.expressInstall=aa;Y.callbackFn=Z;o[o.length]=Y;w(ab,false)}else{if(Z){Z({success:false,id:ab})}}},getObjectById:function(X){if(M.w3){return z(X)}},embedSWF:function(ab,ah,ae,ag,Y,aa,Z,ad,af,ac){var X={success:false,id:ah};if(M.w3&&!(M.wk&&M.wk<312)&&ab&&ah&&ae&&ag&&Y){w(ah,false);K(function(){ae+=\"\";ag+=\"\";var aj={};if(af&&typeof af===r){for(var al in af){aj[al]=af[al]}}aj.data=ab;aj.width=ae;aj.height=ag;var am={};if(ad&&typeof ad===r){for(var ak in ad){am[ak]=ad[ak]}}if(Z&&typeof Z===r){for(var ai in Z){if(typeof am.flashvars!=D){am.flashvars+=\"&\"+ai+\"=\"+Z[ai]}else{am.flashvars=ai+\"=\"+Z[ai]}}}if(F(Y)){var an=u(aj,am,ah);if(aj.id==ah){w(ah,true)}X.success=true;X.ref=an}else{if(aa&&A()){aj.data=aa;P(aj,am,ah,ac);return}else{w(ah,true)}}if(ac){ac(X)}})}else{if(ac){ac(X)}}},switchOffAutoHideShow:function(){m=false},ua:M,getFlashPlayerVersion:function(){return{major:M.pv[0],minor:M.pv[1],release:M.pv[2]}},hasFlashPlayerVersion:F,createSWF:function(Z,Y,X){if(M.w3){return u(Z,Y,X)}else{return undefined}},showExpressInstall:function(Z,aa,X,Y){if(M.w3&&A()){P(Z,aa,X,Y)}},removeSWF:function(X){if(M.w3){y(X)}},createCSS:function(aa,Z,Y,X){if(M.w3){v(aa,Z,Y,X)}},addDomLoadEvent:K,addLoadEvent:s,getQueryParamValue:function(aa){var Z=j.location.search||j.location.hash;if(Z){if(/\\?/.test(Z)){Z=Z.split(\"?\")[1]}if(aa==null){return L(Z)}var Y=Z.split(\"&\");for(var X=0;X<Y.length;X++){if(Y[X].substring(0,Y[X].indexOf(\"=\"))==aa){return L(Y[X].substring((Y[X].indexOf(\"=\")+1)))}}}return\"\"},expressInstallCallback:function(){if(a){var X=c(R);if(X&&l){X.parentNode.replaceChild(l,X);if(Q){w(Q,true);if(M.ie&&M.win){l.style.display=\"block\"}}if(E){E(B)}}a=false}}}}();\r\n}\r\n// Copyright: Hiroshi Ichikawa <http://gimite.net/en/>\r\n// License: New BSD License\r\n// Reference: http://dev.w3.org/html5/websockets/\r\n// Reference: http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol\r\n\r\n(function() {\r\n  \r\n  if ('undefined' == typeof window || window.WebSocket) return;\r\n\r\n  var console = window.console;\r\n  if (!console || !console.log || !console.error) {\r\n    console = {log: function(){ }, error: function(){ }};\r\n  }\r\n  \r\n  if (!swfobject.hasFlashPlayerVersion(\"10.0.0\")) {\r\n    console.error(\"Flash Player >= 10.0.0 is required.\");\r\n    return;\r\n  }\r\n  if (location.protocol == \"file:\") {\r\n    console.error(\r\n      \"WARNING: web-socket-js doesn't work in file:///... URL \" +\r\n      \"unless you set Flash Security Settings properly. \" +\r\n      \"Open the page via Web server i.e. http://...\");\r\n  }\r\n\r\n  /**\r\n   * This class represents a faux web socket.\r\n   * @param {string} url\r\n   * @param {array or string} protocols\r\n   * @param {string} proxyHost\r\n   * @param {int} proxyPort\r\n   * @param {string} headers\r\n   */\r\n  WebSocket = function(url, protocols, proxyHost, proxyPort, headers) {\r\n    var self = this;\r\n    self.__id = WebSocket.__nextId++;\r\n    WebSocket.__instances[self.__id] = self;\r\n    self.readyState = WebSocket.CONNECTING;\r\n    self.bufferedAmount = 0;\r\n    self.__events = {};\r\n    if (!protocols) {\r\n      protocols = [];\r\n    } else if (typeof protocols == \"string\") {\r\n      protocols = [protocols];\r\n    }\r\n    // Uses setTimeout() to make sure __createFlash() runs after the caller sets ws.onopen etc.\r\n    // Otherwise, when onopen fires immediately, onopen is called before it is set.\r\n    setTimeout(function() {\r\n      WebSocket.__addTask(function() {\r\n        WebSocket.__flash.create(\r\n            self.__id, url, protocols, proxyHost || null, proxyPort || 0, headers || null);\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  /**\r\n   * Send data to the web socket.\r\n   * @param {string} data  The data to send to the socket.\r\n   * @return {boolean}  True for success, false for failure.\r\n   */\r\n  WebSocket.prototype.send = function(data) {\r\n    if (this.readyState == WebSocket.CONNECTING) {\r\n      throw \"INVALID_STATE_ERR: Web Socket connection has not been established\";\r\n    }\r\n    // We use encodeURIComponent() here, because FABridge doesn't work if\r\n    // the argument includes some characters. We don't use escape() here\r\n    // because of this:\r\n    // https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Functions#escape_and_unescape_Functions\r\n    // But it looks decodeURIComponent(encodeURIComponent(s)) doesn't\r\n    // preserve all Unicode characters either e.g. \"\\uffff\" in Firefox.\r\n    // Note by wtritch: Hopefully this will not be necessary using ExternalInterface.  Will require\r\n    // additional testing.\r\n    var result = WebSocket.__flash.send(this.__id, encodeURIComponent(data));\r\n    if (result < 0) { // success\r\n      return true;\r\n    } else {\r\n      this.bufferedAmount += result;\r\n      return false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Close this web socket gracefully.\r\n   */\r\n  WebSocket.prototype.close = function() {\r\n    if (this.readyState == WebSocket.CLOSED || this.readyState == WebSocket.CLOSING) {\r\n      return;\r\n    }\r\n    this.readyState = WebSocket.CLOSING;\r\n    WebSocket.__flash.close(this.__id);\r\n  };\r\n\r\n  /**\r\n   * Implementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}\r\n   *\r\n   * @param {string} type\r\n   * @param {function} listener\r\n   * @param {boolean} useCapture\r\n   * @return void\r\n   */\r\n  WebSocket.prototype.addEventListener = function(type, listener, useCapture) {\r\n    if (!(type in this.__events)) {\r\n      this.__events[type] = [];\r\n    }\r\n    this.__events[type].push(listener);\r\n  };\r\n\r\n  /**\r\n   * Implementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}\r\n   *\r\n   * @param {string} type\r\n   * @param {function} listener\r\n   * @param {boolean} useCapture\r\n   * @return void\r\n   */\r\n  WebSocket.prototype.removeEventListener = function(type, listener, useCapture) {\r\n    if (!(type in this.__events)) return;\r\n    var events = this.__events[type];\r\n    for (var i = events.length - 1; i >= 0; --i) {\r\n      if (events[i] === listener) {\r\n        events.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Implementation of {@link <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-registration\">DOM 2 EventTarget Interface</a>}\r\n   *\r\n   * @param {Event} event\r\n   * @return void\r\n   */\r\n  WebSocket.prototype.dispatchEvent = function(event) {\r\n    var events = this.__events[event.type] || [];\r\n    for (var i = 0; i < events.length; ++i) {\r\n      events[i](event);\r\n    }\r\n    var handler = this[\"on\" + event.type];\r\n    if (handler) handler(event);\r\n  };\r\n\r\n  /**\r\n   * Handles an event from Flash.\r\n   * @param {Object} flashEvent\r\n   */\r\n  WebSocket.prototype.__handleEvent = function(flashEvent) {\r\n    if (\"readyState\" in flashEvent) {\r\n      this.readyState = flashEvent.readyState;\r\n    }\r\n    if (\"protocol\" in flashEvent) {\r\n      this.protocol = flashEvent.protocol;\r\n    }\r\n    \r\n    var jsEvent;\r\n    if (flashEvent.type == \"open\" || flashEvent.type == \"error\") {\r\n      jsEvent = this.__createSimpleEvent(flashEvent.type);\r\n    } else if (flashEvent.type == \"close\") {\r\n      // TODO implement jsEvent.wasClean\r\n      jsEvent = this.__createSimpleEvent(\"close\");\r\n    } else if (flashEvent.type == \"message\") {\r\n      var data = decodeURIComponent(flashEvent.message);\r\n      jsEvent = this.__createMessageEvent(\"message\", data);\r\n    } else {\r\n      throw \"unknown event type: \" + flashEvent.type;\r\n    }\r\n    \r\n    this.dispatchEvent(jsEvent);\r\n  };\r\n  \r\n  WebSocket.prototype.__createSimpleEvent = function(type) {\r\n    if (document.createEvent && window.Event) {\r\n      var event = document.createEvent(\"Event\");\r\n      event.initEvent(type, false, false);\r\n      return event;\r\n    } else {\r\n      return {type: type, bubbles: false, cancelable: false};\r\n    }\r\n  };\r\n  \r\n  WebSocket.prototype.__createMessageEvent = function(type, data) {\r\n    if (document.createEvent && window.MessageEvent && !window.opera) {\r\n      var event = document.createEvent(\"MessageEvent\");\r\n      event.initMessageEvent(\"message\", false, false, data, null, null, window, null);\r\n      return event;\r\n    } else {\r\n      // IE and Opera, the latter one truncates the data parameter after any 0x00 bytes.\r\n      return {type: type, data: data, bubbles: false, cancelable: false};\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Define the WebSocket readyState enumeration.\r\n   */\r\n  WebSocket.CONNECTING = 0;\r\n  WebSocket.OPEN = 1;\r\n  WebSocket.CLOSING = 2;\r\n  WebSocket.CLOSED = 3;\r\n\r\n  WebSocket.__flash = null;\r\n  WebSocket.__instances = {};\r\n  WebSocket.__tasks = [];\r\n  WebSocket.__nextId = 0;\r\n  \r\n  /**\r\n   * Load a new flash security policy file.\r\n   * @param {string} url\r\n   */\r\n  WebSocket.loadFlashPolicyFile = function(url){\r\n    WebSocket.__addTask(function() {\r\n      WebSocket.__flash.loadManualPolicyFile(url);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Loads WebSocketMain.swf and creates WebSocketMain object in Flash.\r\n   */\r\n  WebSocket.__initialize = function() {\r\n    if (WebSocket.__flash) return;\r\n    \r\n    if (WebSocket.__swfLocation) {\r\n      // For backword compatibility.\r\n      window.WEB_SOCKET_SWF_LOCATION = WebSocket.__swfLocation;\r\n    }\r\n    if (!window.WEB_SOCKET_SWF_LOCATION) {\r\n      console.error(\"[WebSocket] set WEB_SOCKET_SWF_LOCATION to location of WebSocketMain.swf\");\r\n      return;\r\n    }\r\n    var container = document.createElement(\"div\");\r\n    container.id = \"webSocketContainer\";\r\n    // Hides Flash box. We cannot use display: none or visibility: hidden because it prevents\r\n    // Flash from loading at least in IE. So we move it out of the screen at (-100, -100).\r\n    // But this even doesn't work with Flash Lite (e.g. in Droid Incredible). So with Flash\r\n    // Lite, we put it at (0, 0). This shows 1x1 box visible at left-top corner but this is\r\n    // the best we can do as far as we know now.\r\n    container.style.position = \"absolute\";\r\n    if (WebSocket.__isFlashLite()) {\r\n      container.style.left = \"0px\";\r\n      container.style.top = \"0px\";\r\n    } else {\r\n      container.style.left = \"-100px\";\r\n      container.style.top = \"-100px\";\r\n    }\r\n    var holder = document.createElement(\"div\");\r\n    holder.id = \"webSocketFlash\";\r\n    container.appendChild(holder);\r\n    document.body.appendChild(container);\r\n    // See this article for hasPriority:\r\n    // http://help.adobe.com/en_US/as3/mobile/WS4bebcd66a74275c36cfb8137124318eebc6-7ffd.html\r\n    swfobject.embedSWF(\r\n      WEB_SOCKET_SWF_LOCATION,\r\n      \"webSocketFlash\",\r\n      \"1\" /* width */,\r\n      \"1\" /* height */,\r\n      \"10.0.0\" /* SWF version */,\r\n      null,\r\n      null,\r\n      {hasPriority: true, swliveconnect : true, allowScriptAccess: \"always\"},\r\n      null,\r\n      function(e) {\r\n        if (!e.success) {\r\n          console.error(\"[WebSocket] swfobject.embedSWF failed\");\r\n        }\r\n      });\r\n  };\r\n  \r\n  /**\r\n   * Called by Flash to notify JS that it's fully loaded and ready\r\n   * for communication.\r\n   */\r\n  WebSocket.__onFlashInitialized = function() {\r\n    // We need to set a timeout here to avoid round-trip calls\r\n    // to flash during the initialization process.\r\n    setTimeout(function() {\r\n      WebSocket.__flash = document.getElementById(\"webSocketFlash\");\r\n      WebSocket.__flash.setCallerUrl(location.href);\r\n      WebSocket.__flash.setDebug(!!window.WEB_SOCKET_DEBUG);\r\n      for (var i = 0; i < WebSocket.__tasks.length; ++i) {\r\n        WebSocket.__tasks[i]();\r\n      }\r\n      WebSocket.__tasks = [];\r\n    }, 0);\r\n  };\r\n  \r\n  /**\r\n   * Called by Flash to notify WebSockets events are fired.\r\n   */\r\n  WebSocket.__onFlashEvent = function() {\r\n    setTimeout(function() {\r\n      try {\r\n        // Gets events using receiveEvents() instead of getting it from event object\r\n        // of Flash event. This is to make sure to keep message order.\r\n        // It seems sometimes Flash events don't arrive in the same order as they are sent.\r\n        var events = WebSocket.__flash.receiveEvents();\r\n        for (var i = 0; i < events.length; ++i) {\r\n          WebSocket.__instances[events[i].webSocketId].__handleEvent(events[i]);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }, 0);\r\n    return true;\r\n  };\r\n  \r\n  // Called by Flash.\r\n  WebSocket.__log = function(message) {\r\n    console.log(decodeURIComponent(message));\r\n  };\r\n  \r\n  // Called by Flash.\r\n  WebSocket.__error = function(message) {\r\n    console.error(decodeURIComponent(message));\r\n  };\r\n  \r\n  WebSocket.__addTask = function(task) {\r\n    if (WebSocket.__flash) {\r\n      task();\r\n    } else {\r\n      WebSocket.__tasks.push(task);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Test if the browser is running flash lite.\r\n   * @return {boolean} True if flash lite is running, false otherwise.\r\n   */\r\n  WebSocket.__isFlashLite = function() {\r\n    if (!window.navigator || !window.navigator.mimeTypes) {\r\n      return false;\r\n    }\r\n    var mimeType = window.navigator.mimeTypes[\"application/x-shockwave-flash\"];\r\n    if (!mimeType || !mimeType.enabledPlugin || !mimeType.enabledPlugin.filename) {\r\n      return false;\r\n    }\r\n    return mimeType.enabledPlugin.filename.match(/flashlite/i) ? true : false;\r\n  };\r\n  \r\n  if (!window.WEB_SOCKET_DISABLE_AUTO_INITIALIZATION) {\r\n    if (window.addEventListener) {\r\n      window.addEventListener(\"load\", function(){\r\n        WebSocket.__initialize();\r\n      }, false);\r\n    } else {\r\n      window.attachEvent(\"onload\", function(){\r\n        WebSocket.__initialize();\r\n      });\r\n    }\r\n  }\r\n  \r\n})();\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  exports.XHR = XHR;\r\n\r\n  /**\r\n   * XHR constructor\r\n   *\r\n   * @costructor\r\n   * @api public\r\n   */\r\n\r\n  function XHR (socket) {\r\n    if (!socket) return;\r\n\r\n    io.Transport.apply(this, arguments);\r\n    this.sendBuffer = [];\r\n  };\r\n\r\n  /**\r\n   * Inherits from Transport.\r\n   */\r\n\r\n  io.util.inherit(XHR, io.Transport);\r\n\r\n  /**\r\n   * Establish a connection\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.open = function () {\r\n    this.socket.setBuffer(false);\r\n    this.onOpen();\r\n    this.get();\r\n\r\n    // we need to make sure the request succeeds since we have no indication\r\n    // whether the request opened or not until it succeeded.\r\n    this.setCloseTimeout();\r\n\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Check if we need to send data to the Socket.IO server, if we have data in our\r\n   * buffer we encode it and forward it to the `post` method.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.payload = function (payload) {\r\n    var msgs = [];\r\n\r\n    for (var i = 0, l = payload.length; i < l; i++) {\r\n      msgs.push(io.parser.encodePacket(payload[i]));\r\n    }\r\n\r\n    this.send(io.parser.encodePayload(msgs));\r\n  };\r\n\r\n  /**\r\n   * Send data to the Socket.IO server.\r\n   *\r\n   * @param data The message\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.send = function (data) {\r\n    this.post(data);\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Posts a encoded message to the Socket.IO server.\r\n   *\r\n   * @param {String} data A encoded message.\r\n   * @api private\r\n   */\r\n\r\n  function empty () { };\r\n\r\n  XHR.prototype.post = function (data) {\r\n    var self = this;\r\n    this.socket.setBuffer(true);\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n        self.posting = false;\r\n\r\n        if (this.status == 200){\r\n          self.socket.setBuffer(false);\r\n        } else {\r\n          self.onClose();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onload () {\r\n      this.onload = empty;\r\n      self.socket.setBuffer(false);\r\n    };\r\n\r\n    this.sendXHR = this.request('POST');\r\n\r\n    if (global.XDomainRequest && this.sendXHR instanceof XDomainRequest) {\r\n      this.sendXHR.onload = this.sendXHR.onerror = onload;\r\n    } else {\r\n      this.sendXHR.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.sendXHR.send(data);\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established `XHR` connection.\r\n   *\r\n   * @returns {Transport}\r\n   * @api public\r\n   */\r\n\r\n  XHR.prototype.close = function () {\r\n    this.onClose();\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * Generates a configured XHR request\r\n   *\r\n   * @param {String} url The url that needs to be requested.\r\n   * @param {String} method The method the request should use.\r\n   * @returns {XMLHttpRequest}\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.request = function (method) {\r\n    var req = io.util.request(this.socket.isXDomain())\r\n      , query = io.util.query(this.socket.options.query, 't=' + +new Date);\r\n\r\n    req.open(method || 'GET', this.prepareUrl() + query, true);\r\n\r\n    if (method == 'POST') {\r\n      try {\r\n        if (req.setRequestHeader) {\r\n          req.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\r\n        } else {\r\n          // XDomainRequest\r\n          req.contentType = 'text/plain';\r\n        }\r\n      } catch (e) {}\r\n    }\r\n\r\n    return req;\r\n  };\r\n\r\n  /**\r\n   * Returns the scheme to use for the transport URLs.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHR.prototype.scheme = function () {\r\n    return this.socket.options.secure ? 'https' : 'http';\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transports are supported\r\n   *\r\n   * @param {Boolean} xdomain Check if we support cross domain requests.\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.check = function (socket, xdomain) {\r\n    try {\r\n      var request = io.util.request(xdomain),\r\n          usesXDomReq = (global.XDomainRequest && request instanceof XDomainRequest),\r\n          socketProtocol = (socket && socket.options && socket.options.secure ? 'https:' : 'http:'),\r\n          isXProtocol = (socketProtocol != global.location.protocol);\r\n      if (request && !(usesXDomReq && isXProtocol)) {\r\n        return true;\r\n      }\r\n    } catch(e) {}\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check if the XHR transport supports cross domain requests.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  XHR.xdomainCheck = function (socket) {\r\n    return XHR.check(socket, true);\r\n  };\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , this\r\n);\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports.htmlfile = HTMLFile;\r\n\r\n  /**\r\n   * The HTMLFile transport creates a `forever iframe` based transport\r\n   * for Internet Explorer. Regular forever iframe implementations will \r\n   * continuously trigger the browsers buzy indicators. If the forever iframe\r\n   * is created inside a `htmlfile` these indicators will not be trigged.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport.XHR}\r\n   * @api public\r\n   */\r\n\r\n  function HTMLFile (socket) {\r\n    io.Transport.XHR.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR transport.\r\n   */\r\n\r\n  io.util.inherit(HTMLFile, io.Transport.XHR);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  HTMLFile.prototype.name = 'htmlfile';\r\n\r\n  /**\r\n   * Creates a new Ac...eX `htmlfile` with a forever loading iframe\r\n   * that can be used to listen to messages. Inside the generated\r\n   * `htmlfile` a reference will be made to the HTMLFile transport.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  HTMLFile.prototype.get = function () {\r\n    this.doc = new window[(['Active'].concat('Object').join('X'))]('htmlfile');\r\n    this.doc.open();\r\n    this.doc.write('<html></html>');\r\n    this.doc.close();\r\n    this.doc.parentWindow.s = this;\r\n\r\n    var iframeC = this.doc.createElement('div');\r\n    iframeC.className = 'socketio';\r\n\r\n    this.doc.body.appendChild(iframeC);\r\n    this.iframe = this.doc.createElement('iframe');\r\n\r\n    iframeC.appendChild(this.iframe);\r\n\r\n    var self = this\r\n      , query = io.util.query(this.socket.options.query, 't='+ +new Date);\r\n\r\n    this.iframe.src = this.prepareUrl() + query;\r\n\r\n    io.util.on(window, 'unload', function () {\r\n      self.destroy();\r\n    });\r\n  };\r\n\r\n  /**\r\n   * The Socket.IO server will write script tags inside the forever\r\n   * iframe, this function will be used as callback for the incoming\r\n   * information.\r\n   *\r\n   * @param {String} data The message\r\n   * @param {document} doc Reference to the context\r\n   * @api private\r\n   */\r\n\r\n  HTMLFile.prototype._ = function (data, doc) {\r\n    this.onData(data);\r\n    try {\r\n      var script = doc.getElementsByTagName('script')[0];\r\n      script.parentNode.removeChild(script);\r\n    } catch (e) { }\r\n  };\r\n\r\n  /**\r\n   * Destroy the established connection, iframe and `htmlfile`.\r\n   * And calls the `CollectGarbage` function of Internet Explorer\r\n   * to release the memory.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  HTMLFile.prototype.destroy = function () {\r\n    if (this.iframe){\r\n      try {\r\n        this.iframe.src = 'about:blank';\r\n      } catch(e){}\r\n\r\n      this.doc = null;\r\n      this.iframe.parentNode.removeChild(this.iframe);\r\n      this.iframe = null;\r\n\r\n      CollectGarbage();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disconnects the established connection.\r\n   *\r\n   * @returns {Transport} Chaining.\r\n   * @api public\r\n   */\r\n\r\n  HTMLFile.prototype.close = function () {\r\n    this.destroy();\r\n    return io.Transport.XHR.prototype.close.call(this);\r\n  };\r\n\r\n  /**\r\n   * Checks if the browser supports this transport. The browser\r\n   * must have an `Ac...eXObject` implementation.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  HTMLFile.check = function (socket) {\r\n    if (typeof window != \"undefined\" && (['Active'].concat('Object').join('X')) in window){\r\n      try {\r\n        var a = new window[(['Active'].concat('Object').join('X'))]('htmlfile');\r\n        return a && io.Transport.XHR.check(socket);\r\n      } catch(e){}\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Check if cross domain requests are supported.\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  HTMLFile.xdomainCheck = function () {\r\n    // we can probably do handling for sub-domains, we should\r\n    // test that it's cross domain but a subdomain here\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('htmlfile');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports['xhr-polling'] = XHRPolling;\r\n\r\n  /**\r\n   * The XHR-polling transport uses long polling XHR requests to create a\r\n   * \"persistent\" connection with the server.\r\n   *\r\n   * @constructor\r\n   * @api public\r\n   */\r\n\r\n  function XHRPolling () {\r\n    io.Transport.XHR.apply(this, arguments);\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR transport.\r\n   */\r\n\r\n  io.util.inherit(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Merge the properties from XHR transport\r\n   */\r\n\r\n  io.util.merge(XHRPolling, io.Transport.XHR);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.name = 'xhr-polling';\r\n\r\n  /**\r\n   * Indicates whether heartbeats is enabled for this transport\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.heartbeats = function () {\r\n    return false;\r\n  };\r\n\r\n  /** \r\n   * Establish a connection, for iPhone and Android this will be done once the page\r\n   * is loaded.\r\n   *\r\n   * @returns {Transport} Chaining.\r\n   * @api public\r\n   */\r\n\r\n  XHRPolling.prototype.open = function () {\r\n    var self = this;\r\n\r\n    io.Transport.XHR.prototype.open.call(self);\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Starts a XHR request to wait for incoming messages.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  function empty () {};\r\n\r\n  XHRPolling.prototype.get = function () {\r\n    if (!this.isOpen) return;\r\n\r\n    var self = this;\r\n\r\n    function stateChange () {\r\n      if (this.readyState == 4) {\r\n        this.onreadystatechange = empty;\r\n\r\n        if (this.status == 200) {\r\n          self.onData(this.responseText);\r\n          self.get();\r\n        } else {\r\n          self.onClose();\r\n        }\r\n      }\r\n    };\r\n\r\n    function onload () {\r\n      this.onload = empty;\r\n      this.onerror = empty;\r\n      self.onData(this.responseText);\r\n      self.get();\r\n    };\r\n\r\n    function onerror () {\r\n      self.onClose();\r\n    };\r\n\r\n    this.xhr = this.request();\r\n\r\n    if (global.XDomainRequest && this.xhr instanceof XDomainRequest) {\r\n      this.xhr.onload = onload;\r\n      this.xhr.onerror = onerror;\r\n    } else {\r\n      this.xhr.onreadystatechange = stateChange;\r\n    }\r\n\r\n    this.xhr.send(null);\r\n  };\r\n\r\n  /**\r\n   * Handle the unclean close behavior.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.onClose = function () {\r\n    io.Transport.XHR.prototype.onClose.call(this);\r\n\r\n    if (this.xhr) {\r\n      this.xhr.onreadystatechange = this.xhr.onload = this.xhr.onerror = empty;\r\n      try {\r\n        this.xhr.abort();\r\n      } catch(e){}\r\n      this.xhr = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Webkit based browsers show a infinit spinner when you start a XHR request\r\n   * before the browsers onload event is called so we need to defer opening of\r\n   * the transport until the onload event is called. Wrapping the cb in our\r\n   * defer method solve this.\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  XHRPolling.prototype.ready = function (socket, fn) {\r\n    var self = this;\r\n\r\n    io.util.defer(function () {\r\n      fn.call(self);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('xhr-polling');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , this\r\n);\r\n\r\n/**\r\n * socket.io\r\n * Copyright(c) 2011 LearnBoost <dev@learnboost.com>\r\n * MIT Licensed\r\n */\r\n\r\n(function (exports, io, global) {\r\n  /**\r\n   * There is a way to hide the loading indicator in Firefox. If you create and\r\n   * remove a iframe it will stop showing the current loading indicator.\r\n   * Unfortunately we can't feature detect that and UA sniffing is evil.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  var indicator = global.document && \"MozAppearance\" in\r\n    global.document.documentElement.style;\r\n\r\n  /**\r\n   * Expose constructor.\r\n   */\r\n\r\n  exports['jsonp-polling'] = JSONPPolling;\r\n\r\n  /**\r\n   * The JSONP transport creates an persistent connection by dynamically\r\n   * inserting a script tag in the page. This script tag will receive the\r\n   * information of the Socket.IO server. When new information is received\r\n   * it creates a new script tag for the new data stream.\r\n   *\r\n   * @constructor\r\n   * @extends {io.Transport.xhr-polling}\r\n   * @api public\r\n   */\r\n\r\n  function JSONPPolling (socket) {\r\n    io.Transport['xhr-polling'].apply(this, arguments);\r\n\r\n    this.index = io.j.length;\r\n\r\n    var self = this;\r\n\r\n    io.j.push(function (msg) {\r\n      self._(msg);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Inherits from XHR polling transport.\r\n   */\r\n\r\n  io.util.inherit(JSONPPolling, io.Transport['xhr-polling']);\r\n\r\n  /**\r\n   * Transport name\r\n   *\r\n   * @api public\r\n   */\r\n\r\n  JSONPPolling.prototype.name = 'jsonp-polling';\r\n\r\n  /**\r\n   * Posts a encoded message to the Socket.IO server using an iframe.\r\n   * The iframe is used because script tags can create POST based requests.\r\n   * The iframe is positioned outside of the view so the user does not\r\n   * notice it's existence.\r\n   *\r\n   * @param {String} data A encoded message.\r\n   * @api private\r\n   */\r\n\r\n  JSONPPolling.prototype.post = function (data) {\r\n    var self = this\r\n      , query = io.util.query(\r\n             this.socket.options.query\r\n          , 't='+ (+new Date) + '&i=' + this.index\r\n        );\r\n\r\n    if (!this.form) {\r\n      var form = document.createElement('form')\r\n        , area = document.createElement('textarea')\r\n        , id = this.iframeId = 'socketio_iframe_' + this.index\r\n        , iframe;\r\n\r\n      form.className = 'socketio';\r\n      form.style.position = 'absolute';\r\n      form.style.top = '0px';\r\n      form.style.left = '0px';\r\n      form.style.display = 'none';\r\n      form.target = id;\r\n      form.method = 'POST';\r\n      form.setAttribute('accept-charset', 'utf-8');\r\n      area.name = 'd';\r\n      form.appendChild(area);\r\n      document.body.appendChild(form);\r\n\r\n      this.form = form;\r\n      this.area = area;\r\n    }\r\n\r\n    this.form.action = this.prepareUrl() + query;\r\n\r\n    function complete () {\r\n      initIframe();\r\n      self.socket.setBuffer(false);\r\n    };\r\n\r\n    function initIframe () {\r\n      if (self.iframe) {\r\n        self.form.removeChild(self.iframe);\r\n      }\r\n\r\n      try {\r\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\r\n        iframe = document.createElement('<iframe name=\"'+ self.iframeId +'\">');\r\n      } catch (e) {\r\n        iframe = document.createElement('iframe');\r\n        iframe.name = self.iframeId;\r\n      }\r\n\r\n      iframe.id = self.iframeId;\r\n\r\n      self.form.appendChild(iframe);\r\n      self.iframe = iframe;\r\n    };\r\n\r\n    initIframe();\r\n\r\n    // we temporarily stringify until we figure out how to prevent\r\n    // browsers from turning `\\n` into `\\r\\n` in form inputs\r\n    this.area.value = io.JSON.stringify(data);\r\n\r\n    try {\r\n      this.form.submit();\r\n    } catch(e) {}\r\n\r\n    if (this.iframe.attachEvent) {\r\n      iframe.onreadystatechange = function () {\r\n        if (self.iframe.readyState == 'complete') {\r\n          complete();\r\n        }\r\n      };\r\n    } else {\r\n      this.iframe.onload = complete;\r\n    }\r\n\r\n    this.socket.setBuffer(true);\r\n  };\r\n  \r\n  /**\r\n   * Creates a new JSONP poll that can be used to listen\r\n   * for messages from the Socket.IO server.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  JSONPPolling.prototype.get = function () {\r\n    var self = this\r\n      , script = document.createElement('script')\r\n      , query = io.util.query(\r\n             this.socket.options.query\r\n          , 't='+ (+new Date) + '&i=' + this.index\r\n        );\r\n\r\n    if (this.script) {\r\n      this.script.parentNode.removeChild(this.script);\r\n      this.script = null;\r\n    }\r\n\r\n    script.async = true;\r\n    script.src = this.prepareUrl() + query;\r\n    script.onerror = function () {\r\n      self.onClose();\r\n    };\r\n\r\n    var insertAt = document.getElementsByTagName('script')[0]\r\n    insertAt.parentNode.insertBefore(script, insertAt);\r\n    this.script = script;\r\n\r\n    if (indicator) {\r\n      setTimeout(function () {\r\n        var iframe = document.createElement('iframe');\r\n        document.body.appendChild(iframe);\r\n        document.body.removeChild(iframe);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Callback function for the incoming message stream from the Socket.IO server.\r\n   *\r\n   * @param {String} data The message\r\n   * @api private\r\n   */\r\n\r\n  JSONPPolling.prototype._ = function (msg) {\r\n    this.onData(msg);\r\n    if (this.isOpen) {\r\n      this.get();\r\n    }\r\n    return this;\r\n  };\r\n\r\n  /**\r\n   * The indicator hack only works after onload\r\n   *\r\n   * @param {Socket} socket The socket instance that needs a transport\r\n   * @param {Function} fn The callback\r\n   * @api private\r\n   */\r\n\r\n  JSONPPolling.prototype.ready = function (socket, fn) {\r\n    var self = this;\r\n    if (!indicator) return fn.call(this);\r\n\r\n    io.util.load(function () {\r\n      fn.call(self);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Checks if browser supports this transport.\r\n   *\r\n   * @return {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  JSONPPolling.check = function () {\r\n    return 'document' in global;\r\n  };\r\n\r\n  /**\r\n   * Check if cross domain requests are supported\r\n   *\r\n   * @returns {Boolean}\r\n   * @api public\r\n   */\r\n\r\n  JSONPPolling.xdomainCheck = function () {\r\n    return true;\r\n  };\r\n\r\n  /**\r\n   * Add the transport to your public io.transports array.\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  io.transports.push('jsonp-polling');\r\n\r\n})(\r\n    'undefined' != typeof io ? io.Transport : module.exports\r\n  , 'undefined' != typeof io ? io : module.parent.exports\r\n  , this\r\n);\r\n\r\n})();\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))//@ sourceMappingURL=data:application/json;base64,");

},function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(updatedModules, renewedModules) {\r\n	var unacceptedModules = updatedModules.filter(function(moduleId) {\r\n		return renewedModules && renewedModules.indexOf(moduleId) < 0;\r\n	});\r\n\r\n	if(unacceptedModules.length > 0) {\r\n		console.warn("[HMR] The following modules couldn\'t be hot updated: (They would need a full reload!)");\r\n		unacceptedModules.forEach(function(moduleId) {\r\n			console.warn("[HMR]  - " + moduleId);\r\n		});\r\n	}\r\n\r\n	if(!renewedModules || renewedModules.length === 0) {\r\n		console.log("[HMR] Nothing hot updated.");\r\n	} else {\r\n		console.log("[HMR] Updated modules:");\r\n		renewedModules.forEach(function(moduleId) {\r\n			console.log("[HMR]  - " + moduleId);\r\n		});\r\n	}\r\n};\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9sb2ctYXBwbHktcmVzdWx0LmpzP2Q3NjIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcykge1xyXG5cdHZhciB1bmFjY2VwdGVkTW9kdWxlcyA9IHVwZGF0ZWRNb2R1bGVzLmZpbHRlcihmdW5jdGlvbihtb2R1bGVJZCkge1xyXG5cdFx0cmV0dXJuIHJlbmV3ZWRNb2R1bGVzICYmIHJlbmV3ZWRNb2R1bGVzLmluZGV4T2YobW9kdWxlSWQpIDwgMDtcclxuXHR9KTtcclxuXHJcblx0aWYodW5hY2NlcHRlZE1vZHVsZXMubGVuZ3RoID4gMCkge1xyXG5cdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVGhlIGZvbGxvd2luZyBtb2R1bGVzIGNvdWxkbid0IGJlIGhvdCB1cGRhdGVkOiAoVGhleSB3b3VsZCBuZWVkIGEgZnVsbCByZWxvYWQhKVwiKTtcclxuXHRcdHVuYWNjZXB0ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gIC0gXCIgKyBtb2R1bGVJZCk7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdGlmKCFyZW5ld2VkTW9kdWxlcyB8fCByZW5ld2VkTW9kdWxlcy5sZW5ndGggPT09IDApIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gTm90aGluZyBob3QgdXBkYXRlZC5cIik7XHJcblx0fSBlbHNlIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gVXBkYXRlZCBtb2R1bGVzOlwiKTtcclxuXHRcdHJlbmV3ZWRNb2R1bGVzLmZvckVhY2goZnVuY3Rpb24obW9kdWxlSWQpIHtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJbSE1SXSAgLSBcIiArIG1vZHVsZUlkKTtcclxuXHRcdH0pO1xyXG5cdH1cclxufTtcclxuXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAod2VicGFjaykvaG90L2xvZy1hcHBseS1yZXN1bHQuanNcbiAqKiBtb2R1bGUgaWQgPSAyMzhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjIzOC5qcyJ9')},function(module,exports,__webpack_require__){eval('/*\r\n	MIT License http://www.opensource.org/licenses/mit-license.php\r\n	Author Tobias Koppers @sokra\r\n*/\r\nif(true) {\r\n	var lastData;\r\n	var upToDate = function upToDate() {\r\n		return lastData.indexOf(__webpack_require__.h()) >= 0;\r\n	};\r\n	var check = function check() {\r\n		module.hot.check(function(err, updatedModules) {\r\n			if(err) {\r\n				if(module.hot.status() in {abort:1,fail:1}) {\r\n					console.warn("[HMR] Cannot check for update. Need to do a full reload!");\r\n					console.warn("[HMR] " + err.stack || err.message);\r\n				} else {\r\n					console.warn("[HMR] Update check failed: " + err.stack || err.message);\r\n				}\r\n				return;\r\n			}\r\n\r\n			if(!updatedModules) {\r\n				console.warn("[HMR] Cannot find update. Need to do a full reload!");\r\n				console.warn("[HMR] (Probably because of restarting the webpack-dev-server)")\r\n				return;\r\n			}\r\n\r\n			module.hot.apply({\r\n				ignoreUnaccepted: true\r\n			}, function(err, renewedModules) {\r\n				if(err) {\r\n					if(module.hot.status() in {abort:1,fail:1}) {\r\n						console.warn("[HMR] Cannot apply update. Need to do a full reload!");\r\n						console.warn("[HMR] " + err.stack || err.message);\r\n					} else {\r\n						console.warn("[HMR] Update failed: " + err.stack || err.message);\r\n					}\r\n					return;\r\n				}\r\n\r\n				if(!upToDate()) {\r\n					check();\r\n				}\r\n\r\n				__webpack_require__(238)(updatedModules, renewedModules);\r\n\r\n				if(upToDate()) {\r\n					console.log("[HMR] App is up to date.");\r\n				}\r\n			});\r\n		});\r\n	};\r\n	var addEventListener = window.addEventListener ? function(eventName, listener) {\r\n		window.addEventListener(eventName, listener, false);\r\n	} : function (eventName, listener) {\r\n		window.attachEvent(\'on\' + eventName, listener);\r\n	};\r\n	addEventListener("message", function(event) {\r\n		if(typeof event.data === "string" && event.data.indexOf("webpackHotUpdate") === 0) {\r\n			lastData = event.data;\r\n			if(!upToDate() && module.hot.status() === "idle") {\r\n				console.log("[HMR] Checking for updates on the server...");\r\n				check();\r\n			}\r\n		}\r\n	});\r\n	console.log("[HMR] Waiting for update signal from WDS...");\r\n} else {\r\n	throw new Error("[HMR] Hot Module Replacement is disabled.");\r\n}\r\n//@ sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2hvdC9vbmx5LWRldi1zZXJ2ZXIuanM/MmY4NyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsZUFBZTtBQUM5QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLGdDQUFnQyxlQUFlO0FBQy9DO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0EsQ0FBQztBQUNEO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXHJcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxyXG4qL1xyXG5pZihtb2R1bGUuaG90KSB7XHJcblx0dmFyIGxhc3REYXRhO1xyXG5cdHZhciB1cFRvRGF0ZSA9IGZ1bmN0aW9uIHVwVG9EYXRlKCkge1xyXG5cdFx0cmV0dXJuIGxhc3REYXRhLmluZGV4T2YoX193ZWJwYWNrX2hhc2hfXykgPj0gMDtcclxuXHR9O1xyXG5cdHZhciBjaGVjayA9IGZ1bmN0aW9uIGNoZWNrKCkge1xyXG5cdFx0bW9kdWxlLmhvdC5jaGVjayhmdW5jdGlvbihlcnIsIHVwZGF0ZWRNb2R1bGVzKSB7XHJcblx0XHRcdGlmKGVycikge1xyXG5cdFx0XHRcdGlmKG1vZHVsZS5ob3Quc3RhdHVzKCkgaW4ge2Fib3J0OjEsZmFpbDoxfSkge1xyXG5cdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGNoZWNrIGZvciB1cGRhdGUuIE5lZWQgdG8gZG8gYSBmdWxsIHJlbG9hZCFcIik7XHJcblx0XHRcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSBcIiArIGVyci5zdGFjayB8fCBlcnIubWVzc2FnZSk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUud2FybihcIltITVJdIFVwZGF0ZSBjaGVjayBmYWlsZWQ6IFwiICsgZXJyLnN0YWNrIHx8IGVyci5tZXNzYWdlKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZighdXBkYXRlZE1vZHVsZXMpIHtcclxuXHRcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSBDYW5ub3QgZmluZCB1cGRhdGUuIE5lZWQgdG8gZG8gYSBmdWxsIHJlbG9hZCFcIik7XHJcblx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gKFByb2JhYmx5IGJlY2F1c2Ugb2YgcmVzdGFydGluZyB0aGUgd2VicGFjay1kZXYtc2VydmVyKVwiKVxyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0bW9kdWxlLmhvdC5hcHBseSh7XHJcblx0XHRcdFx0aWdub3JlVW5hY2NlcHRlZDogdHJ1ZVxyXG5cdFx0XHR9LCBmdW5jdGlvbihlcnIsIHJlbmV3ZWRNb2R1bGVzKSB7XHJcblx0XHRcdFx0aWYoZXJyKSB7XHJcblx0XHRcdFx0XHRpZihtb2R1bGUuaG90LnN0YXR1cygpIGluIHthYm9ydDoxLGZhaWw6MX0pIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gQ2Fubm90IGFwcGx5IHVwZGF0ZS4gTmVlZCB0byBkbyBhIGZ1bGwgcmVsb2FkIVwiKTtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gXCIgKyBlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFwiW0hNUl0gVXBkYXRlIGZhaWxlZDogXCIgKyBlcnIuc3RhY2sgfHwgZXJyLm1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYoIXVwVG9EYXRlKCkpIHtcclxuXHRcdFx0XHRcdGNoZWNrKCk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXF1aXJlKFwiLi9sb2ctYXBwbHktcmVzdWx0XCIpKHVwZGF0ZWRNb2R1bGVzLCByZW5ld2VkTW9kdWxlcyk7XHJcblxyXG5cdFx0XHRcdGlmKHVwVG9EYXRlKCkpIHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gQXBwIGlzIHVwIHRvIGRhdGUuXCIpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHR9KTtcclxuXHR9O1xyXG5cdHZhciBhZGRFdmVudExpc3RlbmVyID0gd2luZG93LmFkZEV2ZW50TGlzdGVuZXIgPyBmdW5jdGlvbihldmVudE5hbWUsIGxpc3RlbmVyKSB7XHJcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGxpc3RlbmVyLCBmYWxzZSk7XHJcblx0fSA6IGZ1bmN0aW9uIChldmVudE5hbWUsIGxpc3RlbmVyKSB7XHJcblx0XHR3aW5kb3cuYXR0YWNoRXZlbnQoJ29uJyArIGV2ZW50TmFtZSwgbGlzdGVuZXIpO1xyXG5cdH07XHJcblx0YWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgZnVuY3Rpb24oZXZlbnQpIHtcclxuXHRcdGlmKHR5cGVvZiBldmVudC5kYXRhID09PSBcInN0cmluZ1wiICYmIGV2ZW50LmRhdGEuaW5kZXhPZihcIndlYnBhY2tIb3RVcGRhdGVcIikgPT09IDApIHtcclxuXHRcdFx0bGFzdERhdGEgPSBldmVudC5kYXRhO1xyXG5cdFx0XHRpZighdXBUb0RhdGUoKSAmJiBtb2R1bGUuaG90LnN0YXR1cygpID09PSBcImlkbGVcIikge1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKFwiW0hNUl0gQ2hlY2tpbmcgZm9yIHVwZGF0ZXMgb24gdGhlIHNlcnZlci4uLlwiKTtcclxuXHRcdFx0XHRjaGVjaygpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcblx0Y29uc29sZS5sb2coXCJbSE1SXSBXYWl0aW5nIGZvciB1cGRhdGUgc2lnbmFsIGZyb20gV0RTLi4uXCIpO1xyXG59IGVsc2Uge1xyXG5cdHRocm93IG5ldyBFcnJvcihcIltITVJdIEhvdCBNb2R1bGUgUmVwbGFjZW1lbnQgaXMgZGlzYWJsZWQuXCIpO1xyXG59XHJcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogKHdlYnBhY2spL2hvdC9vbmx5LWRldi1zZXJ2ZXIuanNcbiAqKiBtb2R1bGUgaWQgPSAyMzlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMVxuICoqLyJdLCJzb3VyY2VSb290IjoiIiwiZmlsZSI6IjIzOS5qcyJ9')},function(module,exports,__webpack_require__){eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n//@ sourceMappingURL=data:application/json;base64,")}]);